{"version":3,"sources":["hooks/useTickets.ts","hooks/useTokenBalance.ts","views/Home/components/CardBusdValue.tsx","hooks/useLastUpdated.ts","hooks/usePreviousValue.ts","views/Home/components/CardValue.tsx","hooks/useGetLotteryHasDrawn.ts","hooks/useAllowance.ts","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","utils/lotteryUtils.ts","hooks/useBuyLottery.ts","hooks/useApproval.ts","views/Lottery/components/TicketCard/PurchaseWarningModal.tsx","components/TicketInput/TicketInput.tsx","views/Lottery/components/TicketCard/BuyTicketModal.tsx"],"names":["useTotalRewards","useState","BIG_ZERO","rewards","setRewards","lotteryContract","useLottery","fastRefresh","useRefresh","useEffect","a","getTotalRewards","res","BigNumber","fetchBalance","useTotalClaim","claimAmount","setClaimAmount","claimLoading","setClaimLoading","account","useWeb3React","ticketsContract","useLotteryTicket","useLastUpdated","lastUpdated","setLastUpdated","useCallback","getTotalClaim","claim","useWinningNumbers","winningNumbers","setWinningNumbers","getWinningNumbers","useMatchingRewardLength","numbers","matchingNumbers","setMatchingNumbers","getMatchingRewardLength","matchedNumbaers","useTickets","lotteryNumber","tickets","setTickets","getTickets","useTotalSupply","slowRefresh","totalSupply","setTotalSupply","cakeContract","getCakeContract","methods","call","supply","fetchTotalSupply","useBurnedBalance","tokenAddress","balance","setBalance","web3","useWeb3","contract","getBep20Contract","balanceOf","useGetBnbBalance","eth","getBalance","walletBalance","refresh","useTokenBalance","CardBusdValue","props","fontSize","lineHeight","color","prefix","bold","decimals","Date","now","setStateLastUpdated","previousLastUpdated","usePreviousValue","value","ref","useRef","current","CardValue","useCountUp","start","end","duration","separator","undefined","countUp","update","updateValue","style","useGetLotteryHasDrawn","lotteryHasDrawn","setLotteryHasDrawn","getLotteryStatus","state","fetchLotteryStatus","useLotteryAllowance","allowance","setAllowance","useCake","getLotteryAddress","fetchAllowance","useIfoAllowance","tokenContract","spenderAddress","dependency","console","error","fetch","StyledSpacer","styled","div","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","theme","colors","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","map","child","i","multiCall","abi","calls","getWeb3NoAccount","multi","Contract","MultiCallAbi","getMulticallAddress","itf","Interface","newCalls","slice","calldata","toLowerCase","encodeFunctionData","aggregate","returnData","concat","index","decodeFunctionResult","multiBuy","price","numbersList","times","DEFAULT_TOKEN_DECIMAL","toString","send","from","on","tx","transactionHash","customLotteryNum","issueIndex","getTicketsAmount","calls1","Array","apply","options","address","ticketAbi","tokenIds","id","calls2","ticketIssues","finalTokenids","forEach","ticketIssue","eq","push","calls3","multiClaim","claimedStatus","unClaimedIds","filter","lotteryAbi","finalTokenIds","r","drawed","calls4","reduce","p","c","sum","getMax","maxNumber","getLotteryIssueIndex","matchNumber","historyAmount","amount","LOTTERY_TICKET_PRICE","toNumber","parseInt","historyNumbers","useMultiClaimLottery","lotteryTicketContract","onMultiClaim","txHash","useMultiBuyLottery","onMultiBuy","useMaxNumber","max","setMax","fetchMax","useApproval","onPresentApprove","requestedApproval","setRequestedApproval","onApprove","useLotteryApprove","handleApprove","TicketsList","primary","WarningModal","onDismiss","TranslateString","useI18n","title","width","onClick","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TicketInput","symbol","availableSymbol","onChange","onSelectMax","alignItems","type","inputMode","min","placeholder","toLocaleString","Tips","BuyTicketModal","val","setVal","pendingTx","setPendingTx","setRequestedBuy","fullBalance","useMemo","getBalanceNumber","maxTickets","getFullDisplayBalance","handleBuy","Math","floor","random","handleSelectMax","Number","LOTTERY_MAX_NUMBER_OF_TICKETS","e","currentTarget","validity","valid","num","Announce","Final","variant","disabled","isInteger"],"mappings":"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","file":"static/js/0.a45de3d2.chunk.js","sourcesContent":["import { useCallback, useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport useRefresh from './useRefresh'\nimport {\n  getTotalRewards,\n  getTotalClaim,\n  getMatchingRewardLength,\n  getWinningNumbers,\n  getTickets,\n} from '../utils/lotteryUtils'\nimport useLastUpdated from './useLastUpdated'\n\nconst useTickets = (lotteryNumber = null) => {\n  const [tickets, setTickets] = useState([])\n  const { account } = useWeb3React()\n  const ticketsContract = useLotteryTicket()\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTickets(lotteryContract, ticketsContract, account, lotteryNumber)\n      setTickets(res)\n    }\n\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, lotteryContract, ticketsContract, fastRefresh, lotteryNumber])\n\n  return tickets\n}\n\nexport const useTotalRewards = () => {\n  const [rewards, setRewards] = useState(BIG_ZERO)\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTotalRewards(lotteryContract)\n      setRewards(new BigNumber(res))\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, fastRefresh])\n\n  return rewards\n}\n\nexport const useTotalClaim = () => {\n  const [claimAmount, setClaimAmount] = useState(BIG_ZERO)\n  const [claimLoading, setClaimLoading] = useState(false)\n  const { account } = useWeb3React()\n  const ticketsContract = useLotteryTicket()\n  const lotteryContract = useLottery()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n\n  const fetchBalance = useCallback(async () => {\n    setClaimLoading(true)\n    const claim = await getTotalClaim(lotteryContract, ticketsContract, account)\n    setClaimAmount(claim)\n    setClaimLoading(false)\n  }, [account, lotteryContract, ticketsContract])\n\n  useEffect(() => {\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, fetchBalance, lotteryContract, ticketsContract, lastUpdated])\n\n  return { claimLoading, claimAmount, setLastUpdated }\n}\n\nexport const useWinningNumbers = () => {\n  const [winningNumbers, setWinningNumbers] = useState([0, 0, 0, 0])\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const rewards = await getWinningNumbers(lotteryContract)\n      setWinningNumbers(rewards)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [fastRefresh, lotteryContract, setWinningNumbers])\n\n  return winningNumbers\n}\n\nexport const useMatchingRewardLength = (numbers) => {\n  const [matchingNumbers, setMatchingNumbers] = useState(0)\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const matchedNumbaers = await getMatchingRewardLength(lotteryContract, numbers)\n      setMatchingNumbers(matchedNumbaers)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, numbers, fastRefresh])\n\n  return matchingNumbers\n}\n\nexport default useTickets\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport useWeb3 from './useWeb3'\nimport useRefresh from './useRefresh'\nimport useLastUpdated from './useLastUpdated'\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { account } = useWeb3React()\n  const web3 = useWeb3()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.balanceOf(account).call()\n      setBalance(new BigNumber(res))\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, web3, fastRefresh])\n\n  return balance\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getCakeContract()\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n  const web3 = useWeb3()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(res))\n    }\n\n    fetchBalance()\n  }, [web3, tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useGetBnbBalance = () => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { account } = useWeb3React()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  const web3 = useWeb3()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const walletBalance = await web3.eth.getBalance(account)\n      setBalance(new BigNumber(walletBalance))\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, web3, lastUpdated, setBalance])\n\n  return { balance, refresh: setLastUpdated }\n}\n\nexport default useTokenBalance\n","import React from 'react'\nimport CardValue, { CardValueProps } from './CardValue'\n\nconst CardBusdValue: React.FC<CardValueProps> = (props) => {\n  return (\n    <CardValue fontSize=\"14px\" lineHeight=\"1.1\" color=\"textSubtle\" prefix=\"~$\" bold={false} decimals={2} {...props} />\n  )\n}\n\nexport default CardBusdValue\n","import { useState } from 'react'\nimport usePreviousValue from './usePreviousValue'\n\n/**\n * A helper hook to keep track of the time between events\n * Can also be used to force an effect to re-run\n */\nconst useLastUpdated = () => {\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\n  const previousLastUpdated = usePreviousValue(lastUpdated)\n\n  const setLastUpdated = () => {\n    setStateLastUpdated(Date.now())\n  }\n\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\n}\n\nexport default useLastUpdated\n","import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  })\n\n  return ref.current\n}\n\nexport default usePreviousValue\n","import React, { useEffect, useRef } from 'react'\nimport { useCountUp } from 'react-countup'\nimport { Text } from '@pancakeswap-libs/uikit'\n\nexport interface CardValueProps {\n  value: number\n  decimals?: number\n  fontSize?: string\n  lineHeight?: string\n  prefix?: string\n  bold?: boolean\n  color?: string\n}\n\nconst CardValue: React.FC<CardValueProps> = ({\n  value,\n  decimals,\n  fontSize = '40px',\n  lineHeight = '1',\n  prefix = '',\n  bold = true,\n  color = 'text',\n}) => {\n  const { countUp, update } = useCountUp({\n    start: 0,\n    end: value,\n    duration: 1,\n    separator: ',',\n    decimals:\n      // eslint-disable-next-line no-nested-ternary\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\n  })\n\n  const updateValue = useRef(update)\n\n  useEffect(() => {\n    updateValue.current(value)\n  }, [value, updateValue])\n\n  return (\n    <Text bold={bold} fontSize={fontSize} style={{ lineHeight }} color={color}>\n      {prefix}\n      {countUp}\n    </Text>\n  )\n}\n\nexport default CardValue\n","import { useEffect, useState } from 'react'\nimport { useLottery } from 'hooks/useContract'\nimport { getLotteryStatus } from 'utils/lotteryUtils'\n\n/**\n * Returns whether or not the current lottery has drawn numbers\n *\n * @return {Boolean}\n */\nconst useGetLotteryHasDrawn = () => {\n  const [lotteryHasDrawn, setLotteryHasDrawn] = useState(true)\n  const lotteryContract = useLottery()\n\n  useEffect(() => {\n    if (lotteryContract) {\n      const fetchLotteryStatus = async () => {\n        const state = await getLotteryStatus(lotteryContract)\n        setLotteryHasDrawn(state)\n      }\n\n      fetchLotteryStatus()\n    }\n  }, [lotteryContract])\n\n  return lotteryHasDrawn\n}\n\nexport default useGetLotteryHasDrawn\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport { getLotteryAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { useCake } from './useContract'\nimport useRefresh from './useRefresh'\n\n// Retrieve lottery allowance\nexport const useLotteryAllowance = () => {\n  const [allowance, setAllowance] = useState(BIG_ZERO)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchAllowance = async () => {\n      const res = await cakeContract.methods.allowance(account, getLotteryAddress()).call()\n      setAllowance(new BigNumber(res))\n    }\n\n    if (account) {\n      fetchAllowance()\n    }\n  }, [account, cakeContract, fastRefresh])\n\n  return allowance\n}\n\n// Retrieve IFO allowance\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any): BigNumber => {\n  const { account } = useWeb3React()\n  const [allowance, setAllowance] = useState(BIG_ZERO)\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\n        setAllowance(new BigNumber(res))\n      } catch (e) {\n        console.error(e)\n      }\n    }\n\n    if (account) {\n      fetch()\n    }\n  }, [account, spenderAddress, tokenContract, dependency])\n\n  return allowance\n}\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px 0;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`\n\nexport default ModalActions\n","/* eslint-disable no-await-in-loop */\nimport BigNumber from 'bignumber.js'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport ticketAbi from 'config/abi/lotteryNft.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport { DEFAULT_TOKEN_DECIMAL, LOTTERY_TICKET_PRICE } from 'config'\nimport { AbiItem } from 'web3-utils'\nimport { getMulticallAddress } from './addressHelpers'\nimport { BIG_ZERO } from './bigNumber'\n\nexport const multiCall = async (abi, calls) => {\n  const web3 = getWeb3NoAccount()\n  const multi = new web3.eth.Contract((MultiCallAbi as unknown) as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n  let res = []\n  if (calls.length > 100) {\n    let i = 0\n    while (i < calls.length / 100) {\n      const newCalls = calls.slice(i * 100, 100 * (i + 1))\n      const calldata = newCalls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n      const { returnData } = await multi.methods.aggregate(calldata).call()\n      i++\n      res = res.concat(returnData.map((call, index) => itf.decodeFunctionResult(newCalls[index][1], call)))\n    }\n  } else {\n    const calldata = calls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n    const { returnData } = await multi.methods.aggregate(calldata).call()\n    res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i][1], call))\n  }\n  return res\n}\n\nexport const multiBuy = async (lotteryContract, price, numbersList, account) => {\n  try {\n    return lotteryContract.methods\n      .multiBuy(new BigNumber(price).times(DEFAULT_TOKEN_DECIMAL).toString(), numbersList)\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTickets = async (lotteryContract, ticketsContract, account, customLotteryNum) => {\n  const issueIndex = customLotteryNum || (await lotteryContract.methods.issueIndex().call())\n  const length = await getTicketsAmount(ticketsContract, account)\n\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n    ticketsContract.options.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\n  const ticketIssues = await multiCall(ticketAbi, calls2)\n\n  const finalTokenids = []\n  ticketIssues.forEach(async (ticketIssue, i) => {\n    if (new BigNumber(ticketIssue).eq(issueIndex)) {\n      finalTokenids.push(tokenIds[i])\n    }\n  })\n  const calls3 = finalTokenids.map((id) => [ticketsContract.options.address, 'getLotteryNumbers', [id]])\n  const tickets = await multiCall(ticketAbi, calls3)\n\n  await getLotteryStatus(lotteryContract)\n  return tickets\n}\n\nexport const getTicketsAmount = async (ticketsContract, account) => {\n  return ticketsContract.methods.balanceOf(account).call()\n}\n\nexport const multiClaim = async (lotteryContract, ticketsContract, account) => {\n  await lotteryContract.methods.issueIndex().call()\n  const length = await getTicketsAmount(ticketsContract, account)\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n    ticketsContract.options.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\n  const claimedStatus = await multiCall(ticketAbi, calls2)\n\n  const unClaimedIds = tokenIds.filter((id, index) => !claimedStatus[index][0])\n\n  const calls3 = unClaimedIds.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\n  const rewards = await multiCall(lotteryAbi, calls3)\n\n  let finalTokenIds = []\n  rewards.forEach((r, i) => {\n    if (r > 0) {\n      finalTokenIds.push(unClaimedIds[i])\n    }\n  })\n\n  if (finalTokenIds.length > 200) {\n    finalTokenIds = finalTokenIds.slice(0, 200)\n  }\n\n  try {\n    return lotteryContract.methods\n      .multiClaim(finalTokenIds)\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTotalClaim = async (lotteryContract, ticketsContract, account) => {\n  try {\n    const issueIndex = await lotteryContract.methods.issueIndex().call()\n    const length = await getTicketsAmount(ticketsContract, account)\n    // eslint-disable-next-line prefer-spread\n    const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n      ticketsContract.options.address,\n      'tokenOfOwnerByIndex',\n      [account, i],\n    ])\n    const res = await multiCall(ticketAbi, calls1)\n    const tokenIds = res.map((id) => id.toString())\n    const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\n    const ticketIssues = await multiCall(ticketAbi, calls2)\n    const calls3 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\n    const claimedStatus = await multiCall(ticketAbi, calls3)\n\n    const drawed = await getLotteryStatus(lotteryContract)\n\n    const finalTokenIds = []\n    ticketIssues.forEach(async (ticketIssue, i) => {\n      // eslint-disable-next-line no-empty\n      if (!drawed && ticketIssue.toString() === issueIndex) {\n      } else if (!claimedStatus[i][0]) {\n        finalTokenIds.push(tokenIds[i])\n      }\n    })\n\n    const calls4 = finalTokenIds.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\n\n    const rewards = await multiCall(lotteryAbi, calls4)\n    const claim = rewards.reduce((p, c) => BigNumber.sum(p, c), BIG_ZERO)\n\n    return claim\n  } catch (err) {\n    console.error(err)\n  }\n  return BIG_ZERO\n}\n\nexport const getTotalRewards = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  return lotteryContract.methods.getTotalRewards(issueIndex).call()\n}\n\nexport const getMax = async (lotteryContract) => {\n  return lotteryContract.methods.maxNumber().call()\n}\n\nexport const getLotteryIssueIndex = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  return issueIndex\n}\n\nexport const getLotteryStatus = async (lotteryContract) => {\n  return lotteryContract.methods.drawed().call()\n}\n\nexport const getMatchingRewardLength = async (lotteryContract, matchNumber) => {\n  let issueIndex = await lotteryContract.methods.issueIndex().call()\n  const drawed = await lotteryContract.methods.drawed().call()\n  if (!drawed) {\n    issueIndex -= 1\n  }\n  try {\n    const amount = await lotteryContract.methods.historyAmount(issueIndex, 5 - matchNumber).call()\n\n    return new BigNumber(amount).div(DEFAULT_TOKEN_DECIMAL).div(LOTTERY_TICKET_PRICE).toNumber()\n  } catch (err) {\n    console.error(err)\n  }\n  return 0\n}\n\nexport const getWinningNumbers = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  const numbers = []\n  const drawed = await lotteryContract.methods.drawed().call()\n\n  if (!drawed && parseInt(issueIndex, 10) === 0) {\n    return [0, 0, 0, 0]\n  }\n  if (!drawed) {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.methods.historyNumbers(issueIndex - 1, i).call()).toString())\n    }\n  } else {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.methods.winningNumbers(i).call()).toString())\n    }\n  }\n  return numbers\n}\n","import { useCallback, useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\nimport { multiClaim, getMax, multiBuy } from '../utils/lotteryUtils'\n\nexport const useMultiClaimLottery = () => {\n  const { account } = useWeb3React()\n  const lotteryContract = useLottery()\n  const lotteryTicketContract = useLotteryTicket()\n\n  const handleClaim = useCallback(async () => {\n    try {\n      const txHash = await multiClaim(lotteryContract, lotteryTicketContract, account)\n      return txHash\n    } catch (e) {\n      return false\n    }\n  }, [account, lotteryContract, lotteryTicketContract])\n\n  return { onMultiClaim: handleClaim }\n}\n\nexport const useMultiBuyLottery = () => {\n  const { account } = useWeb3React()\n  const lotteryContract = useLottery()\n\n  const handleBuy = useCallback(\n    async (amount: string, numbers: Array<any>) => {\n      try {\n        const txHash = await multiBuy(lotteryContract, amount, numbers, account)\n        return txHash\n      } catch (e) {\n        return false\n      }\n    },\n    [account, lotteryContract],\n  )\n\n  return { onMultiBuy: handleBuy }\n}\n\nexport const useMaxNumber = () => {\n  const [max, setMax] = useState(5)\n  const lotteryContract = useLottery()\n\n  const fetchMax = useCallback(async () => {\n    const maxNumber = await getMax(lotteryContract)\n    setMax(maxNumber)\n  }, [lotteryContract])\n\n  useEffect(() => {\n    if (lotteryContract) {\n      fetchMax()\n    }\n  }, [lotteryContract, fetchMax])\n\n  return max\n}\n","import { useCallback, useState } from 'react'\nimport { useLotteryApprove } from './useApprove'\n\nexport const useApproval = (onPresentApprove: () => void) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { onApprove } = useLotteryApprove()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n      onPresentApprove()\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, onPresentApprove])\n\n  return { handleApprove, requestedApproval }\n}\n\nexport default useApproval\n","import React from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\n\nconst WarningModal: React.FC<{ onDismiss?: () => void }> = ({ onDismiss }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Modal title={TranslateString(466, 'Warning')} onDismiss={onDismiss}>\n      <TicketsList>\n        {TranslateString(468, 'Lottery ticket purchases are final.')}\n        <br />\n        {TranslateString(470, 'Your CAKE will not be returned to you after you spend it to buy tickets.')}\n        <br />\n        {TranslateString(472, 'Tickets are only valid for one lottery draw, and will be burned after the draw.')}\n        <br />\n        {TranslateString(\n          474,\n          'Buying tickets does not guarantee you will win anything. Please only participate once you understand the risks.',\n        )}\n      </TicketsList>\n      <ModalActions>\n        <Button width=\"100%\" onClick={onDismiss}>\n          {TranslateString(476, 'I understand')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nconst TicketsList = styled.div`\n  text-align: left;\n  overflow-y: auto;\n  max-height: 400px;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nexport default WarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, Flex, Input, InputProps } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  availableSymbol: string\n  value: string\n  onSelectMax?: () => void\n  onChange: (evt: React.FormEvent<HTMLInputElement>) => void\n}\n\nconst TicketInput: React.FC<TokenInputProps> = ({ max, symbol, availableSymbol, onChange, onSelectMax, value }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <>\n      <Flex alignItems=\"center\">\n        <Input type=\"number\" inputMode=\"numeric\" min=\"0\" onChange={onChange} placeholder=\"0\" value={value} />\n        <StyledTokenAdornmentWrapper>\n          <StyledSpacer />\n          <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n          <StyledSpacer />\n          <Button size=\"sm\" onClick={onSelectMax}>\n            {TranslateString(452, 'Max')}\n          </Button>\n        </StyledTokenAdornmentWrapper>\n      </Flex>\n      <StyledMaxText>{TranslateString(454, `${max.toLocaleString()} ${availableSymbol} Available`)}</StyledMaxText>\n    </>\n  )\n}\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TicketInput\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport TicketInput from 'components/TicketInput'\nimport ModalActions from 'components/ModalActions'\nimport { useMultiBuyLottery, useMaxNumber } from 'hooks/useBuyLottery'\nimport useI18n from 'hooks/useI18n'\nimport { LOTTERY_MAX_NUMBER_OF_TICKETS, LOTTERY_TICKET_PRICE } from 'config'\n\ninterface BuyTicketModalProps {\n  max: BigNumber\n  onDismiss?: () => void\n}\n\nconst BuyTicketModal: React.FC<BuyTicketModalProps> = ({ max, onDismiss }) => {\n  const [val, setVal] = useState('1')\n  const [pendingTx, setPendingTx] = useState(false)\n  const [, setRequestedBuy] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getBalanceNumber(max)\n  }, [max])\n\n  const maxTickets = useMemo(() => {\n    return parseInt(getFullDisplayBalance(max.div(LOTTERY_TICKET_PRICE)), 10)\n  }, [max])\n\n  const handleChange = (e: React.FormEvent<HTMLInputElement>) => {\n    if (e.currentTarget.validity.valid) {\n      setVal(e.currentTarget.value)\n    }\n  }\n\n  const { onMultiBuy } = useMultiBuyLottery()\n  const maxNumber = useMaxNumber()\n  const handleBuy = useCallback(async () => {\n    try {\n      setRequestedBuy(true)\n      const length = parseInt(val)\n      // @ts-ignore\n      // eslint-disable-next-line prefer-spread\n      const numbers = Array.apply(null, { length }).map(() => [\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n      ])\n      const txHash = await onMultiBuy(LOTTERY_TICKET_PRICE.toString(), numbers)\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        setRequestedBuy(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onMultiBuy, setRequestedBuy, maxNumber, val])\n\n  const handleSelectMax = useCallback(() => {\n    if (Number(maxTickets) > LOTTERY_MAX_NUMBER_OF_TICKETS) {\n      setVal(LOTTERY_MAX_NUMBER_OF_TICKETS.toString())\n    } else {\n      setVal(maxTickets.toString())\n    }\n  }, [maxTickets])\n\n  const cakeCosts = (amount: string): number => {\n    return +amount * LOTTERY_TICKET_PRICE\n  }\n  return (\n    <Modal title={TranslateString(450, 'Enter amount of tickets to buy')} onDismiss={onDismiss}>\n      <TicketInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol=\"TICKET\"\n        availableSymbol=\"CAKE\"\n      />\n      <div>\n        <Tips>{TranslateString(999, `1 Ticket = ${LOTTERY_TICKET_PRICE} CAKE`, { num: LOTTERY_TICKET_PRICE })}</Tips>\n      </div>\n      <div>\n        <Announce>\n          {TranslateString(\n            478,\n            'Ticket purchases are final. Your CAKE cannot be returned to you after buying tickets.',\n          )}\n        </Announce>\n        <Final>{TranslateString(460, `You will spend: ${cakeCosts(val)} CAKE`)}</Final>\n      </div>\n      <ModalActions>\n        <Button width=\"100%\" variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          id=\"lottery-buy-complete\"\n          width=\"100%\"\n          disabled={\n            pendingTx ||\n            !Number.isInteger(parseInt(val)) ||\n            parseInt(val) > Number(maxTickets) ||\n            parseInt(val) > LOTTERY_MAX_NUMBER_OF_TICKETS ||\n            parseInt(val) < 1\n          }\n          onClick={async () => {\n            setPendingTx(true)\n            await handleBuy()\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default BuyTicketModal\n\nconst Tips = styled.div`\n  margin-left: 0.4em;\n  font-size: 14px;\n  font-weight: 600;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nconst Final = styled.div`\n  margin-top: 1em;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 600;\n  color: ${(props) => props.theme.colors.primary};\n`\nconst Announce = styled.div`\n  margin-top: 1em;\n  margin-left: 0.4em;\n  color: #ed4b9e;\n`\n"],"sourceRoot":""}