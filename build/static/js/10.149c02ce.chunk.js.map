{"version":3,"sources":["views/Farms/components/types.ts","components/Banner/Banner.tsx","components/Banner/MigrationV2.tsx","utils/getLiquidityUrlPathParts.ts","views/Farms/components/FarmCard/DetailsSection.tsx","components/Tags.tsx","views/Farms/components/FarmCard/CardHeading.tsx","components/ModalInput/ModalInput.tsx","views/Farms/components/DepositModal.tsx","views/Farms/components/WithdrawModal.tsx","views/Farms/components/FarmCard/StakeAction.tsx","views/Farms/components/FarmCard/HarvestAction.tsx","views/Farms/components/FarmCard/CardActionsContainer.tsx","views/Farms/components/FarmCard/ApyButton.tsx","views/Farms/components/FarmCard/FarmCard.tsx","hooks/useDelayedUnmount.ts","views/Farms/components/FarmTable/Apr.tsx","views/Farms/components/FarmTable/Farm.tsx","views/Farms/components/FarmTable/Earned.tsx","views/Farms/components/FarmTable/Details.tsx","views/Farms/components/FarmTable/Multiplier.tsx","views/Farms/components/FarmTable/Liquidity.tsx","views/Farms/components/FarmTable/Actions/styles.ts","views/Farms/components/FarmTable/Actions/HarvestAction.tsx","views/Farms/components/FarmTable/Actions/StakedAction.tsx","views/Farms/components/FarmTable/Actions/ActionPanel.tsx","views/Farms/components/FarmTable/CellLayout.tsx","views/Farms/components/FarmTable/Row.tsx","views/Farms/components/FarmTable/FarmTable.tsx","views/Farms/components/FarmTabButtons/index.tsx","views/Farms/components/SearchInput.tsx","views/Farms/components/ToggleView/ToggleView.tsx","views/Farms/Farms.tsx","views/Home/components/CardBusdValue.tsx","views/Home/components/CardValue.tsx","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","components/ExpandableSectionButton/ExpandableSectionButton.tsx","components/Select/Select.tsx"],"names":["ViewMode","Wrapper","styled","Box","theme","mediaQueries","sm","Content","div","isVisible","Banner","id","title","defaultVisible","children","props","usePersistState","setIsVisible","justifyContent","flexDirection","expanded","onClick","prev","MigrationV2","alignItems","color","width","mr","fontSize","bold","ml","mb","as","href","getLiquidityUrlPathParts","quoteTokenAddress","tokenAddress","wBNBAddressString","getWbnbAddress","quoteTokenAddressString","process","tokenAddressString","secondPart","StyledLinkExternal","LinkExternal","DetailsSection","bscScanAddress","infoAddress","removed","totalValueFormatted","lpLabel","addLiquidityUrl","TranslateString","useI18n","name","CoreTag","variant","outline","startIcon","CommunityTag","DualTag","Flex","MultiplierTag","Tag","CardHeading","multiplier","isCommunityFarm","farmImage","tokenSymbol","src","alt","height","split","StyledTokenInput","colors","input","isWarning","shadows","warning","inset","text","StyledInput","Input","xs","StyledErrorMessage","Text","ModalInput","max","symbol","onChange","onSelectMax","value","inputTitle","isBalanceZero","style","position","pl","balance","balanceNumber","Number","toLocaleString","undefined","maximumFractionDigits","displayBalance","pattern","inputMode","step","min","placeholder","scale","external","DepositModal","onConfirm","onDismiss","tokenName","useState","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","getFullDisplayBalance","valNumber","BigNumber","fullBalanceNumber","handleChange","useCallback","e","currentTarget","validity","valid","replace","handleSelectMax","ModalActions","disabled","isFinite","eq","gt","a","alignSelf","WithdrawModal","IconButtonWrapper","StakeAction","stakedBalance","tokenBalance","pid","onStake","useStake","onUnstake","useUnstake","location","useLocation","stakedBalanceNumber","getBalanceNumber","useModal","onPresentDeposit","onPresentWithdraw","pathname","includes","HarvestAction","earnings","account","useWeb3React","onReward","useHarvest","cakePrice","usePriceCakeBusd","rawEarningsBalance","earningsBusd","multipliedBy","toNumber","CardBusdValue","Action","CardActions","farm","requestedApproval","setRequestedApproval","lpAddresses","userData","allowance","allowanceAsString","tokenBalanceAsString","stakedBalanceAsString","earningsAsString","lpAddress","getAddress","lpName","lpSymbol","toUpperCase","isApproved","isGreaterThan","web3","useWeb3","lpContract","getBep20Contract","onApprove","useApprove","handleApprove","console","error","textTransform","pr","mt","UnlockButton","ApyButton","apr","ApyCalculatorModal","linkLabel","tokenPrice","linkHref","onPresentApyModal","event","stopPropagation","RainbowLight","keyframes","StyledCardAccent","FCard","card","background","Divider","borderColor","ExpandingWrapper","FarmCard","showExpandableSection","setShowExpandableSection","toLocaleLowerCase","liquidity","earnLabel","dual","farmAPR","liquidityUrlPathParts","quoteToken","address","token","BASE_ADD_LIQUIDITY_URL","isCommunity","display","CardActionsContainer","ExpandableSectionButton","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","useEffect","timeoutId","setTimeout","clearTimeout","Container","textSubtle","AprWrapper","Apr","originalValue","hideButton","IconImage","Image","Farm","image","label","useFarmUser","rawStakedBalance","Amount","span","earned","textDisabled","Earned","userDataReady","primary","ArrowIcon","ChevronDownIcon","toggled","Details","actionPanelToggled","isMobile","useMatchBreakpoints","isXl","ReferenceElement","MultiplierWrapper","lg","Multiplier","displayMultiplier","toLowerCase","tooltipContent","useTooltip","targetRef","tooltip","tooltipVisible","ref","LiquidityWrapper","Liquidity","displayLiquidity","ActionContainer","xl","ActionTitles","Title","secondary","Subtle","ActionContent","Staked","earningsBigNumber","isZero","useCountUp","start","end","duration","separator","decimals","countUp","update","updateValue","useRef","current","marginBottom","marginTop","expandAnimation","collapseAnimation","css","StakeContainer","TagsContainer","InfoContainer","ValueContainer","ValueWrapper","ActionPanel","details","isActive","bsc","info","StakedAction","Label","ContentContainer","CellLayout","MobileColumnSchema","translationId","sortable","DesktopColumnSchema","cells","CellInner","StyledTr","tr","EarnedMobileCell","td","AprMobileCell","FarmMobileCell","Row","hasStakedAmount","actionPanelExpanded","setActionPanelExpanded","shouldRenderChild","toggleActionPanel","isXs","tableSchema","columnNames","map","column","Object","keys","key","columnIndex","indexOf","React","createElement","colSpan","dropShadow","TableWrapper","StyledTable","table","TableBody","tbody","TableContainer","ScrollButtonContainer","FarmTable","tableWrapperEl","data","columns","rows","useTable","sortColumn","row","original","scrollIntoView","behavior","FarmTabButtons","activeIndex","hasStakeInFinishedFarms","hasStakeInArchivedFarms","url","useRouteMatch","Link","to","show","InputWrapper","SearchInput","onChangeCallback","setToggled","searchText","setSearchText","debouncedOnChange","debounce","target","onBlur","ToggleView","viewMode","onToggle","handleToggle","mode","CARD","TABLE","ControlContainer","ToggleWrapper","LabelWrapper","FilterContainer","ViewControls","StyledImage","Farms","path","useFarms","farmsLP","userDataLoaded","query","setQuery","setViewMode","sortOption","setSortOption","prices","useGetApiPrices","dispatch","useAppDispatch","fastRefresh","useRefresh","fetchFarmUserDataAsync","isArchived","isInactive","stakedOnly","setStakedOnly","setLoadArchivedFarmsData","fetchFarmsPublicDataAsync","activeFarms","filter","isArchivedPid","inactiveFarms","archivedFarms","stakedOnlyFarms","stakedInactiveFarms","stakedArchivedFarms","farmsList","farmsToDisplay","farmsToDisplayWithAPR","lpTotalInQuoteToken","quoteTokenPriceUsd","totalLiquidity","times","getFarmApr","poolWeight","lowercaseQuery","loadMoreRef","numberOfFarmsVisible","setNumberOfFarmsVisible","observerIsSet","setObserverIsSet","farmsStakedMemoized","farmsStaked","farms","orderBy","slice","sortFarms","IntersectionObserver","entries","isIntersecting","farmsCurrentlyVisible","rootMargin","threshold","observe","rowData","PageHeader","size","Page","checked","length","Select","options","option","marginLeft","sort","b","exact","renderContent","lineHeight","prefix","CardValue","StyledSpacer","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","primaryDark","StyledModalAction","l","Children","toArray","child","i","aria-label","role","defaultProps","DropDownHeader","inputSecondary","DropDownListContainer","zIndices","dropdown","DropDownContainer","isOpen","boxShadow","DropDownList","ul","ListItem","li","containerRef","dropdownRef","setIsOpen","selectedOption","setSelectedOption","containerSize","setContainerSize","toggling","onOptionClicked","offsetWidth","offsetHeight"],"mappings":"wRA0GYA,G,6KC/FNC,GAAUC,aAAOC,KAAPD,CAAH,sKAIT,qBAAGE,MAAkBC,aAAaC,MAKhCC,GAAUL,KAAOM,IAAV,8CACA,qBAAGC,UAA6B,QAAU,UAkBxCC,GAfiB,SAAC,GAA8D,IAA5DC,EAA2D,EAA3DA,GAAIC,EAAuD,EAAvDA,MAAuD,IAAhDC,sBAAgD,SAAzBC,EAAyB,EAAzBA,SAAaC,EAAY,2DAC5F,EAAkCC,aAAgBH,EAAD,iBAA2BF,IAA5E,oBAAOF,EAAP,KAAkBQ,EAAlB,KACA,OACE,gBAAChB,GAAD,2BAASQ,UAAWA,GAAeM,GAAnC,cACE,gBAAC,KAAD,CAAMG,eAAe,gBAAgBC,cAAe,CAAC,SAAU,OAA/D,UACGP,EACD,eAAC,KAAD,CAAiBQ,SAAUX,EAAWY,QAAS,kBAAMJ,GAAa,SAACK,GAAD,OAAWA,MAA7E,SACGb,EAAY,OAAS,eAG1B,eAACF,GAAD,CAASE,UAAWA,EAApB,SAAgCK,SCDvBS,GA7BK,WAClB,OACE,eAAC,GAAD,CACEZ,GAAG,eACHC,MACE,gBAAC,KAAD,CAAMY,WAAW,SAAjB,UACE,eAAC,KAAD,CAAWC,MAAM,QAAQC,MAAM,OAAOC,GAAG,SACzC,eAAC,MAAD,CAAMF,MAAM,QAAQG,SAAS,OAAOC,MAAI,EAAxC,yDAKJhB,gBAAgB,EAVlB,SAYE,gBAAC,KAAD,CAAKiB,GAAG,OAAR,UACE,eAAC,MAAD,CAAML,MAAM,UAAUI,MAAI,EAA1B,2HAGA,eAAC,MAAD,CAAMJ,MAAM,QAAQM,GAAG,OAAvB,yGAGA,eAAC,KAAD,CAAQC,GAAG,IAAIC,KAAK,mDAApB,+B,qICVOC,GAXkB,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,kBAAmBC,EAAmB,EAAnBA,aAE/CC,EAAoBC,eACpBC,EAAkCJ,EAAoBA,EAF5CK,IAEyE,KACnFC,EAA6BL,EAAeA,EAHlCI,IAG0D,KAGpEE,EAAcD,GAAsBA,IAAuBJ,EAA4BI,EAAR,MACrF,MAAM,GAAN,OAFGF,GAA2BA,IAA4BF,EAA4BE,EAAR,MAE9E,YAAuBG,ICEnBzC,GAAUC,KAAOM,IAAV,kDAIPmC,GAAqBzC,aAAO0C,MAAP1C,CAAH,kDA+BT2C,GA3B0C,SAAC,GAOnD,IANLC,EAMI,EANJA,eACAC,EAKI,EALJA,YACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,oBACAC,EAEI,EAFJA,QACAC,EACI,EADJA,gBAEMC,EAAkBC,eAExB,OACE,gBAAC,GAAD,WACE,gBAAC,KAAD,CAAMnC,eAAe,gBAArB,UACE,gBAAC,MAAD,WAAOkC,EAAgB,IAAK,mBAA5B,OACA,eAAC,MAAD,UAAOH,QAEPD,GACA,eAACL,GAAD,CAAoBV,KAAMkB,EAA1B,SACGC,EAAgB,IAAD,cAAaF,GAAW,CAAEI,KAAMJ,MAGpD,eAACP,GAAD,CAAoBV,KAAMa,EAA1B,SAA2CM,EAAgB,IAAK,mBAChE,eAACT,GAAD,CAAoBV,KAAMc,EAA1B,SAAwCK,EAAgB,IAAK,uBCzC7DG,GAAU,SAACxC,GAAD,OACd,eAAC,MAAD,2BAAKyC,QAAQ,YAAYC,SAAO,EAACC,UAAW,eAAC,MAAD,CAAcjC,MAAM,eAAoBV,GAApF,wBAKI4C,GAAe,SAAC5C,GAAD,OACnB,eAAC,MAAD,2BAAKyC,QAAQ,aAAaC,SAAO,EAACC,UAAW,eAAC,KAAD,CAAejC,MAAM,eAAoBV,GAAtF,6BAWI6C,GAAU,SAAC7C,GAAD,OACd,eAAC,MAAD,2BAAKyC,QAAQ,aAAaC,SAAO,GAAK1C,GAAtC,wBCTId,GAAUC,aAAO2D,KAAP3D,CAAH,mEAMP4D,GAAgB5D,aAAO6D,MAAP7D,CAAH,kDAyBJ8D,GArBuC,SAAC,GAMhD,IALLd,EAKI,EALJA,QACAe,EAII,EAJJA,WACAC,EAGI,EAHJA,gBACAC,EAEI,EAFJA,UACAC,EACI,EADJA,YAEA,OACE,gBAAC,GAAD,CAASlD,eAAe,gBAAgBM,WAAW,SAASO,GAAG,OAA/D,UACE,eAAC,KAAD,CAAOsC,IAAG,wBAAmBF,EAAnB,QAAoCG,IAAKF,EAAa1C,MAAO,GAAI6C,OAAQ,KACnF,gBAAC,KAAD,CAAMpD,cAAc,SAASK,WAAW,WAAxC,UACE,eAAC,KAAD,CAASO,GAAG,MAAZ,SAAmBmB,EAAQsB,MAAM,KAAK,KACtC,gBAAC,KAAD,CAAMtD,eAAe,SAArB,UACGgD,EAAkB,eAAC,GAAD,IAAmB,eAAC,GAAD,IACtC,eAACJ,GAAD,CAAeN,QAAQ,YAAvB,SAAoCS,c,gGCbxCQ,GAAmBvE,KAAOM,IAAV,2MAGA,qBAAGJ,MAAkBsE,OAAOC,SAX7B,SAAC,GAAkC,IAAD,IAA/BC,iBAA+B,SAAZxE,EAAY,EAAZA,MACzC,OAAIwE,EACKxE,EAAMyE,QAAQC,QAGhB1E,EAAMyE,QAAQE,SASZ,qBAAG3E,MAAkBsE,OAAOM,QAKjCC,GAAc/E,aAAOgF,KAAPhF,CAAH,2KAMb,qBAAGE,MAAkBC,aAAa8E,MAIlC,qBAAG/E,MAAkBC,aAAaC,MAKhC8E,GAAqBlF,aAAOmF,MAAPnF,CAAH,wGAoEToF,GA5D+B,SAAC,GAQxC,IAPLC,EAOI,EAPJA,IACAC,EAMI,EANJA,OACAC,EAKI,EALJA,SACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,MACAxC,EAEI,EAFJA,gBACAyC,EACI,EADJA,WAEMxC,EAAkBC,eAClBwC,EAAwB,MAARN,IAAgBA,EAatC,OACE,uBAAKO,MAAO,CAAEC,SAAU,YAAxB,UACE,gBAACtB,GAAD,CAAkBG,UAAWiB,EAA7B,UACE,gBAAC,KAAD,CAAM3E,eAAe,gBAAgB8E,GAAG,OAAxC,UACE,eAAC,MAAD,CAAMpE,SAAS,OAAf,SAAuBgE,IACvB,gBAAC,MAAD,CAAMhE,SAAS,OAAf,UACGwB,EAAgB,KAAM,WADzB,KAhBe,SAAC6C,GACtB,GAAIJ,EACF,MAAO,IAET,IAAMK,EAAgBC,OAAOF,GAC7B,OAAIC,EAAgB,GAAKA,EAAgB,KAChCA,EAAcE,oBAAeC,EAAW,CAAEC,sBAAuB,KAEnEJ,EAAcE,iBASwBG,CAAehB,SAGxD,gBAAC,KAAD,CAAM/D,WAAW,WAAWN,eAAe,eAA3C,UACE,eAAC+D,GAAD,CACEuB,QAAQ,sBACRC,UAAU,UACVC,KAAK,MACLC,IAAI,IACJlB,SAAUA,EACVmB,YAAY,IACZjB,MAAOA,IAET,eAAC,KAAD,CAAQkB,MAAM,KAAKxF,QAASqE,EAAa/D,GAAG,MAA5C,SACGyB,EAAgB,IAAK,SAExB,eAAC,MAAD,CAAMxB,SAAS,OAAf,SAAuB4D,UAG1BK,GACC,gBAACT,GAAD,CAAoBxD,SAAS,OAAOH,MAAM,UAA1C,gCACsB,IACpB,gBAAC,MAAD,CAAMG,SAAS,OAAOC,MAAM,EAAOI,KAAMkB,EAAiB2D,UAAQ,EAACrF,MAAM,UAAzE,UACG2B,EAAgB,IAAK,OADxB,IACiCoC,YCnC5BuB,GA3DmC,SAAC,GAAoE,IAAlExB,EAAiE,EAAjEA,IAAKyB,EAA4D,EAA5DA,UAAWC,EAAiD,EAAjDA,UAAiD,IAAtCC,iBAAsC,MAA1B,GAA0B,EAAtB/D,EAAsB,EAAtBA,gBAC9F,EAAsBgE,oBAAS,IAA/B,oBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAkCF,qBAAS,GAA3C,oBAAOG,EAAP,KAAkBC,EAAlB,KACMnE,EAAkBC,eAClBmE,EAAcC,oBAAQ,WAC1B,OAAOC,aAAsBnC,KAC5B,CAACA,IAEEoC,EAAY,IAAIC,KAAUR,GAC1BS,EAAoB,IAAID,KAAUJ,GAElCM,EAAeC,wBACnB,SAACC,GACKA,EAAEC,cAAcC,SAASC,OAC3Bd,EAAOW,EAAEC,cAActC,MAAMyC,QAAQ,KAAM,QAG/C,CAACf,IAGGgB,EAAkBN,wBAAY,WAClCV,EAAOG,KACN,CAACA,EAAaH,IAEjB,OACE,gBAAC,MAAD,CAAOzG,MAAOwC,EAAgB,KAAM,mBAAoB6D,UAAWA,EAAnE,UACE,eAAC,GAAD,CACEtB,MAAOyB,EACP1B,YAAa2C,EACb5C,SAAUqC,EACVvC,IAAKiC,EACLhC,OAAQ0B,EACR/D,gBAAiBA,EACjByC,WAAYxC,EAAgB,KAAM,WAEpC,gBAACkF,GAAA,EAAD,WACE,eAAC,KAAD,CAAQ9E,QAAQ,YAAYnC,QAAS4F,EAAWvF,MAAM,OAAO6G,SAAUjB,EAAvE,SACGlE,EAAgB,IAAK,YAExB,eAAC,KAAD,CACE1B,MAAM,OACN6G,SAAUjB,IAAcK,EAAUa,YAAcb,EAAUc,GAAG,IAAMd,EAAUe,GAAGb,GAChFxG,QAAO,wBAAE,uBAAAsH,EAAA,6DACPpB,GAAa,GADN,SAEDP,EAAUI,GAFT,OAGPG,GAAa,GACbN,IAJO,2CAHX,SAUGK,EAAYlE,EAAgB,IAAK,wBAA0BA,EAAgB,IAAK,gBAGrF,gBAAC,MAAD,CAAcnB,KAAMkB,EAAiB2C,MAAO,CAAE8C,UAAW,UAAzD,UACGxF,EAAgB,IAAK,OADxB,IACiC8D,SCCxB2B,GAvDqC,SAAC,GAAmD,IAAjD7B,EAAgD,EAAhDA,UAAWC,EAAqC,EAArCA,UAAW1B,EAA0B,EAA1BA,IAA0B,IAArB2B,iBAAqB,MAAT,GAAS,EACrG,EAAsBC,oBAAS,IAA/B,oBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAkCF,qBAAS,GAA3C,oBAAOG,EAAP,KAAkBC,EAAlB,KACMnE,EAAkBC,eAClBmE,EAAcC,oBAAQ,WAC1B,OAAOC,aAAsBnC,KAC5B,CAACA,IAEEoC,EAAY,IAAIC,KAAUR,GAC1BS,EAAoB,IAAID,KAAUJ,GAElCM,EAAeC,wBACnB,SAACC,GACKA,EAAEC,cAAcC,SAASC,OAC3Bd,EAAOW,EAAEC,cAActC,MAAMyC,QAAQ,KAAM,QAG/C,CAACf,IAGGgB,EAAkBN,wBAAY,WAClCV,EAAOG,KACN,CAACA,EAAaH,IAEjB,OACE,gBAAC,MAAD,CAAOzG,MAAOwC,EAAgB,KAAM,qBAAsB6D,UAAWA,EAArE,UACE,eAAC,GAAD,CACEvB,YAAa2C,EACb5C,SAAUqC,EACVnC,MAAOyB,EACP7B,IAAKiC,EACLhC,OAAQ0B,EACRtB,WAAYxC,EAAgB,IAAK,aAEnC,gBAACkF,GAAA,EAAD,WACE,eAAC,KAAD,CAAQ9E,QAAQ,YAAYnC,QAAS4F,EAAWvF,MAAM,OAAO6G,SAAUjB,EAAvE,SACGlE,EAAgB,IAAK,YAExB,eAAC,KAAD,CACEmF,SAAUjB,IAAcK,EAAUa,YAAcb,EAAUc,GAAG,IAAMd,EAAUe,GAAGb,GAChFxG,QAAO,wBAAE,uBAAAsH,EAAA,6DACPpB,GAAa,GADN,SAEDP,EAAUI,GAFT,OAGPG,GAAa,GACbN,IAJO,2CAMTvF,MAAM,OARR,SAUG4F,EAAYlE,EAAgB,IAAK,wBAA0BA,EAAgB,IAAK,oBC3CrF0F,GAAoB5I,KAAOM,IAAV,+EA2DRuI,GApDqC,SAAC,GAM9C,IALLC,EAKI,EALJA,cACAC,EAII,EAJJA,aACA/B,EAGI,EAHJA,UACAgC,EAEI,EAFJA,IACA/F,EACI,EADJA,gBAEMC,EAAkBC,eAChB8F,EAAYC,aAASF,GAArBC,QACAE,EAAcC,aAAWJ,GAAzBG,UACFE,EAAWC,eAEXjD,EAAiBwB,wBAAY,WACjC,IAAM0B,EAAsBC,aAAiBV,GAC7C,OAAIS,EAAsB,GAAKA,EAAsB,KAC5C/B,aAAsBsB,GAAe5C,iBAEvCqD,EAAoBrD,mBAC1B,CAAC4C,IAEJ,EAA2BW,cACzB,eAAC,GAAD,CAAcpE,IAAK0D,EAAcjC,UAAWmC,EAASjC,UAAWA,EAAW/D,gBAAiBA,KADvFyG,EAAP,qBAGA,EAA4BD,cAC1B,eAAC,GAAD,CAAepE,IAAKyD,EAAehC,UAAWqC,EAAWnC,UAAWA,KAD/D2C,EAAP,qBAqBA,OACE,gBAAC,KAAD,CAAM3I,eAAe,gBAAgBM,WAAW,SAAhD,UACE,eAAC,KAAD,CAASC,MAAOuH,EAAcP,GAAG,GAAK,eAAiB,OAAvD,SAAgElC,MAlB3DyC,EAAcP,GAAG,GACtB,eAAC,KAAD,CAAQpH,QAASuI,EAAkBrB,SAAUgB,EAASO,SAASC,SAAS,YAAxE,SACG3G,EAAgB,IAAK,cAGxB,gBAAC0F,GAAD,WACE,eAAC,KAAD,CAAYtF,QAAQ,WAAWnC,QAASwI,EAAmBlI,GAAG,MAA9D,SACE,eAAC,MAAD,CAAWF,MAAM,UAAUC,MAAM,WAEnC,eAAC,KAAD,CAAY8B,QAAQ,WAAWnC,QAASuI,EAAxC,SACE,eAAC,KAAD,CAASnI,MAAM,UAAUC,MAAM,kB,oBCnB1BsI,GA/BuC,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,SAAUf,EAAU,EAAVA,IACzDgB,EAAYC,eAAZD,QACF9G,EAAkBC,eACxB,EAAkC8D,qBAAS,GAA3C,oBAAOG,EAAP,KAAkBC,EAAlB,KACQ6C,EAAaC,aAAWnB,GAAxBkB,SACFE,EAAYC,eAEZC,EAAqBN,EAAUR,aAAiBO,GAAY,EAC5D1D,EAAiBiE,EAAmBpE,iBACpCqE,EAAeD,EAAqB,IAAI5C,KAAU4C,GAAoBE,aAAaJ,GAAWK,WAAa,EAEjH,OACE,gBAAC,KAAD,CAAM5I,GAAG,MAAMb,eAAe,gBAAgBM,WAAW,SAAzD,UACE,gBAAC,KAAD,CAASC,MAA8B,IAAvB+I,EAA2B,eAAiB,OAA5D,UACGjE,EACAkE,EAAe,GAAK,eAACG,GAAA,EAAD,CAAejF,MAAO8E,OAE7C,eAAC,KAAD,CACElC,SAAiC,IAAvBiC,GAA4BlD,EACtCjG,QAAO,wBAAE,uBAAAsH,EAAA,6DACPpB,GAAa,GADN,SAED6C,IAFC,OAGP7C,GAAa,GAHN,2CAFX,SAQGnE,EAAgB,IAAK,iBCxBxByH,GAAS3K,KAAOM,IAAV,mDA8FGsK,GAhFqC,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,KAAMb,EAA+B,EAA/BA,QAAS/G,EAAsB,EAAtBA,gBAC9DC,EAAkBC,eACxB,EAAkD8D,qBAAS,GAA3D,oBAAO6D,EAAP,KAA0BC,EAA1B,KACQ/B,EAAqB6B,EAArB7B,IAAKgC,EAAgBH,EAAhBG,YACb,EAKIH,EAAKI,UAAY,GALrB,IACEC,UAAWC,OADb,MACiC,EADjC,MAEEpC,aAAcqC,OAFhB,MAEuC,EAFvC,MAGEtC,cAAeuC,OAHjB,MAGyC,EAHzC,MAIEtB,SAAUuB,OAJZ,MAI+B,EAJ/B,EAMMJ,EAAY,IAAIxD,KAAUyD,GAC1BpC,EAAe,IAAIrB,KAAU0D,GAC7BtC,EAAgB,IAAIpB,KAAU2D,GAC9BtB,EAAW,IAAIrC,KAAU4D,GACzBC,EAAYC,aAAWR,GACvBS,EAASZ,EAAKa,SAASC,cACvBC,EAAa5B,GAAWkB,GAAaA,EAAUW,cAAc,GAC7DC,EAAOC,eACP1C,EAAWC,eAEX0C,EAAaC,aAAiBV,EAAWO,GAEvCI,EAAcC,aAAWH,GAAzBE,UAEFE,EAAgBvE,uBAAW,wBAAC,uBAAAY,EAAA,sEAE9BsC,GAAqB,GAFS,SAGxBmB,IAHwB,OAI9BnB,GAAqB,GAJS,gDAM9BsB,QAAQC,MAAR,MAN8B,yDAQ/B,CAACJ,IAuBJ,OACE,gBAACvB,GAAD,WACE,gBAAC,KAAD,WACE,eAAC,MAAD,CAAMhJ,MAAI,EAAC4K,cAAc,YAAYhL,MAAM,YAAYG,SAAS,OAAO8K,GAAG,MAA1E,kBAIA,eAAC,MAAD,CAAM7K,MAAI,EAAC4K,cAAc,YAAYhL,MAAM,aAAaG,SAAS,OAAjE,SACGwB,EAAgB,KAAM,eAG3B,eAAC,GAAD,CAAe6G,SAAUA,EAAUf,IAAKA,IACxC,gBAAC,KAAD,WACE,eAAC,MAAD,CAAMrH,MAAI,EAAC4K,cAAc,YAAYhL,MAAM,YAAYG,SAAS,OAAO8K,GAAG,MAA1E,SACGf,IAEH,eAAC,MAAD,CAAM9J,MAAI,EAAC4K,cAAc,YAAYhL,MAAM,aAAaG,SAAS,OAAjE,SACGwB,EAAgB,KAAM,eAGzB8G,EAxCG4B,EACL,eAAC,GAAD,CACE9C,cAAeA,EACfC,aAAcA,EACd/B,UAAWyE,EACXzC,IAAKA,EACL/F,gBAAiBA,IAGnB,eAAC,KAAD,CACEwJ,GAAG,MACHjL,MAAM,OACN6G,SAAUyC,GAAqBzB,EAASO,SAASC,SAAS,YAC1D1I,QAASiL,EAJX,SAMGlJ,EAAgB,IAAK,sBAyBZ,eAACwJ,GAAA,EAAD,CAAcD,GAAG,MAAMjL,MAAM,a,UCrEhCmL,GAvB6B,SAAC,GAAkD,IAAhD3J,EAA+C,EAA/CA,QAASoH,EAAsC,EAAtCA,UAAWwC,EAA2B,EAA3BA,IAAK3J,EAAsB,EAAtBA,gBAChEC,EAAkBC,eACxB,EAA4BsG,cAC1B,eAACoD,GAAA,EAAD,CACEC,UAAS,UAAK5J,EAAgB,IAAK,OAA1B,YAAoCF,GAC7C+J,WAAY3C,EAAUK,WACtBmC,IAAKA,EACLI,SAAU/J,KALPgK,EAAP,qBAcA,OACE,eAAC,KAAD,CAAY9L,QANY,SAAC+L,GACzBA,EAAMC,kBACNF,KAIwC3J,QAAQ,OAAOqD,MAAM,KAAK/E,GAAG,MAArE,SACE,eAAC,KAAD,CAAeJ,MAAM,YCXrB4L,GAAeC,aAAH,+KAYZC,GAAmBtN,KAAOM,IAAV,2nBAgBP8M,IAWTG,GAAQvN,KAAOM,IAAV,6UAEK,SAACO,GAAD,OAAWA,EAAMX,MAAMsN,KAAKC,cAWtCC,GAAU1N,KAAOM,IAAV,6GACS,qBAAGJ,MAAkBsE,OAAOmJ,eAM5CC,GAAmB5N,KAAOM,IAAV,kEACV,SAACO,GAAD,OAAYA,EAAMK,SAAW,OAAS,SAsFnC2M,GA1E2B,SAAC,GAA2C,IAAzChD,EAAwC,EAAxCA,KAAM/H,EAAkC,EAAlCA,QAASsH,EAAyB,EAAzBA,UAAWJ,EAAc,EAAdA,QAC/D9G,EAAkBC,eAExB,EAA0D8D,qBAAS,GAAnE,oBAAO6G,EAAP,KAA8BC,EAA9B,KAIM9J,EAAY4G,EAAKa,SAASpH,MAAM,KAAK,GAAG0J,oBAExCjL,EAAsB8H,EAAKoD,UAAL,WACpBpD,EAAKoD,UAAUxD,WAAWvE,oBAAeC,EAAW,CAAEC,sBAAuB,KACjF,IAEEpD,EAAU6H,EAAKa,UAAYb,EAAKa,SAASC,cAAczD,QAAQ,UAAW,IAC1EgG,EAAYrD,EAAKsD,KAAOtD,EAAKsD,KAAKD,UAAY,OAE9CE,EAAUvD,EAAK+B,KAAO/B,EAAK+B,IAAI1G,eAAe,QAAS,CAAEE,sBAAuB,IAEhFiI,EAAwBrM,GAAyB,CACrDC,kBAAmB4I,EAAKyD,WAAWC,QACnCrM,aAAc2I,EAAK2D,MAAMD,UAErBtL,EAAe,UAAMwL,KAAN,YAAgCJ,GAC/C9C,EAAYV,EAAKG,YAAY1I,IAEnC,OACE,gBAACiL,GAAD,WACyB,SAAtB1C,EAAK2D,MAAMlJ,QAAqB,eAACgI,GAAD,IACjC,eAAC,GAAD,CACEtK,QAASA,EACTe,WAAY8G,EAAK9G,WACjBC,gBAAiB6G,EAAK6D,YACtBzK,UAAWA,EACXC,YAAa2G,EAAK2D,MAAMlJ,UAExBxC,GACA,gBAAC,KAAD,CAAM9B,eAAe,gBAAgBM,WAAW,SAAhD,UACE,gBAAC,MAAD,WAAO4B,EAAgB,IAAK,OAA5B,OACA,eAAC,MAAD,CAAMvB,MAAI,EAACiE,MAAO,CAAE+I,QAAS,OAAQrN,WAAY,UAAjD,SACGuJ,EAAK+B,IACJ,uCACE,eAAC,GAAD,CAAW5J,QAASA,EAASC,gBAAiBA,EAAiBmH,UAAWA,EAAWwC,IAAK/B,EAAK+B,MAC9FwB,EAFH,OAKA,eAAC,MAAD,CAAU/J,OAAQ,GAAI7C,MAAO,UAKrC,gBAAC,KAAD,CAAMR,eAAe,gBAArB,UACE,gBAAC,MAAD,WAAOkC,EAAgB,IAAK,QAA5B,OACA,eAAC,MAAD,CAAMvB,MAAI,EAAV,SAAYuM,OAEd,eAACU,GAAD,CAAsB/D,KAAMA,EAAMb,QAASA,EAAS/G,gBAAiBA,IACrE,eAACyK,GAAD,IACA,eAACmB,GAAA,EAAD,CACE1N,QAAS,kBAAM4M,GAA0BD,IACzC5M,SAAU4M,IAEZ,eAACF,GAAD,CAAkB1M,SAAU4M,EAA5B,SACE,eAAC,GAAD,CACEhL,QAASA,EACTF,eAAc,sCAAiCiI,EAAKG,YAAY1I,KAChEO,YAAW,wCAAmC0I,GAC9CxI,oBAAqBA,EACrBC,QAASA,EACTC,gBAAiBA,UCpIZ6L,GAfW,SAACC,EAAoBC,GAC7C,MAAwC/H,qBAAS,GAAjD,oBAAOgI,EAAP,KAAqBC,EAArB,KAWA,OATAC,sBAAU,WACR,IAAIC,EAMJ,OALIL,IAAcE,EAChBC,GAAgB,IACNH,GAAaE,IACvBG,EAAYC,YAAW,kBAAMH,GAAgB,KAAQF,IAEhD,kBAAMM,aAAaF,MACzB,CAACL,EAAWC,EAAWC,IACnBA,GCJHM,GAAYvP,KAAOM,IAAV,6MAGJ,qBAAGJ,MAAkBsE,OAAOM,QAQvB,qBAAG5E,MAAkBsE,OAAOgL,cAMtCC,GAAazP,KAAOM,IAAV,sEAuCDoP,GAlCiB,SAAC,GAQ1B,IAPLjK,EAOI,EAPJA,MACAzC,EAMI,EANJA,QACAd,EAKI,EALJA,aACAD,EAII,EAJJA,kBACAmI,EAGI,EAHJA,UACAuF,EAEI,EAFJA,cAEI,IADJC,kBACI,SACEvB,EAAwBrM,GAAyB,CAAEC,oBAAmBC,iBACtEe,EAAe,UAAMwL,KAAN,YAAgCJ,GAErD,OAAyB,IAAlBsB,EACL,eAACJ,GAAD,UACGI,EACC,uCACE,gBAACF,GAAD,WAAahK,EAAb,QACEmK,GACA,eAAC,GAAD,CAAW5M,QAASA,EAASoH,UAAWA,EAAWwC,IAAK+C,EAAe1M,gBAAiBA,OAI5F,eAACwM,GAAD,UACE,eAAC,MAAD,CAAUjO,MAAO,SAKvB,eAAC+N,GAAD,UACE,gBAACE,GAAD,WAAaE,EAAb,UC1DAE,GAAY7P,aAAO8P,KAAP9P,CAAH,mHAIX,qBAAGE,MAAkBC,aAAaC,MAMhCmP,GAAYvP,KAAOM,IAAV,uIAKX,qBAAGJ,MAAkBC,aAAaC,MAiCvB2P,GA5BkC,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,MAAOjH,EAAU,EAAVA,IACxDF,EAAkBoH,aAAYlH,GAA9BF,cACF5F,EAAkBC,eAClBgN,EAAmB3G,aAAiBV,GAc1C,OACE,gBAAC,GAAD,WACE,eAAC+G,GAAD,CAAW1L,IAAG,wBAAmB6L,EAAnB,QAAgC5L,IAAI,OAAO5C,MAAO,GAAI6C,OAAQ,GAAI5C,GAAG,QACnF,iCAdE0O,EAEA,eAAC,MAAD,CAAM5O,MAAM,YAAYG,SAAS,OAAOC,MAAI,EAA5C,SACGuB,EAAgB,IAAK,aAKrB,KAQH,eAAC,MAAD,CAAMvB,MAAI,EAAV,SAAYsO,WC1CdG,GAASpQ,KAAOqQ,KAAV,sFACD,gBAAGC,EAAH,EAAGA,OAAQpQ,EAAX,EAAWA,MAAX,OAAwBoQ,EAASpQ,EAAMsE,OAAOM,KAAO5E,EAAMsE,OAAO+L,gBAgB9DC,GAXiD,SAAC,GAAiC,IAA/BzG,EAA8B,EAA9BA,SACjE,OAD+F,EAApB0G,cAElE,eAACL,GAAD,CAAQE,OAAQvG,EAAhB,SAA2BA,EAAS7D,mBAG3C,eAACkK,GAAD,CAAQE,OAAQ,EAAhB,SACE,eAAC,MAAD,CAAU9O,MAAO,QChBjB+N,GAAYvP,KAAOM,IAAV,4KAKJ,qBAAGJ,MAAkBsE,OAAOkM,WAEnC,qBAAGxQ,MAAkBC,aAAaC,MAKhCuQ,GAAY3Q,aAAO4Q,KAAP5Q,CAAH,iEACA,qBAAG6Q,QAAyB,iBAAmB,eAiB/CC,GAbyB,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,mBACnC7N,EAAkBC,eAElB6N,GADWC,gBAATC,KAGR,OACE,gBAAC,GAAD,YACIF,GAAY9N,EAAgB,IAAK,WACnC,eAACyN,GAAD,CAAWpP,MAAM,UAAUsP,QAASE,QC7BpCI,GAAmBnR,KAAOM,IAAV,uDAQhB8Q,GAAoBpR,KAAOM,IAAV,sKACZ,qBAAGJ,MAAkBsE,OAAOM,QAKnC,qBAAG5E,MAAkBC,aAAakR,MAMhC9B,GAAYvP,KAAOM,IAAV,uEAmCAgR,GA9B8C,SAAC,GAAoB,IAAlBvN,EAAiB,EAAjBA,WACxDwN,EAAoBxN,EAAaA,EAAWyN,cAAgB,eAAC,MAAD,CAAUhQ,MAAO,KAC7E0B,EAAkBC,eAClBsO,EACJ,iCACGvO,EAAgB,IAAK,wEACtB,wBACA,wBACCA,EACC,IACA,6GAIN,EAA+CwO,cAAWD,EAAgB,UAAW,aAAStL,OAAWA,EAAW,CAClH,GACA,KAFMwL,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAK5B,OACE,gBAAC,GAAD,WACE,eAACT,GAAD,UAAoBG,IACpB,eAACJ,GAAD,CAAkBW,IAAKH,EAAvB,SACE,eAAC,KAAD,CAAUpQ,MAAM,iBAEjBsQ,GAAkBD,MCjDnBT,GAAmBnR,KAAOM,IAAV,uDAQhByR,GAAmB/R,KAAOM,IAAV,iLAMlB,qBAAGJ,MAAkBC,aAAakR,MAMhC9B,GAAYvP,KAAOM,IAAV,uEAkCA0R,GA7B4C,SAAC,GAAmB,IAAjB/D,EAAgB,EAAhBA,UACtDgE,EAAmBhE,EAAS,WAC5BhI,OAAOgI,GAAW/H,oBAAeC,EAAW,CAAEC,sBAAuB,KAEzE,eAAC,MAAD,CAAU5E,MAAO,KAEb0B,EAAkBC,eACxB,EAA+CuO,cAC7CxO,EAAgB,IAAK,mEACrB,UACA,aACAiD,OACAA,EACA,CAAC,GAAI,KANCwL,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAS5B,OACE,gBAAC,GAAD,WACE,eAACE,GAAD,UACE,eAAC,MAAD,UAAOE,MAET,eAAC,GAAD,CAAkBH,IAAKH,EAAvB,SACE,eAAC,KAAD,CAAUpQ,MAAM,iBAEjBsQ,GAAkBD,M,UCrDZM,GAAkBlS,KAAOM,IAAV,yXAEN,qBAAGJ,MAAkBsE,OAAOC,SAM9C,qBAAGvE,MAAkBC,aAAaC,MAOlC,qBAAGF,MAAkBC,aAAagS,MAQzBC,GAAepS,KAAOM,IAAV,6FAMZ+R,GAAQrS,KAAOqQ,KAAV,4CACP,qBAAGnQ,MAAkBsE,OAAO8N,aAG1BC,GAASvS,KAAOqQ,KAAV,4CACR,qBAAGnQ,MAAkBsE,OAAOgL,cAG1BgD,GAAgBxS,KAAOM,IAAV,0GAKbkQ,GAASxQ,KAAOM,IAAV,qFAGR,qBAAGJ,MAAkBsE,OAAOM,QAG1B2N,GAASzS,KAAOM,IAAV,gEAER,qBAAGJ,MAAkBsE,OAAOgL,cCsBxB1F,GA1DoD,SAAC,GAAsC,IAApCd,EAAmC,EAAnCA,IAAKiC,EAA8B,EAA9BA,SAAUwF,EAAoB,EAApBA,cAC7EiC,EAAoB,IAAIhL,KAAUuD,EAASlB,UAC3CK,EAAYC,eACdN,EAAW,EACXQ,EAAe,EACflE,EAAiBoK,EAAgB1G,EAAS7D,iBAAmB,eAAC,MAAD,CAAU1E,MAAO,KAG7EkR,EAAkBC,WACrB5I,EAAWP,aAAiBkJ,GAC5BnI,EAAe,IAAI7C,KAAUqC,GAAUS,aAAaJ,GAAWK,WAC/DpE,EAAiB0D,EAAS7D,kBAG5B,MAAkCe,qBAAS,GAA3C,oBAAOG,EAAP,KAAkBC,EAAlB,KACQ6C,EAAaC,aAAWnB,GAAxBkB,SACFhH,EAAkBC,eAExB,EAA4ByP,sBAAW,CACrCC,MAAO,EACPC,IAAKvI,EACLwI,SAAU,EACVC,UAAW,IACXC,SAAU,IALJC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,OAOXC,EAAcC,kBAAOF,GAM3B,OAJAhE,sBAAU,WACRiE,EAAYE,QAAQ/I,KACnB,CAACA,EAAc6I,IAGhB,gBAAClB,GAAD,WACE,gBAACE,GAAD,WACE,eAACC,GAAD,oBACA,eAACE,GAAD,UAASrP,EAAgB,KAAM,eAEjC,gBAACsP,GAAD,WACE,iCACE,eAAC,GAAD,UAASnM,IACR6M,EAAU,GAAK,gBAAC,GAAD,eAAUA,EAAV,YAElB,eAAC,KAAD,CACE7K,UAAW0B,GAAY3C,IAAcqJ,EACrCtP,QAAO,wBAAE,uBAAAsH,EAAA,6DACPpB,GAAa,GADN,SAED6C,IAFC,OAGP7C,GAAa,GAHN,2CAKTzF,GAAG,MAPL,SASGsB,EAAgB,IAAK,oBC7C1B0F,GAAoB5I,KAAOM,IAAV,+CAuJRmS,GA/I6C,SAAC,GAOtD,IANLzJ,EAMI,EANJA,IACA0C,EAKI,EALJA,SACAV,EAII,EAJJA,YACAsD,EAGI,EAHJA,WACAE,EAEI,EAFJA,MACAiC,EACI,EADJA,cAEMvN,EAAkBC,eAChB6G,EAAYC,eAAZD,QACR,EAAkD/C,qBAAS,GAA3D,oBAAO6D,EAAP,KAA0BC,EAA1B,KACA,EAAmDmF,aAAYlH,GAAvDkC,EAAR,EAAQA,UAAWnC,EAAnB,EAAmBA,aAAcD,EAAjC,EAAiCA,cACzBG,EAAYC,aAASF,GAArBC,QACAE,EAAcC,aAAWJ,GAAzBG,UACF2C,EAAOC,eACP1C,EAAWC,eAEXsC,EAAa5B,GAAWkB,GAAaA,EAAUW,cAAc,GAE7DN,EAAYP,EAAY1I,IACxB+L,EAAwBrM,GAAyB,CACrDC,kBAAmBqM,EAAWC,QAC9BrM,aAAcsM,EAAMD,UAEhBtL,EAAe,UAAMwL,KAAN,YAAgCJ,GAE/ChI,EAAiBwB,wBAAY,WACjC,IAAM0B,EAAsBC,aAAiBV,GAC7C,OAAIS,EAAsB,GAAKA,EAAsB,KAC5C/B,aAAsBsB,GAAe5C,iBAEvCqD,EAAoBrD,mBAC1B,CAAC4C,IAEJ,EAA2BW,cACzB,eAAC,GAAD,CAAcpE,IAAK0D,EAAcjC,UAAWmC,EAASjC,UAAW0E,EAAUzI,gBAAiBA,KADtFyG,EAAP,qBAGA,EAA4BD,cAAS,eAAC,GAAD,CAAepE,IAAKyD,EAAehC,UAAWqC,EAAWnC,UAAW0E,KAAlG/B,EAAP,qBAEMqC,EAAaC,aAAiBV,EAAWO,GAEvCI,EAAcC,aAAWH,GAAzBE,UAEFE,EAAgBvE,uBAAW,wBAAC,uBAAAY,EAAA,sEAE9BsC,GAAqB,GAFS,SAGxBmB,IAHwB,OAI9BnB,GAAqB,GAJS,gDAM9BsB,QAAQC,MAAR,MAN8B,yDAQ/B,CAACJ,IAEJ,OAAKlC,EAaD4B,EACE9C,EAAcN,GAAG,GAEjB,gBAAC0J,GAAD,WACE,gBAACE,GAAD,WACE,gBAACC,GAAD,WAAQ3G,EAAR,OACA,eAAC6G,GAAD,UAASrP,EAAgB,IAAK,eAEhC,gBAACsP,GAAD,WACE,+BACE,eAAC,GAAD,UAASnM,QAEX,gBAAC,GAAD,WACE,eAAC,KAAD,CAAY/C,QAAQ,YAAYnC,QAASwI,EAAmBlI,GAAG,MAA/D,SACE,eAAC,MAAD,CAAWF,MAAM,UAAUC,MAAM,WAEnC,eAAC,KAAD,CAAY8B,QAAQ,YAAYnC,QAASuI,EAAzC,SACE,eAAC,KAAD,CAASnI,MAAM,UAAUC,MAAM,oBASzC,gBAAC0Q,GAAD,WACE,gBAACE,GAAD,WACE,gBAACG,GAAD,WAASrP,EAAgB,IAAK,SAA9B,OACA,eAACmP,GAAD,UAAQ3G,OAEV,eAAC8G,GAAD,UACE,eAAC,KAAD,CACEhR,MAAM,OACNL,QAASuI,EACTpG,QAAQ,YACR+E,SAAUgB,EAASO,SAASC,SAAS,YAJvC,SAMG3G,EAAgB,IAAK,mBAO3BuN,EAcH,gBAACyB,GAAD,WACE,eAACE,GAAD,UACE,eAACG,GAAD,UAASrP,EAAgB,IAAK,mBAEhC,eAACsP,GAAD,UACE,eAAC,KAAD,CACEhR,MAAM,OACN6G,SAAUyC,GAAqBzB,EAASO,SAASC,SAAS,YAC1D1I,QAASiL,EACT9I,QAAQ,YAJV,SAMGJ,EAAgB,IAAK,iBAvB1B,gBAACgP,GAAD,WACE,eAACE,GAAD,UACE,eAACG,GAAD,UAASrP,EAAgB,IAAK,qBAEhC,eAACsP,GAAD,UACE,eAAC,MAAD,CAAUhR,MAAO,IAAK+R,aAAc,GAAIC,UAAW,UA/DvD,gBAACtB,GAAD,WACE,eAACE,GAAD,UACE,eAACG,GAAD,UAASrP,EAAgB,IAAK,qBAEhC,eAACsP,GAAD,UACE,eAAC9F,GAAA,EAAD,CAAclL,MAAM,eCnExBiS,GAAkBpG,aAAH,uGASfqG,GAAoBrG,aAAH,uGASjBkC,GAAYvP,KAAOM,IAAV,mPACA,qBAAGY,SAEVyS,aADI,yEAEAF,IAEJE,aAJI,yEAKAD,OAGI,qBAAGxT,MAAkBsE,OAAOiJ,cAMxC,qBAAGvN,MAAkBC,aAAakR,MAMhC5O,GAAqBzC,aAAO0C,MAAP1C,CAAH,kDAIlB4T,GAAiB5T,KAAOM,IAAV,2KACT,qBAAGJ,MAAkBsE,OAAOM,QAKnC,qBAAG5E,MAAkBC,aAAaC,MAKhCyT,GAAgB7T,KAAOM,IAAV,mRAKf,qBAAGJ,MAAkBC,aAAaC,MAgBhC8R,GAAkBlS,KAAOM,IAAV,qLAIjB,qBAAGJ,MAAkBC,aAAaC,MAQhC0T,GAAgB9T,KAAOM,IAAV,kDAIbyT,GAAiB/T,KAAOM,IAAV,oFAGhB,qBAAGJ,MAAkBC,aAAakR,MAKhC2C,GAAehU,KAAOM,IAAV,8HAoEH2T,GA7DgD,SAAC,GAOzD,IANLC,EAMI,EANJA,QACAtH,EAKI,EALJA,IACA7I,EAII,EAJJA,WACAkK,EAGI,EAHJA,UACAwC,EAEI,EAFJA,cACAvP,EACI,EADJA,SAEM2J,EAAOqJ,EAEPhR,EAAkBC,eAClBgR,EAA+B,OAApBtJ,EAAK9G,WACduK,EAA4BzD,EAA5ByD,WAAYE,EAAgB3D,EAAhB2D,MAAOL,EAAStD,EAATsD,KACrBnL,EAAU6H,EAAKa,UAAYb,EAAKa,SAASC,cAAczD,QAAQ,UAAW,IAC1EmG,EAAwBrM,GAAyB,CACrDC,kBAAmBqM,EAAWC,QAC9BrM,aAAcsM,EAAMD,UAEhBhD,EAAYV,EAAKG,YAAY1I,IAC7B8R,EAAG,sCAAkC7I,GACrC8I,EAAI,wCAAoC9I,GAE9C,OACE,gBAAC,GAAD,CAAWrK,SAAUA,EAArB,UACE,gBAAC4S,GAAD,WACGK,GACC,eAACP,GAAD,UACE,eAAC,GAAD,CAAoB7R,KAAI,qDAAgDsM,GAAxE,SACGnL,EAAgB,IAAD,cAAaF,GAAW,CAAEI,KAAMJ,QAItD,eAAC,GAAD,CAAoBjB,KAAMqS,EAA1B,SAAgClR,EAAgB,IAAK,mBACrD,eAAC,GAAD,CAAoBnB,KAAMsS,EAA1B,SAAiCnR,EAAgB,IAAK,mBACtD,gBAAC2Q,GAAD,WACGhJ,EAAK6D,YAAc,eAAC,GAAD,IAAmB,eAAC,GAAD,IACtCP,EAAO,eAAC,GAAD,IAAc,WAG1B,gBAAC4F,GAAD,WACE,gBAACC,GAAD,WACE,eAAC,MAAD,UAAO9Q,EAAgB,IAAK,SAC5B,eAAC,GAAD,gBAAS0J,OAEX,gBAACoH,GAAD,WACE,eAAC,MAAD,UAAO9Q,EAAgB,IAAK,gBAC5B,eAAC,GAAD,gBAAgBa,OAElB,gBAACiQ,GAAD,WACE,eAAC,MAAD,UAAO9Q,EAAgB,IAAK,eAC5B,eAAC,GAAD,gBAAe+K,UAGnB,gBAAC,GAAD,WACE,eAAC,GAAD,6BAAmBpD,GAAnB,IAAyB4F,cAAeA,KACxC,eAAC6D,GAAD,6BAAkBzJ,GAAlB,IAAwB4F,cAAeA,YCtLzC8D,GAAQvU,KAAOM,IAAV,qFAEA,qBAAGJ,MAAkBsE,OAAOgL,cAIjCgF,GAAmBxU,KAAOM,IAAV,4FAmBPmU,GAT+B,SAAC,GAA8B,IAAD,IAA3BxE,aAA2B,MAAnB,GAAmB,EAAfrP,EAAe,EAAfA,SAC3D,OACE,iCACGqP,GAAS,eAACsE,GAAD,UAAQtE,IAClB,eAACuE,GAAD,UAAmB5T,Q1BOZ8T,GAAwC,CACnD,CACEjU,GAAI,EACJ2C,KAAM,OACNuR,cAAe,IACfC,UAAU,EACV3E,MAAO,IAET,CACExP,GAAI,EACJ2C,KAAM,SACNuR,cAAe,KACfC,UAAU,EACV3E,MAAO,UAET,CACExP,GAAI,EACJ2C,KAAM,MACNuR,cAAe,IACfC,UAAU,EACV3E,MAAO,OAET,CACExP,GAAI,EACJ2C,KAAM,UACNuR,cAAe,IACfC,UAAU,EACV3E,MAAO,KAIE4E,GAAyC,CACpD,CACEpU,GAAI,EACJ2C,KAAM,OACNuR,cAAe,IACfC,UAAU,EACV3E,MAAO,IAET,CACExP,GAAI,EACJ2C,KAAM,SACNuR,cAAe,KACfC,UAAU,EACV3E,MAAO,UAET,CACExP,GAAI,EACJ2C,KAAM,MACNuR,cAAe,IACfC,UAAU,EACV3E,MAAO,OAET,CACExP,GAAI,EACJ2C,KAAM,YACNuR,cAAe,IACfC,UAAU,EACV3E,MAAO,aAET,CACExP,GAAI,EACJ2C,KAAM,aACNuR,cAAe,IACfC,UAAU,EACV3E,MAAO,cAET,CACExP,GAAI,EACJ2C,KAAM,UACNuR,cAAe,IACfC,UAAU,EACV3E,MAAO,M,SAICnQ,K,cAAAA,E,aAAAA,Q,K2B3EZ,I,mDAAMgV,GAAQ,CACZlI,IAAK8C,GACL7E,KAAMkF,GACNO,OAAQE,GACR0D,QAASpD,GACT/M,WAAYuN,GACZrD,UAAW+D,IAGP+C,GAAY/U,KAAOM,IAAV,gLAOX,qBAAGJ,MAAkBC,aAAagS,MAKhC6C,GAAWhV,KAAOiV,GAAV,oFAEe,qBAAG/U,MAAkBsE,OAAOmJ,eAGnDuH,GAAmBlV,KAAOmV,GAAV,6DAIhBC,GAAgBpV,KAAOmV,GAAV,8EAKbE,GAAiBrV,KAAOmV,GAAV,qDA0HLG,GAtH2C,SAACzU,GACzD,IAAQqT,EAA2BrT,EAA3BqT,QAASzD,EAAkB5P,EAAlB4P,cACX8E,IAAoBrF,aAAYgE,EAAQlL,KAAKF,cAAc2B,WACjE,EAAsDxD,oBAASsO,GAA/D,oBAAOC,EAAP,KAA4BC,EAA5B,KACMC,EAAoB5G,GAAkB0G,EAAqB,KAC3DtS,EAAkBC,eAElBwS,EAAoB,WACxBF,GAAwBD,IAG1BrG,sBAAU,WACRsG,EAAuBF,KACtB,CAACA,IAEJ,MAAuBtE,gBAAfC,EAAR,EAAQA,KAAM0E,EAAd,EAAcA,KAER5E,GAAYE,EACZ2E,EAAc7E,EAAW0D,GAAqBG,GAC9CiB,EAAcD,EAAYE,KAAI,SAACC,GAAD,OAAYA,EAAO5S,QAqFvD,OACE,uCAnFKwS,EAiDH,gBAACZ,GAAD,CAAU7T,QAASwU,EAAnB,UACE,gCACE,8BACE,eAACN,GAAD,UACE,eAAC,GAAD,UACE,eAAC,GAAD,gBAAUxU,EAAMgK,aAItB,gCACE,eAACqK,GAAD,UACE,eAAC,GAAD,CAAYjF,MAAO/M,EAAgB,KAAM,UAAzC,SACE,eAAC,GAAD,6BAAYrC,EAAMyP,QAAlB,IAA0BG,cAAeA,SAG7C,eAAC2E,GAAD,UACE,eAAC,GAAD,CAAYnF,MAAO/M,EAAgB,IAAK,OAAxC,SACE,eAAC,GAAD,6BAASrC,EAAM+L,KAAf,IAAoBgD,YAAU,eAKtC,8BACE,eAACmF,GAAD,UACE,eAAC,GAAD,UACE,eAAC,GAAD,CAAShE,mBAAoByE,aAxEnC,eAACR,GAAD,CAAU7T,QAASwU,EAAnB,SACGM,OAAOC,KAAKrV,GAAOkV,KAAI,SAACI,GACvB,IAAMC,EAAcN,EAAYO,QAAQF,GACxC,IAAqB,IAAjBC,EACF,OAAO,KAGT,OAAQD,GACN,IAAK,UACH,OACE,8BACE,eAACpB,GAAD,UACE,eAAC,GAAD,UACE,eAAC,GAAD,CAAShE,mBAAoByE,SAH1BW,GAQb,IAAK,MACH,OACE,8BACE,eAACpB,GAAD,UACE,eAAC,GAAD,CAAY9E,MAAO/M,EAAgB,IAAK,OAAxC,SACE,eAAC,GAAD,6BAASrC,EAAM+L,KAAf,IAAoBgD,WAAYoB,UAH7BmF,GAQb,QACE,OACE,8BACE,eAACpB,GAAD,UACE,eAAC,GAAD,CACE9E,MAAO/M,EAAgB2S,EAAYO,GAAazB,cAAekB,EAAYO,GAAanG,OAD1F,SAGGqG,KAAMC,cAAczB,GAAMqB,GAA1B,6BAAqCtV,EAAMsV,IAA3C,IAAiD1F,wBAL/C0F,SAqDpBT,GACC,8BACE,qBAAIc,QAAS,EAAb,SACE,eAAC,GAAD,6BAAiB3V,GAAjB,IAAwBK,SAAUsU,aCtKxCjG,GAAYvP,KAAOM,IAAV,gIACH,qBAAGJ,MAAkBsN,KAAKiJ,cAEtB,qBAAGvW,MAAkBsN,KAAKC,cAKpCiJ,GAAe1W,KAAOM,IAAV,0GAQZqW,GAAc3W,KAAO4W,MAAV,qKASXC,GAAY7W,KAAO8W,MAAV,sHASTC,GAAiB/W,KAAOM,IAAV,sDAId0W,GAAwBhX,KAAOM,IAAV,0HA2CZ2W,GApC0B,SAACpW,GACxC,IAAMqW,EAAiB7D,kBAAuB,MACxCnQ,EAAkBC,eAChBgU,EAAiCtW,EAAjCsW,KAAMC,EAA2BvW,EAA3BuW,QAAS3G,EAAkB5P,EAAlB4P,cAEf4G,EAASC,cAASF,EAASD,EAAM,CAAEvC,UAAU,EAAM2C,WAAY,SAA/DF,KAQR,OACE,eAAC,GAAD,UACE,gBAACN,GAAD,WACE,eAACL,GAAD,CAAc5E,IAAKoF,EAAnB,SACE,eAACP,GAAD,UACE,eAACE,GAAD,UACGQ,EAAKtB,KAAI,SAACyB,GACT,OAAO,yBAAC,GAAD,6BAASA,EAAIC,UAAb,IAAuBhH,cAAeA,EAAe0F,IAAG,oBAAeqB,EAAI/W,gBAK1F,eAACuW,GAAD,UACE,gBAAC,KAAD,CAAQ1T,QAAQ,OAAOnC,QAnBX,WAClB+V,EAAe5D,QAAQoE,eAAe,CACpCC,SAAU,YAiBN,UACGzU,EAAgB,IAAK,UACtB,eAAC,KAAD,CAAe3B,MAAM,uB,SClClBqW,GA1CuC,SAAC,GAA0D,IAK3GC,EALmDC,EAAuD,EAAvDA,wBAAyBC,EAA8B,EAA9BA,wBACxEC,EAAQC,eAARD,IACF3O,EAAWC,eACXpG,EAAkBC,eAGxB,OAAQkG,EAASO,UACf,IAAK,SACHiO,EAAc,EACd,MACF,IAAK,iBACHA,EAAc,EACd,MACF,IAAK,kBACHA,EAAc,EACd,MACF,QACEA,EAAc,EAIlB,OACE,eAAC,GAAD,UACE,gBAAC,KAAD,CAAYA,YAAaA,EAAalR,MAAM,KAAKrD,QAAQ,SAAzD,UACE,eAAC,KAAD,CAAgBxB,GAAIoW,KAAMC,GAAE,UAAKH,GAAjC,SACG9U,EAAgB,KAAM,UAEzB,eAAC,MAAD,CAAiBkV,KAAMN,EAAvB,SACE,eAAC,KAAD,CAAgBhW,GAAIoW,KAAMC,GAAE,UAAKH,EAAL,YAA5B,SACG9U,EAAgB,IAAK,gBAG1B,eAAC,MAAD,CAAiBkV,KAAML,EAAvB,SACE,eAAC,KAAD,CAAgBjW,GAAIoW,KAAMC,GAAE,UAAKH,EAAL,aAA5B,SACG9U,EAAgB,IAAK,0BAU5BnD,GAAUC,KAAOM,IAAV,8MAUT,qBAAGJ,MAAkBC,aAAaC,M,qBC5DhC2E,GAAc/E,aAAOgF,KAAPhF,CAAH,6EAKXqY,GAAerY,KAAOM,IAAV,4GAEd,qBAAGJ,MAAkBC,aAAaC,MAMhCmP,GAAYvP,KAAOM,IAAV,6BAkCAgY,GA5BsB,SAAC,GAAoC,IAAxBC,EAAuB,EAAjChT,SACtC,EAA8B0B,qBAAS,GAAvC,oBAAO4J,EAAP,KAAgB2H,EAAhB,KACA,EAAoCvR,oBAAS,IAA7C,oBAAOwR,EAAP,KAAmBC,EAAnB,KAEMC,EAAoBpR,oBACxB,kBAAMqR,MAAS,SAAC9Q,GAAD,OAA4CyQ,EAAiBzQ,KAAI,OAChF,CAACyQ,IAQH,OACE,eAAC,GAAD,CAAW1H,QAASA,EAApB,SACE,eAACwH,GAAD,UACE,eAAC,GAAD,CACE5S,MAAOgT,EACPlT,SAVS,SAACuC,GAChB4Q,EAAc5Q,EAAE+Q,OAAOpT,OACvBkT,EAAkB7Q,IASZpB,YAAY,eACZoS,OAAQ,kBAAMN,GAAW,WCnC7BjJ,GAAYvP,KAAOM,IAAV,0FAGX,qBAAGJ,MAAkBC,aAAaC,MAwBvB2Y,GAnB8C,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAClEC,EAAe,SAACC,GAChBH,IAAaG,GACfF,EAASE,IAIb,OACE,gBAAC,GAAD,WACE,eAAC,KAAD,CAAY7V,QAAQ,OAAOqD,MAAM,KAAKxF,QAAS,kBAAM+X,EAAapZ,GAASsZ,OAA3E,SACE,eAAC,KAAD,CAAc7X,MAAOyX,IAAalZ,GAASsZ,KAAO,UAAY,mBAEhE,eAAC,KAAD,CAAY9V,QAAQ,OAAOqD,MAAM,KAAKxF,QAAS,kBAAM+X,EAAapZ,GAASuZ,QAA3E,SACE,eAAC,MAAD,CAAc9X,MAAOyX,IAAalZ,GAASuZ,MAAQ,UAAY,uBCCjEC,GAAmBtZ,KAAOM,IAAV,wTAUlB,qBAAGJ,MAAkBC,aAAaC,MAQhCmZ,GAAgBvZ,KAAOM,IAAV,qIAKf6E,OAKEqU,GAAexZ,KAAOM,IAAV,oEACZ6E,OAKAsU,GAAkBzZ,KAAOM,IAAV,iKAMjB,qBAAGJ,MAAkBC,aAAaC,MAMhCsZ,GAAe1Z,KAAOM,IAAV,sSAWd,qBAAGJ,MAAkBC,aAAaC,MAUhCuZ,GAAc3Z,aAAO8P,KAAP9P,CAAH,iGA4UF4Z,GArUS,WACtB,IAAQC,EAAS5B,eAAT4B,KACAjQ,EAAaN,eAAbM,SACF1G,EAAkBC,eACxB,EAA0C2W,eAA5BC,EAAd,EAAQ5C,KAAe6C,EAAvB,EAAuBA,eACjB5P,EAAYC,eAClB,EAA0BpD,oBAAS,IAAnC,oBAAOgT,EAAP,KAAcC,EAAd,KACA,EAAgCpZ,aAAgBhB,GAASuZ,MAAO,qBAAhE,oBAAOL,EAAP,KAAiBmB,EAAjB,KACQnQ,EAAYC,eAAZD,QACR,EAAoC/C,oBAAS,OAA7C,oBAAOmT,EAAP,KAAmBC,EAAnB,KACMC,EAASC,eAETC,EAAWC,eACTC,EAAgBC,eAAhBD,YACRvL,sBAAU,WACJnF,GACFwQ,EAASI,aAAuB5Q,MAEjC,CAACA,EAASwQ,EAAUE,IAEvB,IAAMG,EAAajR,EAASC,SAAS,YAC/BiR,EAAalR,EAASC,SAAS,WAC/BsK,GAAY2G,IAAeD,EAI3BpK,GAAiBzG,KAAcA,GAAWgQ,EAEhD,EAAoC/S,qBAAUkN,GAA9C,oBAAO4G,EAAP,KAAmBC,EAAnB,KACA7L,sBAAU,WACR6L,GAAe7G,KACd,CAACA,IAEJhF,sBAAU,WAERqL,EAASS,aAAyBJ,IAI9BA,IACFL,EAASU,gBACLlR,GACFwQ,EAASI,aAAuB5Q,OAGnC,CAAC6Q,EAAYL,EAAUxQ,IAE1B,IAAMmR,EAAcpB,EAAQqB,QAAO,SAACvQ,GAAD,OAAuB,IAAbA,EAAK7B,KAAiC,OAApB6B,EAAK9G,aAAwBsX,aAAcxQ,EAAK7B,QACzGsS,EAAgBvB,EAAQqB,QAAO,SAACvQ,GAAD,OAAuB,IAAbA,EAAK7B,KAAiC,OAApB6B,EAAK9G,aAAwBsX,aAAcxQ,EAAK7B,QAC3GuS,EAAgBxB,EAAQqB,QAAO,SAACvQ,GAAD,OAAUwQ,aAAcxQ,EAAK7B,QAE5DwS,EAAkBL,EAAYC,QAClC,SAACvQ,GAAD,OAAUA,EAAKI,UAAY,IAAIvD,KAAUmD,EAAKI,SAASnC,eAAe+C,cAAc,MAGhF4P,EAAsBH,EAAcF,QACxC,SAACvQ,GAAD,OAAUA,EAAKI,UAAY,IAAIvD,KAAUmD,EAAKI,SAASnC,eAAe+C,cAAc,MAGhF6P,EAAsBH,EAAcH,QACxC,SAACvQ,GAAD,OAAUA,EAAKI,UAAY,IAAIvD,KAAUmD,EAAKI,SAASnC,eAAe+C,cAAc,MAGhF8P,EAAY9T,wBAChB,SAAC+T,GACC,IAAIC,EAA+CD,EAAe7F,KAAI,SAAClL,GACrE,IAAKA,EAAKiR,sBAAwBxB,EAChC,OAAOzP,EAGT,IAAMkR,EAAqBzB,EAAO9O,aAAWX,EAAKyD,WAAWC,SAASiD,eAChEwK,EAAiB,IAAItU,KAAUmD,EAAKiR,qBAAqBG,MAAMF,GAC/DnP,EAAMuH,EAAW+H,aAAWrR,EAAKsR,WAAY/R,EAAW4R,GAAkB,EAEhF,OAAO,6BAAKnR,GAAZ,IAAkB+B,MAAKqB,UAAW+N,OAGpC,GAAI/B,EAAO,CACT,IAAMmC,EAAiBnC,EAAMzI,cAC7BqK,EAAwBA,EAAsBT,QAAO,SAACvQ,GACpD,OAAOA,EAAKa,SAAS8F,cAAc3H,SAASuS,MAGhD,OAAOP,IAET,CAACzR,EAAWkQ,EAAQL,EAAO9F,IAOvBkI,EAAchJ,kBAAuB,MAE3C,EAAwDpM,oBAhG1B,IAgG9B,oBAAOqV,EAAP,KAA6BC,EAA7B,KACA,EAA0CtV,qBAAS,GAAnD,oBAAOuV,EAAP,KAAsBC,EAAtB,KAEMC,EAAsBnV,oBAAQ,WAClC,IAAIoV,EAAc,GA+BlB,OAVIxI,IACFwI,EAA2BhB,EAAbZ,EAAuBS,EAA6BL,IAEhEL,IACF6B,EAA2BhB,EAAbZ,EAAuBU,EAAiCH,IAEpET,IACF8B,EAA2BhB,EAAbZ,EAAuBW,EAAiCH,IA1BtD,SAACqB,GACjB,OAAQxC,GACN,IAAK,MACH,OAAOyC,mBAAQD,GAAO,SAAC/R,GAAD,OAA+BA,EAAK+B,MAAK,QACjE,IAAK,aACH,OAAOiQ,mBACLD,GACA,SAAC/R,GAAD,OAAgCA,EAAK9G,WAAakC,OAAO4E,EAAK9G,WAAW+Y,MAAM,GAAI,IAAM,IACzF,QAEJ,IAAK,SACH,OAAOD,mBAAQD,GAAO,SAAC/R,GAAD,OAAgCA,EAAKI,SAAWJ,EAAKI,SAASlB,SAAW,IAAI,QACrG,IAAK,YACH,OAAO8S,mBAAQD,GAAO,SAAC/R,GAAD,OAA+B5E,OAAO4E,EAAKoD,aAAY,QAC/E,QACE,OAAO2O,GAcNG,CAAUJ,GAAaG,MAAM,EAAGR,KACtC,CACDlC,EACAe,EACAQ,EACAL,EACAC,EACApH,EACA2G,EACAD,EACAa,EACAD,EACAV,EACAS,EACAc,IAGFnN,sBAAU,WAQHqN,IACsB,IAAIQ,sBART,SAACC,GACrB,aAAgBA,EAAhB,MACUC,gBACRX,GAAwB,SAACY,GAAD,OAA2BA,EAxJ3B,QA6JuC,CAC/DC,WAAY,MACZC,UAAW,IAEIC,QAAQjB,EAAY/I,SACrCmJ,GAAiB,MAElB,CAACC,EAAqBF,IAEzB,IAAMe,EAAUb,EAAoB3G,KAAI,SAAClL,GACvC,IAAQ2D,EAAsB3D,EAAtB2D,MAAOF,EAAezD,EAAfyD,WACTpM,EAAesM,EAAMD,QACrBtM,EAAoBqM,EAAWC,QAC/BvL,EAAU6H,EAAKa,UAAYb,EAAKa,SAASpH,MAAM,KAAK,GAAGqH,cAAczD,QAAQ,UAAW,IA8B9F,MA5BsB,CACpB0E,IAAK,CACHnH,MAAOoF,EAAK+B,KAAO/B,EAAK+B,IAAI1G,eAAe,QAAS,CAAEE,sBAAuB,IAC7ErC,WAAY8G,EAAK9G,WACjBf,UACAd,eACAD,oBACAmI,YACAuF,cAAe9E,EAAK+B,KAEtB/B,KAAM,CACJmF,MAAOnF,EAAKa,SAASpH,MAAM,KAAK,GAAG0J,oBACnCiC,MAAOjN,EACPgG,IAAK6B,EAAK7B,KAEZsH,OAAQ,CACNvG,SAAUP,aAAiB,IAAI9B,KAAUmD,EAAKI,SAASlB,WACvDf,IAAK6B,EAAK7B,KAEZiF,UAAW,CACTA,UAAWpD,EAAKoD,WAElBlK,WAAY,CACVA,WAAY8G,EAAK9G,YAEnBmQ,QAASrJ,MA+Db,OACE,uCACE,gBAAC2S,GAAA,EAAD,WACE,eAAC,KAAD,CAAS1b,GAAG,KAAK2b,KAAK,MAAMlc,MAAM,YAAYM,GAAG,OAAjD,SACGqB,EAAgB,IAAK,WAExB,eAAC,KAAD,CAASua,KAAK,KAAKlc,MAAM,OAAzB,SACG2B,EAAgB,IAAK,kDAG1B,eAAC,GAAD,IACA,gBAACwa,GAAA,EAAD,WACE,gBAACpE,GAAD,WACE,gBAACI,GAAD,WACE,eAAC,GAAD,CAAYV,SAAUA,EAAUC,SAAU,SAACE,GAAD,OAAoBgB,EAAYhB,MAC1E,gBAACI,GAAD,WACE,eAAC,MAAD,CAAQoE,QAAS5C,EAAYxV,SAAU,kBAAMyV,GAAeD,IAAapU,MAAM,OAC/E,gBAAC,MAAD,eAAQzD,EAAgB,KAAM,qBAEhC,eAAC,GAAD,CACE4U,wBAAyB2D,EAAoBmC,OAAS,EACtD7F,wBAAyB2D,EAAoBkC,OAAS,OAG1D,gBAACnE,GAAD,WACE,gBAACD,GAAD,WACE,eAAC,MAAD,sBACA,eAACqE,GAAA,EAAD,CACEC,QAAS,CACP,CACE7N,MAAO,MACPxK,MAAO,OAET,CACEwK,MAAO,MACPxK,MAAO,OAET,CACEwK,MAAO,aACPxK,MAAO,cAET,CACEwK,MAAO,SACPxK,MAAO,UAET,CACEwK,MAAO,YACPxK,MAAO,cAGXF,SAtDiB,SAACwY,GAC9B1D,EAAc0D,EAAOtY,aAwDb,gBAAC+T,GAAD,CAAc5T,MAAO,CAAEoY,WAAY,IAAnC,UACE,eAAC,MAAD,qBACA,eAAC,GAAD,CAAazY,SAjOC,SAAC2H,GACzBgN,EAAShN,EAAM2L,OAAOpT,mBAgHF,WACpB,GAAIuT,IAAalZ,GAASuZ,OAASkE,EAAQK,OAAQ,CACjD,IAEMxG,EAFevC,GAEQkB,KAAI,SAACC,GAAD,MAAa,CAC5CvV,GAAIuV,EAAOvV,GACX2C,KAAM4S,EAAO5S,KACb6M,MAAO+F,EAAO/F,MACdgO,KAAM,SAACxV,EAAsByV,GAC3B,OAAQlI,EAAO5S,MACb,IAAK,OACH,OAAO8a,EAAEzd,GAAKgI,EAAEhI,GAClB,IAAK,MACH,OAAIgI,EAAEgP,SAAS7K,IAAInH,OAASyY,EAAEzG,SAAS7K,IAAInH,MAClCQ,OAAOwC,EAAEgP,SAAS7K,IAAInH,OAASQ,OAAOiY,EAAEzG,SAAS7K,IAAInH,OAGvD,EACT,IAAK,SACH,OAAOgD,EAAEgP,SAASnH,OAAOvG,SAAWmU,EAAEzG,SAASnH,OAAOvG,SACxD,QACE,OAAO,IAGb6K,SAAUoB,EAAOpB,aAGnB,OAAO,eAAC,GAAD,CAAOuC,KAAMoG,EAASnG,QAASA,EAAS3G,cAAeA,IAGhE,OACE,+BACE,gBAAC9M,GAAA,EAAD,WACE,eAAC,KAAD,CAAOwa,OAAK,EAACtE,KAAI,UAAKA,GAAtB,SACG6C,EAAoB3G,KAAI,SAAClL,GAAD,OACvB,eAAC,GAAD,CAAyBA,KAAMA,EAAMT,UAAWA,EAAWJ,QAASA,EAASlH,SAAS,GAAvE+H,EAAK7B,UAGxB,eAAC,KAAD,CAAOmV,OAAK,EAACtE,KAAI,UAAKA,EAAL,YAAjB,SACG6C,EAAoB3G,KAAI,SAAClL,GAAD,OACvB,eAAC,GAAD,CAAyBA,KAAMA,EAAMT,UAAWA,EAAWJ,QAASA,EAASlH,SAAO,GAArE+H,EAAK7B,UAGxB,eAAC,KAAD,CAAOmV,OAAK,EAACtE,KAAI,UAAKA,EAAL,aAAjB,SACG6C,EAAoB3G,KAAI,SAAClL,GAAD,OACvB,eAAC,GAAD,CAAyBA,KAAMA,EAAMT,UAAWA,EAAWJ,QAASA,EAASlH,SAAO,GAArE+H,EAAK7B,eAuEzBoV,GACD,sBAAKtM,IAAKuK,IACV,eAAC1C,GAAD,CAAaxV,IAAI,oBAAoBC,IAAI,uBAAuB5C,MAAO,IAAK6C,OAAQ,c,oECha7EqG,IANiC,SAAC7J,GAC/C,OACE,cAAC,IAAD,aAAWa,SAAS,OAAO2c,WAAW,MAAM9c,MAAM,aAAa+c,OAAO,KAAK3c,MAAM,EAAOsR,SAAU,GAAOpS,M,iCCL7G,kCA+Ce0d,IAjC6B,SAAC,GAQtC,IAPL9Y,EAOI,EAPJA,MACAwN,EAMI,EANJA,SAMI,IALJvR,gBAKI,MALO,OAKP,MAJJ2c,kBAII,MAJS,IAIT,MAHJC,cAGI,MAHK,GAGL,MAFJ3c,YAEI,aADJJ,aACI,MADI,OACJ,EACJ,EAA4BqR,qBAAW,CACrCC,MAAO,EACPC,IAAKrN,EACLsN,SAAU,EACVC,UAAW,IACXC,cAEe9M,IAAb8M,EAAyBA,EAAWxN,EAAQ,EAAI,EAAIA,EAAQ,IAAM,EAAI,IAPlEyN,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,OAUXC,EAAcC,iBAAOF,GAM3B,OAJAhE,qBAAU,WACRiE,EAAYE,QAAQ7N,KACnB,CAACA,EAAO2N,IAGT,eAAC,KAAD,CAAMzR,KAAMA,EAAMD,SAAUA,EAAUkE,MAAO,CAAEyY,cAAc9c,MAAOA,EAApE,UACG+c,EACApL,O,oHCZDsL,EAAexe,IAAOM,IAAV,+DACN,SAACO,GAAD,OAAWA,EAAM4c,QAClB,SAAC5c,GAAD,OAAWA,EAAM4c,QAGbgB,EA5BuB,SAAC,GAAqB,IAGtDC,EAHqD,IAAlBjB,YAAkB,MAAX,KAAW,EACjDkB,EAAYC,qBAAWC,KAAvBF,QAGR,OAAQlB,GACN,IAAK,KACHiB,EAAIC,EAAQ,GACZ,MACF,IAAK,KACHD,EAAIC,EAAQ,GACZ,MACF,IAAK,KACL,QACED,EAAIC,EAAQ,GAGhB,OAAO,cAACH,EAAD,CAAcf,KAAMiB,KCJvBI,EAAqB9e,IAAOM,IAAV,qIAEF,SAACO,GAAD,OAAWA,EAAMX,MAAMsE,OAAOua,eAGvC,SAACle,GAAD,OAAWA,EAAMX,MAAMye,QAAQ,MAGtCK,EAAoBhf,IAAOM,IAAV,wCAIR8H,EA1BgB,SAAC,GAAkB,IAAhBxH,EAAe,EAAfA,SAC1Bqe,EAAI3I,IAAM4I,SAASC,QAAQve,GAAUgd,OAC3C,OACE,cAACkB,EAAD,UACGxI,IAAM4I,SAASnJ,IAAInV,GAAU,SAACwe,EAAOC,GAAR,OAC5B,qCACE,cAACL,EAAD,UAAoBI,IACnBC,EAAIJ,EAAI,GAAK,cAAC,EAAD,c,oFCFlBlf,EAAUC,IAAOM,IAAV,sJAOD,qBAAGJ,MAAkBsE,OAAOkM,WAIlC7B,EAAkE,SAAC,GAA2B,IAAzB1N,EAAwB,EAAxBA,QAASD,EAAe,EAAfA,SAC5EgC,EAAkBC,cAExB,OACE,eAACpD,EAAD,CAASuf,aAAW,kCAAkCC,KAAK,SAASpe,QAAS,kBAAMA,KAAnF,UACE,cAAC,KAAD,CAAMI,MAAM,UAAUI,MAAI,EAA1B,SACGT,EAAWgC,EAAgB,KAAM,QAAUA,EAAgB,IAAK,aAElEhC,EAAW,cAAC,IAAD,IAAoB,cAAC,IAAD,QAKtC2N,EAAwB2Q,aAAe,CACrCte,UAAU,GAGG2N,O,sGClCT4Q,EAAiBzf,IAAOM,IAAV,8RAOJ,qBAAGJ,MAAkByE,QAAQE,SACvB,qBAAG3E,MAAkBsE,OAAOkb,kBAElC,qBAAGxf,MAAkBsE,OAAOC,SAItCkb,EAAwB3f,IAAOM,IAAV,wSAKX,qBAAGJ,MAAkBsE,OAAOC,SAC/B,qBAAGvE,MAAkB0f,SAASC,YAMvC,qBAAG3f,MAAkBC,aAAaC,MAKhC0f,EAAoB9f,IAAOM,IAAV,sUAEZ,qBAAGkB,SAEE,qBAAGtB,MAAkBsE,OAAOC,SAKxC,qBAAGvE,MAAkBC,aAAaC,MAIlC,SAACS,GAAD,OACAA,EAAMkf,QACNpM,YADA,+XAEI8L,GAC2B,qBAAGvf,MAAkBsE,OAAOkb,kBACzC,qBAAGxf,MAAkB0R,QAAQoO,YAI3CL,GAIoB,qBAAGzf,MAAkBsE,OAAOkb,kBAGlC,qBAAGxf,MAAkB0R,QAAQoO,gBAY7CC,EAAejgB,IAAOkgB,GAAV,qGAIL,qBAAGhgB,MAAkB0f,SAASC,YAGrCM,EAAWngB,IAAOogB,GAAV,+GAII,qBAAGlgB,MAAkBsE,OAAOkb,kBA8D/B7B,IAhDsC,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAASvY,EAAe,EAAfA,SACzD8a,EAAehN,iBAAO,MACtBiN,EAAcjN,iBAAO,MAC3B,EAA4BpM,oBAAS,GAArC,mBAAO8Y,EAAP,KAAeQ,EAAf,KACA,EAA4CtZ,mBAAS6W,EAAQ,IAA7D,mBAAO0C,EAAP,KAAuBC,EAAvB,KACA,EAA0CxZ,mBAAS,CAAEzF,MAAO,EAAG6C,OAAQ,IAAvE,mBAAOqc,EAAP,KAAsBC,EAAtB,KAEMC,EAAW,kBAAML,GAAWR,IAE5Bc,EAAkB,SAAC9C,GAAD,OAAyB,WAC/C0C,EAAkB1C,GAClBwC,GAAU,GAENhb,GACFA,EAASwY,KAWb,OAPA5O,qBAAU,WACRwR,EAAiB,CACfnf,MAAO8e,EAAYhN,QAAQwN,YAC3Bzc,OAAQic,EAAYhN,QAAQyN,iBAE7B,IAGD,eAACjB,EAAD,yBAAmBC,OAAQA,EAAQjO,IAAKuO,GAAkBK,GAA1D,cAC2B,IAAxBA,EAAclf,OACb,cAACie,EAAD,CAAgBte,QAASyf,EAAzB,SACE,cAAC,KAAD,UAAOJ,EAAevQ,UAG1B,cAAC,IAAD,CAAmB1O,MAAM,OAAOJ,QAASyf,IACzC,cAACjB,EAAD,UACE,cAACM,EAAD,CAAcnO,IAAKwO,EAAnB,SACGxC,EAAQ/H,KAAI,SAACgI,GAAD,OACXA,EAAO9N,QAAUuQ,EAAevQ,MAC9B,cAACkQ,EAAD,CAAUhf,QAAS0f,EAAgB9C,GAAnC,SACE,cAAC,KAAD,UAAOA,EAAO9N,SADiC8N,EAAO9N,OAGtD","file":"static/js/10.149c02ce.chunk.js","sourcesContent":["export type TableProps = {\n  data?: TableDataTypes[]\n  selectedFilters?: string\n  sortBy?: string\n  sortDir?: string\n  onSort?: (value: string) => void\n}\n\nexport type ColumnsDefTypes = {\n  id: number\n  label: string\n  name: string\n  translationId: number\n  sortable: boolean\n}\n\nexport type ScrollBarProps = {\n  ref: string\n  width: number\n}\n\nexport type TableDataTypes = {\n  POOL: string\n  APR: string\n  EARNED: string\n  STAKED: string\n  DETAILS: string\n  LINKS: string\n}\n\nexport const MobileColumnSchema: ColumnsDefTypes[] = [\n  {\n    id: 1,\n    name: 'farm',\n    translationId: 999,\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 2,\n    name: 'earned',\n    translationId: 1072,\n    sortable: true,\n    label: 'Earned',\n  },\n  {\n    id: 3,\n    name: 'apr',\n    translationId: 736,\n    sortable: true,\n    label: 'APR',\n  },\n  {\n    id: 6,\n    name: 'details',\n    translationId: 999,\n    sortable: true,\n    label: '',\n  },\n]\n\nexport const DesktopColumnSchema: ColumnsDefTypes[] = [\n  {\n    id: 1,\n    name: 'farm',\n    translationId: 999,\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 2,\n    name: 'earned',\n    translationId: 1072,\n    sortable: true,\n    label: 'Earned',\n  },\n  {\n    id: 3,\n    name: 'apr',\n    translationId: 736,\n    sortable: true,\n    label: 'APR',\n  },\n  {\n    id: 4,\n    name: 'liquidity',\n    translationId: 999,\n    sortable: true,\n    label: 'Liquidity',\n  },\n  {\n    id: 5,\n    name: 'multiplier',\n    translationId: 999,\n    sortable: true,\n    label: 'Multiplier',\n  },\n  {\n    id: 6,\n    name: 'details',\n    translationId: 999,\n    sortable: true,\n    label: '',\n  },\n]\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n","import React from 'react'\nimport { Box, ExpandableLabel, Flex } from '@pancakeswap-libs/uikit'\nimport styled from 'styled-components'\nimport usePersistState from 'hooks/usePersistState'\n\ninterface Props {\n  id: string\n  title: React.ReactNode\n  defaultVisible?: boolean\n}\n\nconst Wrapper = styled(Box)<{ isVisible: boolean }>`\n  background: #452a7a;\n  box-shadow: inset 0px -4px 4px rgba(0, 0, 0, 0.25);\n  padding: 32px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n  }\n`\n\nconst Content = styled.div<{ isVisible: boolean }>`\n  display: ${({ isVisible }) => (isVisible ? 'block' : 'none')};\n`\n\nconst Banner: React.FC<Props> = ({ id, title, defaultVisible = true, children, ...props }) => {\n  const [isVisible, setIsVisible] = usePersistState(defaultVisible, `banner-${id}`)\n  return (\n    <Wrapper isVisible={isVisible} {...props}>\n      <Flex justifyContent=\"space-between\" flexDirection={['column', 'row']}>\n        {title}\n        <ExpandableLabel expanded={isVisible} onClick={() => setIsVisible((prev) => !prev)}>\n          {isVisible ? 'Hide' : 'Details'}\n        </ExpandableLabel>\n      </Flex>\n      <Content isVisible={isVisible}>{children}</Content>\n    </Wrapper>\n  )\n}\n\nexport default Banner\n","import React from 'react'\nimport { Text, Flex, Box, ErrorIcon, Button } from '@pancakeswap-libs/uikit'\nimport Banner from './Banner'\n\nconst MigrationV2 = () => {\n  return (\n    <Banner\n      id=\"v2-migration\"\n      title={\n        <Flex alignItems=\"center\">\n          <ErrorIcon color=\"white\" width=\"32px\" mr=\"16px\" />\n          <Text color=\"white\" fontSize=\"24px\" bold>\n            ACTION REQUIRED for all LP token holders\n          </Text>\n        </Flex>\n      }\n      defaultVisible={false}\n    >\n      <Box ml=\"48px\">\n        <Text color=\"warning\" bold>\n          You must complete migration if you want to keep earning from any PancakeSwap LP tokens and PancakeSwap farms.\n        </Text>\n        <Text color=\"white\" mb=\"16px\">\n          All LPs will be migrated to a new, upgraded contract, over several hours starting from now.\n        </Text>\n        <Button as=\"a\" href=\"https://v1exchange.pancakeswap.finance/#/migrate\">\n          Migrate Now\n        </Button>\n      </Box>\n    </Banner>\n  )\n}\n\nexport default MigrationV2\n","// Constructing the two forward-slash-separated parts of the 'Add Liquidity' URL\n// Each part of the url represents a different side of the LP pair.\nimport { getWbnbAddress } from './addressHelpers'\n\nconst getLiquidityUrlPathParts = ({ quoteTokenAddress, tokenAddress }) => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  const wBNBAddressString = getWbnbAddress()\n  const quoteTokenAddressString: string = quoteTokenAddress ? quoteTokenAddress[chainId] : null\n  const tokenAddressString: string = tokenAddress ? tokenAddress[chainId] : null\n  const firstPart =\n    !quoteTokenAddressString || quoteTokenAddressString === wBNBAddressString ? 'BNB' : quoteTokenAddressString\n  const secondPart = !tokenAddressString || tokenAddressString === wBNBAddressString ? 'BNB' : tokenAddressString\n  return `${firstPart}/${secondPart}`\n}\n\nexport default getLiquidityUrlPathParts\n","import React from 'react'\nimport useI18n from 'hooks/useI18n'\nimport styled from 'styled-components'\nimport { Text, Flex, LinkExternal } from '@pancakeswap-libs/uikit'\n\nexport interface ExpandableSectionProps {\n  bscScanAddress?: string\n  infoAddress?: string\n  removed?: boolean\n  totalValueFormatted?: string\n  lpLabel?: string\n  addLiquidityUrl?: string\n}\n\nconst Wrapper = styled.div`\n  margin-top: 24px;\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  font-weight: 400;\n`\n\nconst DetailsSection: React.FC<ExpandableSectionProps> = ({\n  bscScanAddress,\n  infoAddress,\n  removed,\n  totalValueFormatted,\n  lpLabel,\n  addLiquidityUrl,\n}) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <Flex justifyContent=\"space-between\">\n        <Text>{TranslateString(354, 'Total Liquidity')}:</Text>\n        <Text>{totalValueFormatted}</Text>\n      </Flex>\n      {!removed && (\n        <StyledLinkExternal href={addLiquidityUrl}>\n          {TranslateString(999, `Get ${lpLabel}`, { name: lpLabel })}\n        </StyledLinkExternal>\n      )}\n      <StyledLinkExternal href={bscScanAddress}>{TranslateString(999, 'View Contract')}</StyledLinkExternal>\n      <StyledLinkExternal href={infoAddress}>{TranslateString(999, 'See Pair Info')}</StyledLinkExternal>\n    </Wrapper>\n  )\n}\n\nexport default DetailsSection\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon } from '@pancakeswap-libs/uikit'\n\nconst CoreTag = (props) => (\n  <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon color=\"secondary\" />} {...props}>\n    Core\n  </Tag>\n)\n\nconst CommunityTag = (props) => (\n  <Tag variant=\"textSubtle\" outline startIcon={<CommunityIcon color=\"secondary\" />} {...props}>\n    Community\n  </Tag>\n)\n\nconst BinanceTag = (props) => (\n  <Tag variant=\"binance\" outline startIcon={<BinanceIcon color=\"secondary\" />} {...props}>\n    Binance\n  </Tag>\n)\n\nconst DualTag = (props) => (\n  <Tag variant=\"textSubtle\" outline {...props}>\n    Dual\n  </Tag>\n)\n\nexport { CoreTag, CommunityTag, BinanceTag, DualTag }\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Tag, Flex, Heading, Image } from '@pancakeswap-libs/uikit'\nimport { CommunityTag, CoreTag } from 'components/Tags'\n\nexport interface ExpandableSectionProps {\n  lpLabel?: string\n  multiplier?: string\n  isCommunityFarm?: boolean\n  farmImage?: string\n  tokenSymbol?: string\n}\n\nconst Wrapper = styled(Flex)`\n  svg {\n    margin-right: 4px;\n  }\n`\n\nconst MultiplierTag = styled(Tag)`\n  margin-left: 4px;\n`\n\nconst CardHeading: React.FC<ExpandableSectionProps> = ({\n  lpLabel,\n  multiplier,\n  isCommunityFarm,\n  farmImage,\n  tokenSymbol,\n}) => {\n  return (\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\n      <Image src={`/images/farms/${farmImage}.svg`} alt={tokenSymbol} width={64} height={64} />\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n        <Heading mb=\"4px\">{lpLabel.split(' ')[0]}</Heading>\n        <Flex justifyContent=\"center\">\n          {isCommunityFarm ? <CommunityTag /> : <CoreTag />}\n          <MultiplierTag variant=\"secondary\">{multiplier}</MultiplierTag>\n        </Flex>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default CardHeading\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, Input, InputProps, Flex, Link } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface ModalInputProps {\n  max: string\n  symbol: string\n  onSelectMax?: () => void\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  value: string\n  addLiquidityUrl?: string\n  inputTitle?: string\n}\n\nconst getBoxShadow = ({ isWarning = false, theme }) => {\n  if (isWarning) {\n    return theme.shadows.warning\n  }\n\n  return theme.shadows.inset\n}\n\nconst StyledTokenInput = styled.div<InputProps>`\n  display: flex;\n  flex-direction: column;\n  background-color: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  box-shadow: ${getBoxShadow};\n  color: ${({ theme }) => theme.colors.text};\n  padding: 8px 16px 8px 0;\n  width: 100%;\n`\n\nconst StyledInput = styled(Input)`\n  box-shadow: none;\n  width: 60px;\n  margin: 0 8px;\n  padding: 0 8px;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    width: 80px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n  }\n`\n\nconst StyledErrorMessage = styled(Text)`\n  position: absolute;\n  bottom: -22px;\n  a {\n    display: inline;\n  }\n`\n\nconst ModalInput: React.FC<ModalInputProps> = ({\n  max,\n  symbol,\n  onChange,\n  onSelectMax,\n  value,\n  addLiquidityUrl,\n  inputTitle,\n}) => {\n  const TranslateString = useI18n()\n  const isBalanceZero = max === '0' || !max\n\n  const displayBalance = (balance: string) => {\n    if (isBalanceZero) {\n      return '0'\n    }\n    const balanceNumber = Number(balance)\n    if (balanceNumber > 0 && balanceNumber < 0.0001) {\n      return balanceNumber.toLocaleString(undefined, { maximumFractionDigits: 20 })\n    }\n    return balanceNumber.toLocaleString()\n  }\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <StyledTokenInput isWarning={isBalanceZero}>\n        <Flex justifyContent=\"space-between\" pl=\"16px\">\n          <Text fontSize=\"14px\">{inputTitle}</Text>\n          <Text fontSize=\"14px\">\n            {TranslateString(1120, 'Balance')}: {displayBalance(max)}\n          </Text>\n        </Flex>\n        <Flex alignItems=\"flex-end\" justifyContent=\"space-around\">\n          <StyledInput\n            pattern=\"^[0-9]*[.,]?[0-9]*$\"\n            inputMode=\"decimal\"\n            step=\"any\"\n            min=\"0\"\n            onChange={onChange}\n            placeholder=\"0\"\n            value={value}\n          />\n          <Button scale=\"sm\" onClick={onSelectMax} mr=\"8px\">\n            {TranslateString(452, 'Max')}\n          </Button>\n          <Text fontSize=\"16px\">{symbol}</Text>\n        </Flex>\n      </StyledTokenInput>\n      {isBalanceZero && (\n        <StyledErrorMessage fontSize=\"14px\" color=\"failure\">\n          No tokens to stake:{' '}\n          <Link fontSize=\"14px\" bold={false} href={addLiquidityUrl} external color=\"failure\">\n            {TranslateString(999, 'get')} {symbol}\n          </Link>\n        </StyledErrorMessage>\n      )}\n    </div>\n  )\n}\n\nexport default ModalInput\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal, LinkExternal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport ModalInput from 'components/ModalInput'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n  addLiquidityUrl?: string\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '', addLiquidityUrl }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const valNumber = new BigNumber(val)\n  const fullBalanceNumber = new BigNumber(fullBalance)\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      if (e.currentTarget.validity.valid) {\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\n      }\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={TranslateString(1068, 'Stake LP tokens')} onDismiss={onDismiss}>\n      <ModalInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n        addLiquidityUrl={addLiquidityUrl}\n        inputTitle={TranslateString(1070, 'Stake')}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          width=\"100%\"\n          disabled={pendingTx || !valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber)}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n      <LinkExternal href={addLiquidityUrl} style={{ alignSelf: 'center' }}>\n        {TranslateString(999, 'Get')} {tokenName}\n      </LinkExternal>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport ModalInput from 'components/ModalInput'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const valNumber = new BigNumber(val)\n  const fullBalanceNumber = new BigNumber(fullBalance)\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      if (e.currentTarget.validity.valid) {\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\n      }\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={TranslateString(1126, 'Unstake LP tokens')} onDismiss={onDismiss}>\n      <ModalInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n        inputTitle={TranslateString(588, 'Unstake')}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx || !valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber)}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n          width=\"100%\"\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal } from '@pancakeswap-libs/uikit'\nimport { useLocation } from 'react-router-dom'\nimport useI18n from 'hooks/useI18n'\nimport useStake from 'hooks/useStake'\nimport useUnstake from 'hooks/useUnstake'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport DepositModal from '../DepositModal'\nimport WithdrawModal from '../WithdrawModal'\n\ninterface FarmCardActionsProps {\n  stakedBalance?: BigNumber\n  tokenBalance?: BigNumber\n  tokenName?: string\n  pid?: number\n  addLiquidityUrl?: string\n}\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n  svg {\n    width: 20px;\n  }\n`\n\nconst StakeAction: React.FC<FarmCardActionsProps> = ({\n  stakedBalance,\n  tokenBalance,\n  tokenName,\n  pid,\n  addLiquidityUrl,\n}) => {\n  const TranslateString = useI18n()\n  const { onStake } = useStake(pid)\n  const { onUnstake } = useUnstake(pid)\n  const location = useLocation()\n\n  const displayBalance = useCallback(() => {\n    const stakedBalanceNumber = getBalanceNumber(stakedBalance)\n    if (stakedBalanceNumber > 0 && stakedBalanceNumber < 0.0001) {\n      return getFullDisplayBalance(stakedBalance).toLocaleString()\n    }\n    return stakedBalanceNumber.toLocaleString()\n  }, [stakedBalance])\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal max={tokenBalance} onConfirm={onStake} tokenName={tokenName} addLiquidityUrl={addLiquidityUrl} />,\n  )\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={tokenName} />,\n  )\n\n  const renderStakingButtons = () => {\n    return stakedBalance.eq(0) ? (\n      <Button onClick={onPresentDeposit} disabled={location.pathname.includes('archived')}>\n        {TranslateString(999, 'Stake LP')}\n      </Button>\n    ) : (\n      <IconButtonWrapper>\n        <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"14px\" />\n        </IconButton>\n        <IconButton variant=\"tertiary\" onClick={onPresentDeposit}>\n          <AddIcon color=\"primary\" width=\"14px\" />\n        </IconButton>\n      </IconButtonWrapper>\n    )\n  }\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Heading color={stakedBalance.eq(0) ? 'textDisabled' : 'text'}>{displayBalance()}</Heading>\n      {renderStakingButtons()}\n    </Flex>\n  )\n}\n\nexport default StakeAction\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useHarvest } from 'hooks/useHarvest'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useWeb3React } from '@web3-react/core'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport CardBusdValue from '../../../Home/components/CardBusdValue'\n\ninterface FarmCardActionsProps {\n  earnings?: BigNumber\n  pid?: number\n}\n\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid }) => {\n  const { account } = useWeb3React()\n  const TranslateString = useI18n()\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvest(pid)\n  const cakePrice = usePriceCakeBusd()\n\n  const rawEarningsBalance = account ? getBalanceNumber(earnings) : 0\n  const displayBalance = rawEarningsBalance.toLocaleString()\n  const earningsBusd = rawEarningsBalance ? new BigNumber(rawEarningsBalance).multipliedBy(cakePrice).toNumber() : 0\n\n  return (\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\">\n      <Heading color={rawEarningsBalance === 0 ? 'textDisabled' : 'text'}>\n        {displayBalance}\n        {earningsBusd > 0 && <CardBusdValue value={earningsBusd} />}\n      </Heading>\n      <Button\n        disabled={rawEarningsBalance === 0 || pendingTx}\n        onClick={async () => {\n          setPendingTx(true)\n          await onReward()\n          setPendingTx(false)\n        }}\n      >\n        {TranslateString(562, 'Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestAction\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { provider as ProviderType } from 'web3-core'\nimport BigNumber from 'bignumber.js'\nimport { useLocation } from 'react-router-dom'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getBep20Contract } from 'utils/contractHelpers'\nimport { Button, Flex, Text } from '@pancakeswap-libs/uikit'\nimport { Farm } from 'state/types'\nimport useI18n from 'hooks/useI18n'\nimport useWeb3 from 'hooks/useWeb3'\nimport { useApprove } from 'hooks/useApprove'\nimport UnlockButton from 'components/UnlockButton'\nimport StakeAction from './StakeAction'\nimport HarvestAction from './HarvestAction'\n\nconst Action = styled.div`\n  padding-top: 16px;\n`\nexport interface FarmWithStakedValue extends Farm {\n  apr?: number\n}\n\ninterface FarmCardActionsProps {\n  farm: FarmWithStakedValue\n  provider?: ProviderType\n  account?: string\n  addLiquidityUrl?: string\n}\n\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, account, addLiquidityUrl }) => {\n  const TranslateString = useI18n()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { pid, lpAddresses } = farm\n  const {\n    allowance: allowanceAsString = 0,\n    tokenBalance: tokenBalanceAsString = 0,\n    stakedBalance: stakedBalanceAsString = 0,\n    earnings: earningsAsString = 0,\n  } = farm.userData || {}\n  const allowance = new BigNumber(allowanceAsString)\n  const tokenBalance = new BigNumber(tokenBalanceAsString)\n  const stakedBalance = new BigNumber(stakedBalanceAsString)\n  const earnings = new BigNumber(earningsAsString)\n  const lpAddress = getAddress(lpAddresses)\n  const lpName = farm.lpSymbol.toUpperCase()\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n  const web3 = useWeb3()\n  const location = useLocation()\n\n  const lpContract = getBep20Contract(lpAddress, web3)\n\n  const { onApprove } = useApprove(lpContract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove])\n\n  const renderApprovalOrStakeButton = () => {\n    return isApproved ? (\n      <StakeAction\n        stakedBalance={stakedBalance}\n        tokenBalance={tokenBalance}\n        tokenName={lpName}\n        pid={pid}\n        addLiquidityUrl={addLiquidityUrl}\n      />\n    ) : (\n      <Button\n        mt=\"8px\"\n        width=\"100%\"\n        disabled={requestedApproval || location.pathname.includes('archived')}\n        onClick={handleApprove}\n      >\n        {TranslateString(758, 'Approve Contract')}\n      </Button>\n    )\n  }\n\n  return (\n    <Action>\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\n          {/* TODO: Is there a way to get a dynamic value here from useFarmFromSymbol? */}\n          CAKE\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {TranslateString(1072, 'Earned')}\n        </Text>\n      </Flex>\n      <HarvestAction earnings={earnings} pid={pid} />\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\n          {lpName}\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {TranslateString(1074, 'Staked')}\n        </Text>\n      </Flex>\n      {!account ? <UnlockButton mt=\"8px\" width=\"100%\" /> : renderApprovalOrStakeButton()}\n    </Action>\n  )\n}\n\nexport default CardActions\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport { IconButton, useModal, CalculateIcon } from '@pancakeswap-libs/uikit'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport useI18n from 'hooks/useI18n'\n\nexport interface ApyButtonProps {\n  lpLabel?: string\n  cakePrice?: BigNumber\n  apr?: number\n  addLiquidityUrl?: string\n}\n\nconst ApyButton: React.FC<ApyButtonProps> = ({ lpLabel, cakePrice, apr, addLiquidityUrl }) => {\n  const TranslateString = useI18n()\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      linkLabel={`${TranslateString(999, 'Get')} ${lpLabel}`}\n      tokenPrice={cakePrice.toNumber()}\n      apr={apr}\n      linkHref={addLiquidityUrl}\n    />,\n  )\n\n  const handleClickButton = (event): void => {\n    event.stopPropagation()\n    onPresentApyModal()\n  }\n\n  return (\n    <IconButton onClick={handleClickButton} variant=\"text\" scale=\"sm\" ml=\"4px\">\n      <CalculateIcon width=\"18px\" />\n    </IconButton>\n  )\n}\n\nexport default ApyButton\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled, { keyframes } from 'styled-components'\nimport { Flex, Text, Skeleton } from '@pancakeswap-libs/uikit'\nimport { Farm } from 'state/types'\nimport { provider as ProviderType } from 'web3-core'\nimport useI18n from 'hooks/useI18n'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport DetailsSection from './DetailsSection'\nimport CardHeading from './CardHeading'\nimport CardActionsContainer from './CardActionsContainer'\nimport ApyButton from './ApyButton'\n\nexport interface FarmWithStakedValue extends Farm {\n  apr?: number\n  liquidity?: BigNumber\n}\n\nconst RainbowLight = keyframes`\n\t0% {\n\t\tbackground-position: 0% 50%;\n\t}\n\t50% {\n\t\tbackground-position: 100% 50%;\n\t}\n\t100% {\n\t\tbackground-position: 0% 50%;\n\t}\n`\n\nconst StyledCardAccent = styled.div`\n  background: linear-gradient(\n    45deg,\n    rgba(255, 0, 0, 1) 0%,\n    rgba(255, 154, 0, 1) 10%,\n    rgba(208, 222, 33, 1) 20%,\n    rgba(79, 220, 74, 1) 30%,\n    rgba(63, 218, 216, 1) 40%,\n    rgba(47, 201, 226, 1) 50%,\n    rgba(28, 127, 238, 1) 60%,\n    rgba(95, 21, 242, 1) 70%,\n    rgba(186, 12, 248, 1) 80%,\n    rgba(251, 7, 217, 1) 90%,\n    rgba(255, 0, 0, 1) 100%\n  );\n  background-size: 300% 300%;\n  animation: ${RainbowLight} 2s linear infinite;\n  border-radius: 32px;\n  filter: blur(6px);\n  position: absolute;\n  top: -2px;\n  right: -2px;\n  bottom: -2px;\n  left: -2px;\n  z-index: -1;\n`\n\nconst FCard = styled.div`\n  align-self: baseline;\n  background: ${(props) => props.theme.card.background};\n  border-radius: 32px;\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n  position: relative;\n  text-align: center;\n`\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.borderColor};\n  height: 1px;\n  margin: 28px auto;\n  width: 100%;\n`\n\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\n  overflow: hidden;\n`\n\ninterface FarmCardProps {\n  farm: FarmWithStakedValue\n  removed: boolean\n  cakePrice?: BigNumber\n  provider?: ProviderType\n  account?: string\n}\n\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, removed, cakePrice, account }) => {\n  const TranslateString = useI18n()\n\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\n\n  // We assume the token name is coin pair + lp e.g. CAKE-BNB LP, LINK-BNB LP,\n  // NAR-CAKE LP. The images should be cake-bnb.svg, link-bnb.svg, nar-cake.svg\n  const farmImage = farm.lpSymbol.split(' ')[0].toLocaleLowerCase()\n\n  const totalValueFormatted = farm.liquidity\n    ? `$${farm.liquidity.toNumber().toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n    : '-'\n\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\n  const earnLabel = farm.dual ? farm.dual.earnLabel : 'CAKE'\n\n  const farmAPR = farm.apr && farm.apr.toLocaleString('en-US', { maximumFractionDigits: 2 })\n\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: farm.quoteToken.address,\n    tokenAddress: farm.token.address,\n  })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n  const lpAddress = farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]\n\n  return (\n    <FCard>\n      {farm.token.symbol === 'CAKE' && <StyledCardAccent />}\n      <CardHeading\n        lpLabel={lpLabel}\n        multiplier={farm.multiplier}\n        isCommunityFarm={farm.isCommunity}\n        farmImage={farmImage}\n        tokenSymbol={farm.token.symbol}\n      />\n      {!removed && (\n        <Flex justifyContent=\"space-between\" alignItems=\"center\">\n          <Text>{TranslateString(736, 'APR')}:</Text>\n          <Text bold style={{ display: 'flex', alignItems: 'center' }}>\n            {farm.apr ? (\n              <>\n                <ApyButton lpLabel={lpLabel} addLiquidityUrl={addLiquidityUrl} cakePrice={cakePrice} apr={farm.apr} />\n                {farmAPR}%\n              </>\n            ) : (\n              <Skeleton height={24} width={80} />\n            )}\n          </Text>\n        </Flex>\n      )}\n      <Flex justifyContent=\"space-between\">\n        <Text>{TranslateString(318, 'Earn')}:</Text>\n        <Text bold>{earnLabel}</Text>\n      </Flex>\n      <CardActionsContainer farm={farm} account={account} addLiquidityUrl={addLiquidityUrl} />\n      <Divider />\n      <ExpandableSectionButton\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\n        expanded={showExpandableSection}\n      />\n      <ExpandingWrapper expanded={showExpandableSection}>\n        <DetailsSection\n          removed={removed}\n          bscScanAddress={`https://bscscan.com/address/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`}\n          infoAddress={`https://pancakeswap.info/pair/${lpAddress}`}\n          totalValueFormatted={totalValueFormatted}\n          lpLabel={lpLabel}\n          addLiquidityUrl={addLiquidityUrl}\n        />\n      </ExpandingWrapper>\n    </FCard>\n  )\n}\n\nexport default FarmCard\n","import { useState, useEffect } from 'react'\n\n/**\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\n * This hook \"shows\" element immediately when the isMounted is true\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\n * delayTime should be the same as animation time in most cases.\n */\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\n  const [shouldRender, setShouldRender] = useState(false)\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>\n    if (isMounted && !shouldRender) {\n      setShouldRender(true)\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\n    }\n    return () => clearTimeout(timeoutId)\n  }, [isMounted, delayTime, shouldRender])\n  return shouldRender\n}\n\nexport default useDelayedUnmount\n","import React from 'react'\nimport styled from 'styled-components'\nimport ApyButton from 'views/Farms/components/FarmCard/ApyButton'\nimport { Address } from 'config/constants/types'\nimport BigNumber from 'bignumber.js'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { Skeleton } from '@pancakeswap-libs/uikit'\n\nexport interface AprProps {\n  value: string\n  multiplier: string\n  lpLabel: string\n  tokenAddress?: Address\n  quoteTokenAddress?: Address\n  cakePrice: BigNumber\n  originalValue: number\n  hideButton?: boolean\n}\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n\n  button {\n    width: 20px;\n    height: 20px;\n\n    svg {\n      path {\n        fill: ${({ theme }) => theme.colors.textSubtle};\n      }\n    }\n  }\n`\n\nconst AprWrapper = styled.div`\n  min-width: 60px;\n  text-align: left;\n`\n\nconst Apr: React.FC<AprProps> = ({\n  value,\n  lpLabel,\n  tokenAddress,\n  quoteTokenAddress,\n  cakePrice,\n  originalValue,\n  hideButton = false,\n}) => {\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAddress, tokenAddress })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n\n  return originalValue !== 0 ? (\n    <Container>\n      {originalValue ? (\n        <>\n          <AprWrapper>{value}%</AprWrapper>\n          {!hideButton && (\n            <ApyButton lpLabel={lpLabel} cakePrice={cakePrice} apr={originalValue} addLiquidityUrl={addLiquidityUrl} />\n          )}\n        </>\n      ) : (\n        <AprWrapper>\n          <Skeleton width={60} />\n        </AprWrapper>\n      )}\n    </Container>\n  ) : (\n    <Container>\n      <AprWrapper>{originalValue}%</AprWrapper>\n    </Container>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useFarmUser } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport { Text, Image } from '@pancakeswap-libs/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\n\nexport interface FarmProps {\n  label: string\n  pid: number\n  image: string\n}\n\nconst IconImage = styled(Image)`\n  width: 24px;\n  height: 24px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 40px;\n    height: 40px;\n  }\n`\n\nconst Container = styled.div`\n  padding-left: 16px;\n  display: flex;\n  align-items: center;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 32px;\n  }\n`\n\nconst Farm: React.FunctionComponent<FarmProps> = ({ image, label, pid }) => {\n  const { stakedBalance } = useFarmUser(pid)\n  const TranslateString = useI18n()\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\n\n  const handleRenderFarming = (): JSX.Element => {\n    if (rawStakedBalance) {\n      return (\n        <Text color=\"secondary\" fontSize=\"12px\" bold>\n          {TranslateString(999, 'FARMING')}\n        </Text>\n      )\n    }\n\n    return null\n  }\n\n  return (\n    <Container>\n      <IconImage src={`/images/farms/${image}.svg`} alt=\"icon\" width={40} height={40} mr=\"8px\" />\n      <div>\n        {handleRenderFarming()}\n        <Text bold>{label}</Text>\n      </div>\n    </Container>\n  )\n}\n\nexport default Farm\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton } from '@pancakeswap-libs/uikit'\n\nexport interface EarnedProps {\n  earnings: number\n  pid: number\n}\n\ninterface EarnedPropsWithLoading extends EarnedProps {\n  userDataReady: boolean\n}\n\nconst Amount = styled.span<{ earned: number }>`\n  color: ${({ earned, theme }) => (earned ? theme.colors.text : theme.colors.textDisabled)};\n  display: flex;\n  align-items: center;\n`\n\nconst Earned: React.FunctionComponent<EarnedPropsWithLoading> = ({ earnings, userDataReady }) => {\n  if (userDataReady) {\n    return <Amount earned={earnings}>{earnings.toLocaleString()}</Amount>\n  }\n  return (\n    <Amount earned={0}>\n      <Skeleton width={60} />\n    </Amount>\n  )\n}\n\nexport default Earned\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, useMatchBreakpoints } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface DetailsProps {\n  actionPanelToggled: boolean\n}\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  padding-right: 8px;\n  color: ${({ theme }) => theme.colors.primary};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-right: 0px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 20px;\n`\n\nconst Details: React.FC<DetailsProps> = ({ actionPanelToggled }) => {\n  const TranslateString = useI18n()\n  const { isXl } = useMatchBreakpoints()\n  const isMobile = !isXl\n\n  return (\n    <Container>\n      {!isMobile && TranslateString(658, 'Details')}\n      <ArrowIcon color=\"primary\" toggled={actionPanelToggled} />\n    </Container>\n  )\n}\n\nexport default Details\n","import React from 'react'\nimport styled from 'styled-components'\nimport { HelpIcon, Skeleton, useTooltip } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`\n\nexport interface MultiplierProps {\n  multiplier: string\n}\n\nconst MultiplierWrapper = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  width: 36px;\n  text-align: right;\n  margin-right: 14px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    text-align: left;\n    margin-right: 0;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst Multiplier: React.FunctionComponent<MultiplierProps> = ({ multiplier }) => {\n  const displayMultiplier = multiplier ? multiplier.toLowerCase() : <Skeleton width={30} />\n  const TranslateString = useI18n()\n  const tooltipContent = (\n    <div>\n      {TranslateString(999, 'The multiplier represents the amount of CAKE rewards each farm gets.')}\n      <br />\n      <br />\n      {TranslateString(\n        999,\n        'For example, if a 1x farm was getting 1 CAKE per block, a 40x farm would be getting 40 CAKE per block.',\n      )}\n    </div>\n  )\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, 'top-end', 'hover', undefined, undefined, [\n    20,\n    10,\n  ])\n\n  return (\n    <Container>\n      <MultiplierWrapper>{displayMultiplier}</MultiplierWrapper>\n      <ReferenceElement ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" />\n      </ReferenceElement>\n      {tooltipVisible && tooltip}\n    </Container>\n  )\n}\n\nexport default Multiplier\n","import React from 'react'\nimport styled from 'styled-components'\nimport { HelpIcon, Text, Skeleton, useTooltip } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport BigNumber from 'bignumber.js'\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`\n\nexport interface LiquidityProps {\n  liquidity: BigNumber\n}\n\nconst LiquidityWrapper = styled.div`\n  min-width: 110px;\n  font-weight: 600;\n  text-align: right;\n  margin-right: 14px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    text-align: left;\n    margin-right: 0;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst Liquidity: React.FunctionComponent<LiquidityProps> = ({ liquidity }) => {\n  const displayLiquidity = liquidity ? (\n    `$${Number(liquidity).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n  ) : (\n    <Skeleton width={60} />\n  )\n  const TranslateString = useI18n()\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    TranslateString(999, 'The total value of the funds in this farm’s liquidity pool'),\n    'top-end',\n    'hover',\n    undefined,\n    undefined,\n    [20, 10],\n  )\n\n  return (\n    <Container>\n      <LiquidityWrapper>\n        <Text>{displayLiquidity}</Text>\n      </LiquidityWrapper>\n      <ReferenceElement ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" />\n      </ReferenceElement>\n      {tooltipVisible && tooltip}\n    </Container>\n  )\n}\n\nexport default Liquidity\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    max-height: 100px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 48px;\n    margin-right: 0;\n    margin-bottom: 0;\n    max-height: 100px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n  margin-bottom: 8px;\n`\n\nexport const Title = styled.span`\n  color: ${({ theme }) => theme.colors.secondary};\n`\n\nexport const Subtle = styled.span`\n  color: ${({ theme }) => theme.colors.textSubtle};\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\nexport const Earned = styled.div`\n  font-weight: 600;\n  font-size: 20px;\n  color: ${({ theme }) => theme.colors.text};\n`\n\nexport const Staked = styled.div`\n  font-size: 12px;\n  color: ${({ theme }) => theme.colors.textSubtle};\n`\n","import React, { useState, useRef, useEffect } from 'react'\nimport { Button, Skeleton } from '@pancakeswap-libs/uikit'\nimport BigNumber from 'bignumber.js'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useHarvest } from 'hooks/useHarvest'\nimport useI18n from 'hooks/useI18n'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport { useCountUp } from 'react-countup'\n\nimport { ActionContainer, ActionTitles, Title, Subtle, ActionContent, Earned, Staked } from './styles'\n\ninterface HarvestActionProps extends FarmWithStakedValue {\n  userDataReady: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({ pid, userData, userDataReady }) => {\n  const earningsBigNumber = new BigNumber(userData.earnings)\n  const cakePrice = usePriceCakeBusd()\n  let earnings = 0\n  let earningsBusd = 0\n  let displayBalance = userDataReady ? earnings.toLocaleString() : <Skeleton width={60} />\n\n  // If user didn't connect wallet default abalance will be 0\n  if (!earningsBigNumber.isZero()) {\n    earnings = getBalanceNumber(earningsBigNumber)\n    earningsBusd = new BigNumber(earnings).multipliedBy(cakePrice).toNumber()\n    displayBalance = earnings.toLocaleString()\n  }\n\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvest(pid)\n  const TranslateString = useI18n()\n\n  const { countUp, update } = useCountUp({\n    start: 0,\n    end: earningsBusd,\n    duration: 1,\n    separator: ',',\n    decimals: 3,\n  })\n  const updateValue = useRef(update)\n\n  useEffect(() => {\n    updateValue.current(earningsBusd)\n  }, [earningsBusd, updateValue])\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Title>CAKE </Title>\n        <Subtle>{TranslateString(1072, 'EARNED')}</Subtle>\n      </ActionTitles>\n      <ActionContent>\n        <div>\n          <Earned>{displayBalance}</Earned>\n          {countUp > 0 && <Staked>~{countUp}USD</Staked>}\n        </div>\n        <Button\n          disabled={!earnings || pendingTx || !userDataReady}\n          onClick={async () => {\n            setPendingTx(true)\n            await onReward()\n            setPendingTx(false)\n          }}\n          ml=\"4px\"\n        >\n          {TranslateString(562, 'Harvest')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton } from '@pancakeswap-libs/uikit'\nimport { useLocation } from 'react-router-dom'\nimport UnlockButton from 'components/UnlockButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useFarmUser } from 'state/hooks'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport useI18n from 'hooks/useI18n'\nimport { useApprove } from 'hooks/useApprove'\nimport { getBep20Contract } from 'utils/contractHelpers'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport useStake from 'hooks/useStake'\nimport useUnstake from 'hooks/useUnstake'\nimport useWeb3 from 'hooks/useWeb3'\n\nimport DepositModal from '../../DepositModal'\nimport WithdrawModal from '../../WithdrawModal'\nimport { ActionContainer, ActionTitles, ActionContent, Earned, Title, Subtle } from './styles'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps extends FarmWithStakedValue {\n  userDataReady: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({\n  pid,\n  lpSymbol,\n  lpAddresses,\n  quoteToken,\n  token,\n  userDataReady,\n}) => {\n  const TranslateString = useI18n()\n  const { account } = useWeb3React()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { allowance, tokenBalance, stakedBalance } = useFarmUser(pid)\n  const { onStake } = useStake(pid)\n  const { onUnstake } = useUnstake(pid)\n  const web3 = useWeb3()\n  const location = useLocation()\n\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: quoteToken.address,\n    tokenAddress: token.address,\n  })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n\n  const displayBalance = useCallback(() => {\n    const stakedBalanceNumber = getBalanceNumber(stakedBalance)\n    if (stakedBalanceNumber > 0 && stakedBalanceNumber < 0.0001) {\n      return getFullDisplayBalance(stakedBalance).toLocaleString()\n    }\n    return stakedBalanceNumber.toLocaleString()\n  }, [stakedBalance])\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal max={tokenBalance} onConfirm={onStake} tokenName={lpSymbol} addLiquidityUrl={addLiquidityUrl} />,\n  )\n  const [onPresentWithdraw] = useModal(<WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={lpSymbol} />)\n\n  const lpContract = getBep20Contract(lpAddress, web3)\n\n  const { onApprove } = useApprove(lpContract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove])\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Subtle>{TranslateString(999, 'START FARMING')}</Subtle>\n        </ActionTitles>\n        <ActionContent>\n          <UnlockButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (isApproved) {\n    if (stakedBalance.gt(0)) {\n      return (\n        <ActionContainer>\n          <ActionTitles>\n            <Title>{lpSymbol} </Title>\n            <Subtle>{TranslateString(999, 'STAKED')}</Subtle>\n          </ActionTitles>\n          <ActionContent>\n            <div>\n              <Earned>{displayBalance()}</Earned>\n            </div>\n            <IconButtonWrapper>\n              <IconButton variant=\"secondary\" onClick={onPresentWithdraw} mr=\"6px\">\n                <MinusIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n              <IconButton variant=\"secondary\" onClick={onPresentDeposit}>\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            </IconButtonWrapper>\n          </ActionContent>\n        </ActionContainer>\n      )\n    }\n\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Subtle>{TranslateString(999, 'STAKE')} </Subtle>\n          <Title>{lpSymbol}</Title>\n        </ActionTitles>\n        <ActionContent>\n          <Button\n            width=\"100%\"\n            onClick={onPresentDeposit}\n            variant=\"secondary\"\n            disabled={location.pathname.includes('archived')}\n          >\n            {TranslateString(999, 'Stake LP')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataReady) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Subtle>{TranslateString(999, 'START FARMING')}</Subtle>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} marginBottom={28} marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Subtle>{TranslateString(999, 'ENABLE FARM')}</Subtle>\n      </ActionTitles>\n      <ActionContent>\n        <Button\n          width=\"100%\"\n          disabled={requestedApproval || location.pathname.includes('archived')}\n          onClick={handleApprove}\n          variant=\"secondary\"\n        >\n          {TranslateString(999, 'Enable')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport useI18n from 'hooks/useI18n'\nimport { LinkExternal, Text } from '@pancakeswap-libs/uikit'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { CommunityTag, CoreTag, DualTag } from 'components/Tags'\n\nimport HarvestAction from './HarvestAction'\nimport StakedAction from './StakedAction'\nimport Apr, { AprProps } from '../Apr'\nimport Multiplier, { MultiplierProps } from '../Multiplier'\nimport Liquidity, { LiquidityProps } from '../Liquidity'\n\nexport interface ActionPanelProps {\n  apr: AprProps\n  multiplier: MultiplierProps\n  liquidity: LiquidityProps\n  details: FarmWithStakedValue\n  userDataReady: boolean\n  expanded: boolean\n}\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 500px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 500px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst Container = styled.div<{ expanded }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.background};\n  display: flex;\n  width: 100%;\n  flex-direction: column-reverse;\n  padding: 24px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  font-weight: 400;\n`\n\nconst StakeContainer = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n  }\n`\n\nconst TagsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 25px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 16px;\n  }\n\n  > div {\n    height: 24px;\n    padding: 0 6px;\n    font-size: 14px;\n    margin-right: 4px;\n\n    svg {\n      width: 14px;\n    }\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\nconst InfoContainer = styled.div`\n  min-width: 200px;\n`\n\nconst ValueContainer = styled.div`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: none;\n  }\n`\n\nconst ValueWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 4px 0px;\n`\n\nconst ActionPanel: React.FunctionComponent<ActionPanelProps> = ({\n  details,\n  apr,\n  multiplier,\n  liquidity,\n  userDataReady,\n  expanded,\n}) => {\n  const farm = details\n\n  const TranslateString = useI18n()\n  const isActive = farm.multiplier !== '0X'\n  const { quoteToken, token, dual } = farm\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: quoteToken.address,\n    tokenAddress: token.address,\n  })\n  const lpAddress = farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]\n  const bsc = `https://bscscan.com/address/${lpAddress}`\n  const info = `https://pancakeswap.info/pair/${lpAddress}`\n\n  return (\n    <Container expanded={expanded}>\n      <InfoContainer>\n        {isActive && (\n          <StakeContainer>\n            <StyledLinkExternal href={`https://exchange.pancakeswap.finance/#/add/${liquidityUrlPathParts}`}>\n              {TranslateString(999, `Get ${lpLabel}`, { name: lpLabel })}\n            </StyledLinkExternal>\n          </StakeContainer>\n        )}\n        <StyledLinkExternal href={bsc}>{TranslateString(999, 'View Contract')}</StyledLinkExternal>\n        <StyledLinkExternal href={info}>{TranslateString(999, 'See Pair Info')}</StyledLinkExternal>\n        <TagsContainer>\n          {farm.isCommunity ? <CommunityTag /> : <CoreTag />}\n          {dual ? <DualTag /> : null}\n        </TagsContainer>\n      </InfoContainer>\n      <ValueContainer>\n        <ValueWrapper>\n          <Text>{TranslateString(736, 'APR')}</Text>\n          <Apr {...apr} />\n        </ValueWrapper>\n        <ValueWrapper>\n          <Text>{TranslateString(999, 'Multiplier')}</Text>\n          <Multiplier {...multiplier} />\n        </ValueWrapper>\n        <ValueWrapper>\n          <Text>{TranslateString(999, 'Liquidity')}</Text>\n          <Liquidity {...liquidity} />\n        </ValueWrapper>\n      </ValueContainer>\n      <ActionContainer>\n        <HarvestAction {...farm} userDataReady={userDataReady} />\n        <StakedAction {...farm} userDataReady={userDataReady} />\n      </ActionContainer>\n    </Container>\n  )\n}\n\nexport default ActionPanel\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Label = styled.div`\n  font-size: 12px;\n  color: ${({ theme }) => theme.colors.textSubtle};\n  text-align: left;\n`\n\nconst ContentContainer = styled.div`\n  min-height: 24px;\n  display: flex;\n  align-items: center;\n`\n\ninterface CellLayoutProps {\n  label?: string\n}\n\nconst CellLayout: React.FC<CellLayoutProps> = ({ label = '', children }) => {\n  return (\n    <div>\n      {label && <Label>{label}</Label>}\n      <ContentContainer>{children}</ContentContainer>\n    </div>\n  )\n}\n\nexport default CellLayout\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport { useMatchBreakpoints } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport { useFarmUser } from 'state/hooks'\n\nimport Apr, { AprProps } from './Apr'\nimport Farm, { FarmProps } from './Farm'\nimport Earned, { EarnedProps } from './Earned'\nimport Details from './Details'\nimport Multiplier, { MultiplierProps } from './Multiplier'\nimport Liquidity, { LiquidityProps } from './Liquidity'\nimport ActionPanel from './Actions/ActionPanel'\nimport CellLayout from './CellLayout'\nimport { DesktopColumnSchema, MobileColumnSchema } from '../types'\n\nexport interface RowProps {\n  apr: AprProps\n  farm: FarmProps\n  earned: EarnedProps\n  multiplier: MultiplierProps\n  liquidity: LiquidityProps\n  details: FarmWithStakedValue\n}\n\ninterface RowPropsWithLoading extends RowProps {\n  userDataReady: boolean\n}\n\nconst cells = {\n  apr: Apr,\n  farm: Farm,\n  earned: Earned,\n  details: Details,\n  multiplier: Multiplier,\n  liquidity: Liquidity,\n}\n\nconst CellInner = styled.div`\n  padding: 24px 0px;\n  display: flex;\n  width: 100%;\n  align-items: center;\n  padding-right: 8px;\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    padding-right: 32px;\n  }\n`\n\nconst StyledTr = styled.tr`\n  cursor: pointer;\n  border-bottom: 2px solid ${({ theme }) => theme.colors.borderColor};\n`\n\nconst EarnedMobileCell = styled.td`\n  padding: 16px 0 24px 16px;\n`\n\nconst AprMobileCell = styled.td`\n  padding-top: 16px;\n  padding-bottom: 24px;\n`\n\nconst FarmMobileCell = styled.td`\n  padding-top: 24px;\n`\n\nconst Row: React.FunctionComponent<RowPropsWithLoading> = (props) => {\n  const { details, userDataReady } = props\n  const hasStakedAmount = !!useFarmUser(details.pid).stakedBalance.toNumber()\n  const [actionPanelExpanded, setActionPanelExpanded] = useState(hasStakedAmount)\n  const shouldRenderChild = useDelayedUnmount(actionPanelExpanded, 300)\n  const TranslateString = useI18n()\n\n  const toggleActionPanel = () => {\n    setActionPanelExpanded(!actionPanelExpanded)\n  }\n\n  useEffect(() => {\n    setActionPanelExpanded(hasStakedAmount)\n  }, [hasStakedAmount])\n\n  const { isXl, isXs } = useMatchBreakpoints()\n\n  const isMobile = !isXl\n  const tableSchema = isMobile ? MobileColumnSchema : DesktopColumnSchema\n  const columnNames = tableSchema.map((column) => column.name)\n\n  const handleRenderRow = () => {\n    if (!isXs) {\n      return (\n        <StyledTr onClick={toggleActionPanel}>\n          {Object.keys(props).map((key) => {\n            const columnIndex = columnNames.indexOf(key)\n            if (columnIndex === -1) {\n              return null\n            }\n\n            switch (key) {\n              case 'details':\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout>\n                        <Details actionPanelToggled={actionPanelExpanded} />\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              case 'apr':\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout label={TranslateString(736, 'APR')}>\n                        <Apr {...props.apr} hideButton={isMobile} />\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              default:\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout\n                        label={TranslateString(tableSchema[columnIndex].translationId, tableSchema[columnIndex].label)}\n                      >\n                        {React.createElement(cells[key], { ...props[key], userDataReady })}\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n            }\n          })}\n        </StyledTr>\n      )\n    }\n\n    return (\n      <StyledTr onClick={toggleActionPanel}>\n        <td>\n          <tr>\n            <FarmMobileCell>\n              <CellLayout>\n                <Farm {...props.farm} />\n              </CellLayout>\n            </FarmMobileCell>\n          </tr>\n          <tr>\n            <EarnedMobileCell>\n              <CellLayout label={TranslateString(1072, 'Earned')}>\n                <Earned {...props.earned} userDataReady={userDataReady} />\n              </CellLayout>\n            </EarnedMobileCell>\n            <AprMobileCell>\n              <CellLayout label={TranslateString(736, 'APR')}>\n                <Apr {...props.apr} hideButton />\n              </CellLayout>\n            </AprMobileCell>\n          </tr>\n        </td>\n        <td>\n          <CellInner>\n            <CellLayout>\n              <Details actionPanelToggled={actionPanelExpanded} />\n            </CellLayout>\n          </CellInner>\n        </td>\n      </StyledTr>\n    )\n  }\n\n  return (\n    <>\n      {handleRenderRow()}\n      {shouldRenderChild && (\n        <tr>\n          <td colSpan={6}>\n            <ActionPanel {...props} expanded={actionPanelExpanded} />\n          </td>\n        </tr>\n      )}\n    </>\n  )\n}\n\nexport default Row\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { useTable, Button, ChevronUpIcon, ColumnType } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nimport Row, { RowProps } from './Row'\n\nexport interface ITableProps {\n  data: RowProps[]\n  columns: ColumnType<RowProps>[]\n  userDataReady: boolean\n  sortColumn?: string\n}\n\nconst Container = styled.div`\n  filter: ${({ theme }) => theme.card.dropShadow};\n  width: 100%;\n  background: ${({ theme }) => theme.card.background};\n  border-radius: 16px;\n  margin: 16px 0px;\n`\n\nconst TableWrapper = styled.div`\n  overflow: visible;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nconst StyledTable = styled.table`\n  border-collapse: collapse;\n  font-size: 14px;\n  border-radius: 4px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n`\n\nconst TableBody = styled.tbody`\n  & tr {\n    td {\n      font-size: 16px;\n      vertical-align: middle;\n    }\n  }\n`\n\nconst TableContainer = styled.div`\n  position: relative;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst FarmTable: React.FC<ITableProps> = (props) => {\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const TranslateString = useI18n()\n  const { data, columns, userDataReady } = props\n\n  const { rows } = useTable(columns, data, { sortable: true, sortColumn: 'farm' })\n\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n\n  return (\n    <Container>\n      <TableContainer>\n        <TableWrapper ref={tableWrapperEl}>\n          <StyledTable>\n            <TableBody>\n              {rows.map((row) => {\n                return <Row {...row.original} userDataReady={userDataReady} key={`table-row-${row.id}`} />\n              })}\n            </TableBody>\n          </StyledTable>\n        </TableWrapper>\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {TranslateString(999, 'To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </TableContainer>\n    </Container>\n  )\n}\n\nexport default FarmTable\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useLocation, Link, useRouteMatch } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem, NotificationDot } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface FarmTabButtonsProps {\n  hasStakeInFinishedFarms: boolean\n  hasStakeInArchivedFarms: boolean\n}\n\nconst FarmTabButtons: React.FC<FarmTabButtonsProps> = ({ hasStakeInFinishedFarms, hasStakeInArchivedFarms }) => {\n  const { url } = useRouteMatch()\n  const location = useLocation()\n  const TranslateString = useI18n()\n\n  let activeIndex\n  switch (location.pathname) {\n    case '/farms':\n      activeIndex = 0\n      break\n    case '/farms/history':\n      activeIndex = 1\n      break\n    case '/farms/archived':\n      activeIndex = 2\n      break\n    default:\n      activeIndex = 0\n      break\n  }\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={activeIndex} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {TranslateString(1198, 'Live')}\n        </ButtonMenuItem>\n        <NotificationDot show={hasStakeInFinishedFarms}>\n          <ButtonMenuItem as={Link} to={`${url}/history`}>\n            {TranslateString(388, 'Finished')}\n          </ButtonMenuItem>\n        </NotificationDot>\n        <NotificationDot show={hasStakeInArchivedFarms}>\n          <ButtonMenuItem as={Link} to={`${url}/archived`}>\n            {TranslateString(999, 'Discontinued')}\n          </ButtonMenuItem>\n        </NotificationDot>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default FarmTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n","import React, { useState, useMemo } from 'react'\nimport { Input } from '@pancakeswap-libs/uikit'\nimport styled from 'styled-components'\nimport debounce from 'lodash/debounce'\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 234px;\n    display: block;\n  }\n`\n\nconst Container = styled.div<{ toggled: boolean }>``\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n}\n\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback }) => {\n  const [toggled, setToggled] = useState(false)\n  const [searchText, setSearchText] = useState('')\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback],\n  )\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n    debouncedOnChange(e)\n  }\n\n  return (\n    <Container toggled={toggled}>\n      <InputWrapper>\n        <StyledInput\n          value={searchText}\n          onChange={onChange}\n          placeholder=\"Search farms\"\n          onBlur={() => setToggled(false)}\n        />\n      </InputWrapper>\n    </Container>\n  )\n}\n\nexport default SearchInput\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap-libs/uikit'\nimport { ViewMode } from '../types'\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import React, { useEffect, useCallback, useState, useMemo, useRef } from 'react'\nimport { Route, useRouteMatch, useLocation } from 'react-router-dom'\nimport { useAppDispatch } from 'state'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Image, Heading, RowType, Toggle, Text } from '@pancakeswap-libs/uikit'\nimport styled from 'styled-components'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport { MigrationV2 } from 'components/Banner'\nimport { useFarms, usePriceCakeBusd, useGetApiPrices } from 'state/hooks'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmUserDataAsync } from 'state/actions'\nimport usePersistState from 'hooks/usePersistState'\nimport { Farm } from 'state/types'\nimport useI18n from 'hooks/useI18n'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getFarmApr } from 'utils/apr'\nimport { orderBy } from 'lodash'\nimport { getAddress } from 'utils/addressHelpers'\nimport isArchivedPid from 'utils/farmHelpers'\nimport PageHeader from 'components/PageHeader'\nimport { fetchFarmsPublicDataAsync, setLoadArchivedFarmsData } from 'state/farms'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\nimport Table from './components/FarmTable/FarmTable'\nimport FarmTabButtons from './components/FarmTabButtons'\nimport SearchInput from './components/SearchInput'\nimport { RowProps } from './components/FarmTable/Row'\nimport ToggleView from './components/ToggleView/ToggleView'\nimport { DesktopColumnSchema, ViewMode } from './components/types'\n\nconst ControlContainer = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n    margin-bottom: 0;\n  }\n`\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst StyledImage = styled(Image)`\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 58px;\n`\nconst NUMBER_OF_FARMS_VISIBLE = 12\n\nconst Farms: React.FC = () => {\n  const { path } = useRouteMatch()\n  const { pathname } = useLocation()\n  const TranslateString = useI18n()\n  const { data: farmsLP, userDataLoaded } = useFarms()\n  const cakePrice = usePriceCakeBusd()\n  const [query, setQuery] = useState('')\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, 'pancake_farm_view')\n  const { account } = useWeb3React()\n  const [sortOption, setSortOption] = useState('hot')\n  const prices = useGetApiPrices()\n\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchFarmUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const isArchived = pathname.includes('archived')\n  const isInactive = pathname.includes('history')\n  const isActive = !isInactive && !isArchived\n\n  // Users with no wallet connected should see 0 as Earned amount\n  // Connected users should see loading indicator until first userData has loaded\n  const userDataReady = !account || (!!account && userDataLoaded)\n\n  const [stakedOnly, setStakedOnly] = useState(!isActive)\n  useEffect(() => {\n    setStakedOnly(!isActive)\n  }, [isActive])\n\n  useEffect(() => {\n    // Makes the main scheduled fetching to request archived farms data\n    dispatch(setLoadArchivedFarmsData(isArchived))\n\n    // Immediately request data for archived farms so users don't have to wait\n    // 60 seconds for public data and 10 seconds for user data\n    if (isArchived) {\n      dispatch(fetchFarmsPublicDataAsync())\n      if (account) {\n        dispatch(fetchFarmUserDataAsync(account))\n      }\n    }\n  }, [isArchived, dispatch, account])\n\n  const activeFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier !== '0X' && !isArchivedPid(farm.pid))\n  const inactiveFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier === '0X' && !isArchivedPid(farm.pid))\n  const archivedFarms = farmsLP.filter((farm) => isArchivedPid(farm.pid))\n\n  const stakedOnlyFarms = activeFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const stakedInactiveFarms = inactiveFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const stakedArchivedFarms = archivedFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const farmsList = useCallback(\n    (farmsToDisplay: Farm[]): FarmWithStakedValue[] => {\n      let farmsToDisplayWithAPR: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\n        if (!farm.lpTotalInQuoteToken || !prices) {\n          return farm\n        }\n\n        const quoteTokenPriceUsd = prices[getAddress(farm.quoteToken.address).toLowerCase()]\n        const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(quoteTokenPriceUsd)\n        const apr = isActive ? getFarmApr(farm.poolWeight, cakePrice, totalLiquidity) : 0\n\n        return { ...farm, apr, liquidity: totalLiquidity }\n      })\n\n      if (query) {\n        const lowercaseQuery = query.toLowerCase()\n        farmsToDisplayWithAPR = farmsToDisplayWithAPR.filter((farm: FarmWithStakedValue) => {\n          return farm.lpSymbol.toLowerCase().includes(lowercaseQuery)\n        })\n      }\n      return farmsToDisplayWithAPR\n    },\n    [cakePrice, prices, query, isActive],\n  )\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value)\n  }\n\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n\n  const [numberOfFarmsVisible, setNumberOfFarmsVisible] = useState(NUMBER_OF_FARMS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n\n  const farmsStakedMemoized = useMemo(() => {\n    let farmsStaked = []\n\n    const sortFarms = (farms: FarmWithStakedValue[]): FarmWithStakedValue[] => {\n      switch (sortOption) {\n        case 'apr':\n          return orderBy(farms, (farm: FarmWithStakedValue) => farm.apr, 'desc')\n        case 'multiplier':\n          return orderBy(\n            farms,\n            (farm: FarmWithStakedValue) => (farm.multiplier ? Number(farm.multiplier.slice(0, -1)) : 0),\n            'desc',\n          )\n        case 'earned':\n          return orderBy(farms, (farm: FarmWithStakedValue) => (farm.userData ? farm.userData.earnings : 0), 'desc')\n        case 'liquidity':\n          return orderBy(farms, (farm: FarmWithStakedValue) => Number(farm.liquidity), 'desc')\n        default:\n          return farms\n      }\n    }\n\n    if (isActive) {\n      farmsStaked = stakedOnly ? farmsList(stakedOnlyFarms) : farmsList(activeFarms)\n    }\n    if (isInactive) {\n      farmsStaked = stakedOnly ? farmsList(stakedInactiveFarms) : farmsList(inactiveFarms)\n    }\n    if (isArchived) {\n      farmsStaked = stakedOnly ? farmsList(stakedArchivedFarms) : farmsList(archivedFarms)\n    }\n\n    return sortFarms(farmsStaked).slice(0, numberOfFarmsVisible)\n  }, [\n    sortOption,\n    activeFarms,\n    farmsList,\n    inactiveFarms,\n    archivedFarms,\n    isActive,\n    isInactive,\n    isArchived,\n    stakedArchivedFarms,\n    stakedInactiveFarms,\n    stakedOnly,\n    stakedOnlyFarms,\n    numberOfFarmsVisible,\n  ])\n\n  useEffect(() => {\n    const showMoreFarms = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfFarmsVisible((farmsCurrentlyVisible) => farmsCurrentlyVisible + NUMBER_OF_FARMS_VISIBLE)\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMoreFarms, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [farmsStakedMemoized, observerIsSet])\n\n  const rowData = farmsStakedMemoized.map((farm) => {\n    const { token, quoteToken } = farm\n    const tokenAddress = token.address\n    const quoteTokenAddress = quoteToken.address\n    const lpLabel = farm.lpSymbol && farm.lpSymbol.split(' ')[0].toUpperCase().replace('PANCAKE', '')\n\n    const row: RowProps = {\n      apr: {\n        value: farm.apr && farm.apr.toLocaleString('en-US', { maximumFractionDigits: 2 }),\n        multiplier: farm.multiplier,\n        lpLabel,\n        tokenAddress,\n        quoteTokenAddress,\n        cakePrice,\n        originalValue: farm.apr,\n      },\n      farm: {\n        image: farm.lpSymbol.split(' ')[0].toLocaleLowerCase(),\n        label: lpLabel,\n        pid: farm.pid,\n      },\n      earned: {\n        earnings: getBalanceNumber(new BigNumber(farm.userData.earnings)),\n        pid: farm.pid,\n      },\n      liquidity: {\n        liquidity: farm.liquidity,\n      },\n      multiplier: {\n        multiplier: farm.multiplier,\n      },\n      details: farm,\n    }\n\n    return row\n  })\n\n  const renderContent = (): JSX.Element => {\n    if (viewMode === ViewMode.TABLE && rowData.length) {\n      const columnSchema = DesktopColumnSchema\n\n      const columns = columnSchema.map((column) => ({\n        id: column.id,\n        name: column.name,\n        label: column.label,\n        sort: (a: RowType<RowProps>, b: RowType<RowProps>) => {\n          switch (column.name) {\n            case 'farm':\n              return b.id - a.id\n            case 'apr':\n              if (a.original.apr.value && b.original.apr.value) {\n                return Number(a.original.apr.value) - Number(b.original.apr.value)\n              }\n\n              return 0\n            case 'earned':\n              return a.original.earned.earnings - b.original.earned.earnings\n            default:\n              return 1\n          }\n        },\n        sortable: column.sortable,\n      }))\n\n      return <Table data={rowData} columns={columns} userDataReady={userDataReady} />\n    }\n\n    return (\n      <div>\n        <FlexLayout>\n          <Route exact path={`${path}`}>\n            {farmsStakedMemoized.map((farm) => (\n              <FarmCard key={farm.pid} farm={farm} cakePrice={cakePrice} account={account} removed={false} />\n            ))}\n          </Route>\n          <Route exact path={`${path}/history`}>\n            {farmsStakedMemoized.map((farm) => (\n              <FarmCard key={farm.pid} farm={farm} cakePrice={cakePrice} account={account} removed />\n            ))}\n          </Route>\n          <Route exact path={`${path}/archived`}>\n            {farmsStakedMemoized.map((farm) => (\n              <FarmCard key={farm.pid} farm={farm} cakePrice={cakePrice} account={account} removed />\n            ))}\n          </Route>\n        </FlexLayout>\n      </div>\n    )\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  return (\n    <>\n      <PageHeader>\n        <Heading as=\"h1\" size=\"xxl\" color=\"secondary\" mb=\"24px\">\n          {TranslateString(674, 'Farms')}\n        </Heading>\n        <Heading size=\"lg\" color=\"text\">\n          {TranslateString(999, 'Stake Liquidity Pool (LP) tokens to earn.')}\n        </Heading>\n      </PageHeader>\n      <MigrationV2 />\n      <Page>\n        <ControlContainer>\n          <ViewControls>\n            <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n            <ToggleWrapper>\n              <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\n              <Text> {TranslateString(1116, 'Staked only')}</Text>\n            </ToggleWrapper>\n            <FarmTabButtons\n              hasStakeInFinishedFarms={stakedInactiveFarms.length > 0}\n              hasStakeInArchivedFarms={stakedArchivedFarms.length > 0}\n            />\n          </ViewControls>\n          <FilterContainer>\n            <LabelWrapper>\n              <Text>SORT BY</Text>\n              <Select\n                options={[\n                  {\n                    label: 'Hot',\n                    value: 'hot',\n                  },\n                  {\n                    label: 'APR',\n                    value: 'apr',\n                  },\n                  {\n                    label: 'Multiplier',\n                    value: 'multiplier',\n                  },\n                  {\n                    label: 'Earned',\n                    value: 'earned',\n                  },\n                  {\n                    label: 'Liquidity',\n                    value: 'liquidity',\n                  },\n                ]}\n                onChange={handleSortOptionChange}\n              />\n            </LabelWrapper>\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text>SEARCH</Text>\n              <SearchInput onChange={handleChangeQuery} />\n            </LabelWrapper>\n          </FilterContainer>\n        </ControlContainer>\n        {renderContent()}\n        <div ref={loadMoreRef} />\n        <StyledImage src=\"/images/3dpan.png\" alt=\"Pancake illustration\" width={120} height={103} />\n      </Page>\n    </>\n  )\n}\n\nexport default Farms\n","import React from 'react'\nimport CardValue, { CardValueProps } from './CardValue'\n\nconst CardBusdValue: React.FC<CardValueProps> = (props) => {\n  return (\n    <CardValue fontSize=\"14px\" lineHeight=\"1.1\" color=\"textSubtle\" prefix=\"~$\" bold={false} decimals={2} {...props} />\n  )\n}\n\nexport default CardBusdValue\n","import React, { useEffect, useRef } from 'react'\nimport { useCountUp } from 'react-countup'\nimport { Text } from '@pancakeswap-libs/uikit'\n\nexport interface CardValueProps {\n  value: number\n  decimals?: number\n  fontSize?: string\n  lineHeight?: string\n  prefix?: string\n  bold?: boolean\n  color?: string\n}\n\nconst CardValue: React.FC<CardValueProps> = ({\n  value,\n  decimals,\n  fontSize = '40px',\n  lineHeight = '1',\n  prefix = '',\n  bold = true,\n  color = 'text',\n}) => {\n  const { countUp, update } = useCountUp({\n    start: 0,\n    end: value,\n    duration: 1,\n    separator: ',',\n    decimals:\n      // eslint-disable-next-line no-nested-ternary\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\n  })\n\n  const updateValue = useRef(update)\n\n  useEffect(() => {\n    updateValue.current(value)\n  }, [value, updateValue])\n\n  return (\n    <Text bold={bold} fontSize={fontSize} style={{ lineHeight }} color={color}>\n      {prefix}\n      {countUp}\n    </Text>\n  )\n}\n\nexport default CardValue\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px 0;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`\n\nexport default ModalActions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void\n  expanded?: boolean\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\n      <Text color=\"primary\" bold>\n        {expanded ? TranslateString(1066, 'Hide') : TranslateString(658, 'Details')}\n      </Text>\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n    </Wrapper>\n  )\n}\n\nExpandableSectionButton.defaultProps = {\n  expanded: false,\n}\n\nexport default ExpandableSectionButton\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Text } from '@pancakeswap-libs/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\n  cursor: pointer;\n  width: ${({ width }) => width}px;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps {\n  options: OptionProps[]\n  onChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\n  const containerRef = useRef(null)\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOption, setSelectedOption] = useState(options[0])\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\n\n  const toggling = () => setIsOpen(!isOpen)\n\n  const onOptionClicked = (option: OptionProps) => () => {\n    setSelectedOption(option)\n    setIsOpen(false)\n\n    if (onChange) {\n      onChange(option)\n    }\n  }\n\n  useEffect(() => {\n    setContainerSize({\n      width: dropdownRef.current.offsetWidth, // Consider border\n      height: dropdownRef.current.offsetHeight,\n    })\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\n      {containerSize.width !== 0 && (\n        <DropDownHeader onClick={toggling}>\n          <Text>{selectedOption.label}</Text>\n        </DropDownHeader>\n      )}\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option) =>\n            option.label !== selectedOption.label ? (\n              <ListItem onClick={onOptionClicked(option)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n"],"sourceRoot":""}