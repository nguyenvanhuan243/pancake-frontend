{"version":3,"sources":["contexts/PastLotteryDataContext.tsx","hooks/useTimer.ts","views/Lottery/helpers/CountdownHelpers.ts","views/Lottery/components/LotteryProgress.tsx","views/Lottery/components/Hero.tsx","views/Lottery/components/Divider.tsx","views/Lottery/components/Loading.tsx","views/Lottery/components/TicketCard/UserTicketsModal.tsx","views/Lottery/components/YourPrizesCard/PrizesWonContent.tsx","views/Lottery/components/YourPrizesCard/NoPrizesContent.tsx","views/Lottery/components/YourPrizesCard/index.tsx","views/Lottery/components/UnlockWalletCard.tsx","views/Lottery/components/TicketCard/TicketActions.tsx","views/Lottery/components/TicketCard/index.tsx","views/Lottery/components/PrizeGrid.tsx","views/Lottery/components/TotalPrizesCard/index.tsx","views/Lottery/components/WinningNumbers.tsx","views/Lottery/components/HowItWorks.tsx","views/Lottery/NextDrawPage.tsx","utils/getLotteryRoundData.ts","hooks/useGetRecentLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/PastLotterySearcher.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardError.tsx","views/Lottery/components/LotteryCardHeading.tsx","views/Lottery/components/PastLotteryRoundViewer/PastLotteryActions.tsx","views/Lottery/helpers/formatLotteryDate.ts","views/Lottery/components/Timestamp.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardDetails.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCard.tsx","views/Lottery/components/PastLotteryRoundViewer/index.tsx","views/Lottery/components/PastDrawsHistory/HistoryChart.tsx","views/Lottery/components/PastDrawsHistory/Legend.tsx","views/Lottery/components/PastDrawsHistory/PastDrawsHistoryCard.tsx","views/Lottery/PastDrawsPage.tsx","views/Lottery/Lottery.tsx","utils/getTimePeriods.ts","components/ExpandableSectionButton/ExpandableSectionButton.tsx","components/Select/Select.tsx"],"names":["React","createContext","mostRecentLotteryNumber","historyError","historyData","useCurrentTime","useState","Date","getTime","currentMillis","setCurrentMillis","useEffect","timerID","setInterval","prevMillis","clearInterval","lotteryDrawHoursUtc","getNextLotteryDrawTime","millisTimeOfNextDraw","date","currentHour","getUTCHours","nextLotteryHour","getClosestLotteryHour","tomorrow","nextDay","getUTCDate","setUTCDate","setUTCHours","hoursAndMinutesString","hours","minutes","parseInt","getTicketSaleTime","msUntilNextTicketSale","getNextTicketSaleTime","getTimePeriods","getLotteryDrawStep","ProgressWrapper","styled","div","TopTextWrapper","BottomTextWrapper","StyledPrimaryText","Text","LotteryProgress","TranslateString","useI18n","lotteryHasDrawn","useGetLotteryHasDrawn","timeUntilTicketSale","timeUntilLotteryDraw","msUntilLotteryDraw","getLotteryDrawTime","primaryStep","secondaryStep","showProgressBunny","fontSize","bold","color","Title","Heading","attrs","as","size","theme","colors","secondary","Blurb","StyledHero","StyledContainer","Container","mediaQueries","sm","LeftWrapper","lg","RightWrapper","Hero","textSubtle","StyledLoading","Loading","RewardP","TicketsList","props","primary","StyledButton","Button","spacing","UserTicketsModal","myTicketNumbers","onDismiss","from","winNumbers","useWinningNumbers","rewardMatch","useCallback","number","n","i","length","listItems","map","index","emoji","Array","join","toString","title","TICKETS","variant","onClick","WinningsWrapper","IconWrapper","StyledCardActions","StyledCardContentInner","PrizesWonContent","onSuccess","requestedClaim","setRequestedClaim","useTotalClaim","claimLoading","claimAmount","onMultiClaim","useMultiClaimLottery","tickets","useTickets","useModal","onPresentMyTickets","handleClaim","a","console","error","winnings","getBalanceNumber","toFixed","style","marginRight","width","disabled","Wrapper","TextWrapper","StyledText","Image","img","md","NoPrizesContent","src","alt","StyledCard","Card","isDisabled","textDisabled","YourPrizesCard","isAWin","isActive","StyledCardBody","CardBody","StyledHeading","UnlockWalletCard","UnlockButton","CardActions","TicketCard","allowance","useLotteryAllowance","cakeBalance","useTokenBalance","getCakeAddress","ticketsLength","PurchaseWarningModal","onPresentApprove","BuyTicketModal","max","onPresentBuy","useApproval","handleApprove","requestedApproval","toNumber","id","isSecondCard","CardHeader","TicketCountWrapper","TicketActions","Grid","pastDraw","RightAlignedText","RightAlignedHeading","GridItem","marginBottom","PastDrawGridItem","PrizeGrid","lotteryPrizeAmount","jackpotMatches","twoTicketMatches","threeTicketMatches","fourMatchesAmount","threeMatchesAmount","twoMatchesAmount","burnAmount","cakeBusdPrice","usePriceCakeBusd","getCakeBusdValue","amount","BigNumber","multipliedBy","toLocaleString","eq","CardBusdValue","value","CardHeading","Right","Left","PrizeCountWrapper","ExpandingWrapper","showFooter","TotalPrizesCard","account","useWeb3React","setShowFooter","useTotalRewards","lotteryPrizeAmountBusd","lotteryPrizeWithCommaSeparators","currentLotteryNumber","useContext","PastLotteryDataContext","mb","alignItems","justifyContent","height","fontWeight","num","ExpandableSectionButton","expanded","Link","Row","RabbitRow","RabbitRowSmall","CardImage","CardImageFirst","RowNoPadding","Column","CenteredText","CenteredTextWithPadding","TicketNumberBox","RabbitBox","RabbitBoxSmall","StyledCardHeader","WinningNumbers","MatchedNumber4","useMatchingRewardLength","MatchedNumber3","MatchedNumber2","responsive","marginLeft","href","target","LayoutWrapper","StyledImage","StyledLink","HowItWorks","Cards","BaseLayout","SecondCardColumnWrapper","NextDrawPage","setLastUpdated","handleSuccess","getLotteryRoundData","lotteryNumber","fetch","response","json","data","Error","useGetRecentLotteryRoundData","isLoading","setIsLoading","setData","setError","roundData","fetchRecentLotteryData","SearchWrapper","InputWrapper","ButtonWrapper","PastLotterySearcher","initialLotteryNumber","onSubmit","setLotteryNumber","isError","setIsError","evt","preventDefault","type","inputMode","min","isWarning","onChange","currentTarget","scale","PastRoundCardError","p","message","LotteryCardHeading","valueToDisplay","children","Icon","flexDirection","defaultProps","ExternalLinkWrap","LinkExternal","contractLink","formatLotteryDate","lotteryDate","dateString","toDateString","monthAndDay","split","splice","Timestamp","timeValue","TopLotteryCardHeading","PastRoundCardDetails","jackpotTicket","lotteryNumbers","match2Ticket","match3Ticket","poolSize","TicketRound","PancakeRoundIcon","PastLotteryActions","PastRoundCard","PastLotteryRoundViewer","isInitialized","state","setState","initialLotteryData","prevState","handleSubmit","then","catch","Line","lazy","Bar","InnerWrapper","HistoryChart","showLast","isDark","useTheme","getDataArray","kind","rawData","dataPoint","reverse","slice","Number","lineStyles","borderColor","fill","borderWidth","pointRadius","pointHitRadius","chartData","labels","datasets","label","yAxisID","axesStyles","borderCapStyle","gridLines","display","ticks","fontFamily","fontColor","lineHeight","maxRotation","beginAtZero","autoSkipPadding","userCallback","options","useMemo","tooltips","mode","intersect","legend","scales","yAxes","position","xAxes","fallback","LegendItem","Circle","isPoolSize","Legend","LabelWrapper","PastDrawsHistoryCard","setShowLast","textTransform","Select","option","BunnyImageWrapper","PastDrawsPage","Lottery","lotteryContract","useLottery","activeIndex","setActiveIndex","setHistoryData","setHistoryError","setCurrentLotteryNumber","setMostRecentLotteryNumber","getLotteryIssueIndex","previousLotteryNumber","getInitialLotteryIndex","Page","onItemClick","Divider","Provider","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","seconds","delta","Math","abs","timeLeft","years","months","days","floor","aria-label","role","DropDownHeader","shadows","inset","inputSecondary","input","DropDownListContainer","zIndices","dropdown","DropDownContainer","isOpen","css","tooltip","boxShadow","DropDownList","ul","ListItem","li","containerRef","useRef","dropdownRef","setIsOpen","selectedOption","setSelectedOption","containerSize","setContainerSize","toggling","onOptionClicked","current","offsetWidth","offsetHeight","ref"],"mappings":"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","file":"static/js/13.86f07cae.chunk.js","sourcesContent":["import React from 'react'\n\nexport interface PastLotteryDataState {\n  mostRecentLotteryNumber: number\n  currentLotteryNumber: number\n  historyError: boolean\n  historyData: Array<any>\n}\n\nexport default React.createContext({\n  mostRecentLotteryNumber: 0,\n  historyError: false,\n  historyData: [],\n} as PastLotteryDataState)\n","import { useState, useEffect } from 'react'\n\nexport const useCurrentTime = () => {\n  const [currentMillis, setCurrentMillis] = useState(new Date().getTime())\n\n  useEffect(() => {\n    const tick = () => {\n      setCurrentMillis((prevMillis) => prevMillis + 1000)\n    }\n\n    const timerID = setInterval(() => tick(), 1000)\n\n    return () => clearInterval(timerID)\n  }, [])\n\n  return currentMillis\n}\n\nexport default useCurrentTime\n","import getTimePeriods from 'utils/getTimePeriods'\n\n// lottery draws UTC: 02:00 (10:00 SGT), 14:00 (22:00 SGT)\nconst lotteryDrawHoursUtc = [2, 14]\n\nconst getClosestLotteryHour = (currentHour) => {\n  switch (true) {\n    case currentHour < lotteryDrawHoursUtc[0] || currentHour >= lotteryDrawHoursUtc[1]:\n      return lotteryDrawHoursUtc[0]\n    case currentHour < lotteryDrawHoursUtc[1]:\n      return lotteryDrawHoursUtc[1]\n    default:\n      return 0\n  }\n}\n\nconst getNextLotteryDrawTime = (currentMillis) => {\n  const date = new Date(currentMillis)\n  const currentHour = date.getUTCHours()\n  const nextLotteryHour = getClosestLotteryHour(currentHour)\n  // next lottery is tomorrow if the next lottery is at 2am UTC...\n  // ...and current time is between 02:00am & 23:59pm UTC\n  const nextLotteryIsTomorrow = nextLotteryHour === 2 && currentHour >= 2 && currentHour <= 23\n  let millisTimeOfNextDraw\n\n  if (nextLotteryIsTomorrow) {\n    const tomorrow = new Date(currentMillis)\n    const nextDay = tomorrow.getUTCDate() + 1\n    tomorrow.setUTCDate(nextDay)\n    millisTimeOfNextDraw = tomorrow.setUTCHours(nextLotteryHour, 0, 0, 0)\n  } else {\n    millisTimeOfNextDraw = date.setUTCHours(nextLotteryHour, 0, 0, 0)\n  }\n\n  return millisTimeOfNextDraw\n}\n\n// @ts-ignore\nconst getNextTicketSaleTime = (currentMillis) => (parseInt(currentMillis / 3600000) + 1) * 3600000\nconst hoursAndMinutesString = (hours, minutes) => `${parseInt(hours)}h, ${parseInt(minutes)}m`\n\nexport const getTicketSaleTime = (currentMillis): string => {\n  const nextTicketSaleTime = getNextTicketSaleTime(currentMillis)\n  const msUntilNextTicketSale = nextTicketSaleTime - currentMillis\n  const { minutes } = getTimePeriods(msUntilNextTicketSale / 1000)\n  const { hours } = getTimePeriods(msUntilNextTicketSale / 1000)\n  return hoursAndMinutesString(hours, minutes)\n}\n\nexport const getLotteryDrawTime = (currentMillis): string => {\n  const nextLotteryDrawTime = getNextLotteryDrawTime(currentMillis)\n  const msUntilLotteryDraw = nextLotteryDrawTime - currentMillis\n  const { minutes } = getTimePeriods(msUntilLotteryDraw / 1000)\n  const { hours } = getTimePeriods(msUntilLotteryDraw / 1000)\n  return hoursAndMinutesString(hours, minutes)\n}\n\nexport const getTicketSaleStep = () => (1 / 12) * 100\n\nexport const getLotteryDrawStep = (currentMillis) => {\n  const msBetweenLotteries = 43200000\n  const endTime = getNextLotteryDrawTime(currentMillis)\n  const msUntilLotteryDraw = endTime - currentMillis\n  const percentageRemaining = (msUntilLotteryDraw / msBetweenLotteries) * 100\n  return 100 - percentageRemaining\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Progress } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport { useCurrentTime } from 'hooks/useTimer'\nimport {\n  getLotteryDrawTime,\n  getLotteryDrawStep,\n  getTicketSaleTime,\n  getTicketSaleStep,\n} from '../helpers/CountdownHelpers'\n\nconst ProgressWrapper = styled.div`\n  display: block;\n  width: 100%;\n`\n\nconst TopTextWrapper = styled.div`\n  margin-top: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`\n\nconst BottomTextWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`\n\nconst StyledPrimaryText = styled(Text)`\n  margin-right: 16px;\n`\nconst LotteryProgress = () => {\n  const TranslateString = useI18n()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const currentMillis = useCurrentTime()\n  const timeUntilTicketSale = getTicketSaleTime(currentMillis)\n  const timeUntilLotteryDraw = getLotteryDrawTime(currentMillis)\n\n  return (\n    <ProgressWrapper>\n      <Progress primaryStep={getLotteryDrawStep(currentMillis)} secondaryStep={getTicketSaleStep()} showProgressBunny />\n      <TopTextWrapper>\n        <StyledPrimaryText fontSize=\"20px\" bold color=\"contrast\">\n          {lotteryHasDrawn ? timeUntilTicketSale : timeUntilLotteryDraw}\n        </StyledPrimaryText>\n        <Text fontSize=\"20px\" bold color=\"invertedContrast\">\n          {lotteryHasDrawn ? TranslateString(434, 'Until ticket sale') : TranslateString(492, 'Until lottery draw')}\n        </Text>\n      </TopTextWrapper>\n      {lotteryHasDrawn && (\n        <BottomTextWrapper>\n          <Text color=\"invertedContrast\">\n            {timeUntilLotteryDraw} {TranslateString(492, 'Until lottery draw')}\n          </Text>\n        </BottomTextWrapper>\n      )}\n    </ProgressWrapper>\n  )\n}\n\nexport default LotteryProgress\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport Container from 'components/layout/Container'\nimport LotteryProgress from './LotteryProgress'\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: ${({ theme }) => theme.colors.secondary};\n  margin-bottom: 24px;\n`\n\nconst Blurb = styled(Text)`\n  color: #ffffff;\n  font-size: 20px;\n  font-weight: 600;\n`\n\nconst StyledHero = styled.div`\n  background-image: linear-gradient(180deg, #53dee9 0%, #1fc7d4 100%);\n  padding-bottom: 40px;\n  padding-top: 40px;\n`\n\nconst StyledContainer = styled(Container)`\n  display: flex;\n\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n  }\n`\n\nconst LeftWrapper = styled.div`\n  flex: 1;\n  padding-right: 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-right: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-right: 32px;\n  }\n`\n\nconst RightWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n  padding-left: 0;\n  margin-top: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 0;\n    padding-left: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-left: 32px;\n  }\n`\n\nconst Hero = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledHero>\n      <StyledContainer>\n        <LeftWrapper>\n          <Title>{TranslateString(708, 'The CAKE Lottery')}</Title>\n          <Blurb>{TranslateString(710, 'Buy tickets with CAKE')}</Blurb>\n          <Blurb>{TranslateString(712, 'Win if 2, 3, or 4 of your ticket numbers match!')}</Blurb>\n        </LeftWrapper>\n        <RightWrapper>\n          <LotteryProgress />\n        </RightWrapper>\n      </StyledContainer>\n    </StyledHero>\n  )\n}\n\nexport default Hero\n","import styled from 'styled-components'\n\nexport default styled.div`\n  background-color: ${({ theme }) => theme.colors.textSubtle};\n  height: 1px;\n  margin: 0 auto 32px;\n  width: 100%;\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Loading: React.FC = () => <StyledLoading />\n\nconst StyledLoading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","import React, { useCallback } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport styled from 'styled-components'\nimport { useWinningNumbers } from 'hooks/useTickets'\nimport useI18n from 'hooks/useI18n'\n\ninterface UserTicketsModalProps {\n  myTicketNumbers: Array<any>\n  from?: string\n  onDismiss?: () => void\n}\n\nconst UserTicketsModal: React.FC<UserTicketsModalProps> = ({ myTicketNumbers, onDismiss, from }) => {\n  const winNumbers = useWinningNumbers()\n  const TranslateString = useI18n()\n  const rewardMatch = useCallback(\n    (number) => {\n      let n = 0\n      for (let i = winNumbers.length - 1; i >= 0; i--) {\n        // eslint-disable-next-line eqeqeq\n        if (winNumbers[i] == number[i]) n++\n      }\n      return n\n    },\n    [winNumbers],\n  )\n\n  const listItems = myTicketNumbers.map((number, index) => {\n    if (rewardMatch(number[0]) > 1 && from !== 'buy') {\n      const emoji = new Array(rewardMatch(number[0]) + 1).join('🤑')\n      return (\n        // eslint-disable-next-line react/no-array-index-key\n        <RewardP key={index}>\n          {emoji}\n          {number.toString()}\n          {emoji}\n        </RewardP>\n      )\n    }\n    // eslint-disable-next-line react/no-array-index-key\n    return <p key={index}>{number.toString()}</p>\n  })\n\n  return (\n    <Modal\n      title={TranslateString(490, `My Tickets (Total: ${myTicketNumbers.length})`, { TICKETS: myTicketNumbers.length })}\n      onDismiss={onDismiss}\n    >\n      <TicketsList>\n        <h2>{listItems}</h2>\n      </TicketsList>\n      <StyledButton variant=\"secondary\" onClick={onDismiss}>\n        {TranslateString(438, 'Close')}\n      </StyledButton>\n    </Modal>\n  )\n}\n\nconst RewardP = styled.div`\n  color: #ff8c28;\n`\n\nconst TicketsList = styled.div`\n  text-align: center;\n  overflow-y: auto;\n  max-height: 400px;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spacing[2]}px;\n`\n\nexport default UserTicketsModal\n","import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Heading, Won, useModal } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery'\nimport useTickets, { useTotalClaim } from 'hooks/useTickets'\nimport Loading from '../Loading'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst WinningsWrapper = styled.div`\n  display: flex;\n  align-items: baseline;\n`\n\nconst IconWrapper = styled.div`\n  margin-bottom: 16px;\n\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst StyledCardActions = styled.div`\n  margin-top: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spacing[1]}px;\n`\n\ninterface PrizesWonContentProps {\n  onSuccess: () => void\n}\n\nconst PrizesWonContent: React.FC<PrizesWonContentProps> = ({ onSuccess }) => {\n  const [requestedClaim, setRequestedClaim] = useState(false)\n  const TranslateString = useI18n()\n  const { claimLoading, claimAmount } = useTotalClaim()\n  const { onMultiClaim } = useMultiClaimLottery()\n  const tickets = useTickets()\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n\n  const handleClaim = useCallback(async () => {\n    try {\n      setRequestedClaim(true)\n      const txHash = await onMultiClaim()\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        onSuccess()\n        setRequestedClaim(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onMultiClaim, setRequestedClaim, onSuccess])\n\n  const winnings = getBalanceNumber(claimAmount).toFixed(2)\n\n  return (\n    <StyledCardContentInner>\n      <IconWrapper>\n        <Won />\n      </IconWrapper>\n      <Heading as=\"h3\" size=\"lg\" color=\"secondary\">\n        {TranslateString(660, 'You won!')}\n      </Heading>\n      {claimLoading && <Loading />}\n      {!claimLoading && (\n        <>\n          <WinningsWrapper>\n            <Heading as=\"h4\" size=\"xl\" style={{ marginRight: '6px' }}>\n              {winnings}\n            </Heading>\n            <Heading as=\"h4\" size=\"lg\">\n              CAKE\n            </Heading>\n          </WinningsWrapper>\n        </>\n      )}\n      <StyledCardActions>\n        <Button width=\"100%\" disabled={requestedClaim} onClick={handleClaim}>\n          {TranslateString(1056, 'Collect')}\n        </Button>\n      </StyledCardActions>\n      <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\n        {TranslateString(432, 'View your tickets')}\n      </StyledButton>\n    </StyledCardContentInner>\n  )\n}\n\nexport default PrizesWonContent\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, useModal } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useTickets from 'hooks/useTickets'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst Wrapper = styled.div`\n  display: flex;\n`\n\nconst TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledText = styled(Text)`\n  padding-left: 12px;\n`\n\nconst Image = styled.img`\n  margin-right: 6px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-right: 20px;\n  }\n`\nconst StyledButton = styled(Button)`\n  padding: 0 12px;\n  height: unset;\n`\n\nconst NoPrizesContent: React.FC = () => {\n  const TranslateString = useI18n()\n  const tickets = useTickets()\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n\n  return (\n    <Wrapper>\n      <Image src=\"/images/no-prize.svg\" alt=\"no prizes won\" />\n      <TextWrapper>\n        <StyledText color=\"textDisabled\">{TranslateString(726, 'Sorry, no prizes to collect')}</StyledText>\n        <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\n          {TranslateString(432, 'View your tickets')}\n        </StyledButton>\n      </TextWrapper>\n    </Wrapper>\n  )\n}\n\nexport default NoPrizesContent\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody } from '@pancakeswap-libs/uikit'\nimport PrizesWonContent from './PrizesWonContent'\nimport NoPrizesContent from './NoPrizesContent'\n\nconst StyledCard = styled(Card)`\n  ${(props) =>\n    props.isDisabled\n      ? `  \n        margin-top: 16px;\n        background-color: unset;\n        box-shadow: unset;\n        border: 1px solid ${props.theme.colors.textDisabled};\n\n        ${props.theme.mediaQueries.sm} {\n          margin-top: 24px;\n        }\n\n        ${props.theme.mediaQueries.lg} {\n          margin-top: 32px;\n        }\n        `\n      : ``}\n`\n\ninterface YourPrizesCardProps {\n  isAWin: boolean\n  onSuccess: () => void\n}\n\nconst YourPrizesCard: React.FC<YourPrizesCardProps> = ({ isAWin, onSuccess }) => {\n  return (\n    <StyledCard isDisabled={!isAWin} isActive={isAWin}>\n      <CardBody>{isAWin ? <PrizesWonContent onSuccess={onSuccess} /> : <NoPrizesContent />}</CardBody>\n    </StyledCard>\n  )\n}\n\nexport default YourPrizesCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Ticket } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport UnlockButton from 'components/UnlockButton'\n\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`\n\nconst StyledHeading = styled(Heading)`\n  margin: 16px 0;\n`\n\nconst IconWrapper = styled.div`\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst UnlockWalletCard = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card isActive>\n      <StyledCardBody>\n        <IconWrapper>\n          <Ticket />\n        </IconWrapper>\n        <StyledHeading size=\"md\">{TranslateString(1080, 'Unlock wallet to access lottery')}</StyledHeading>\n        <UnlockButton />\n      </StyledCardBody>\n    </Card>\n  )\n}\n\nexport default UnlockWalletCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, useModal } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport { useLotteryAllowance } from 'hooks/useAllowance'\nimport useTickets from 'hooks/useTickets'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport { useApproval } from 'hooks/useApproval'\nimport BuyTicketModal from './BuyTicketModal'\nimport MyTicketsModal from './UserTicketsModal'\nimport PurchaseWarningModal from './PurchaseWarningModal'\n\nconst CardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${(props) => props.theme.spacing[3]}px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    justify-content: space-between;\n  }\n`\n\nconst TicketCard: React.FC = () => {\n  const TranslateString = useI18n()\n  const allowance = useLotteryAllowance()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const cakeBalance = useTokenBalance(getCakeAddress())\n  const tickets = useTickets()\n  const ticketsLength = tickets.length\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n  const [onPresentApprove] = useModal(<PurchaseWarningModal />)\n  const [onPresentBuy] = useModal(<BuyTicketModal max={cakeBalance} />)\n  const { handleApprove, requestedApproval } = useApproval(onPresentApprove)\n\n  const renderLotteryTicketButtons = () => {\n    if (!allowance.toNumber()) {\n      return (\n        <>\n          <Button width=\"100%\" disabled>\n            {TranslateString(432, 'View your tickets')}\n          </Button>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove}>\n            {TranslateString(494, 'Approve CAKE')}\n          </Button>\n        </>\n      )\n    }\n    return (\n      <>\n        <Button\n          style={{ marginRight: '8px' }}\n          width=\"100%\"\n          disabled={ticketsLength === 0}\n          variant=\"secondary\"\n          onClick={onPresentMyTickets}\n        >\n          {TranslateString(432, 'View your tickets')}\n        </Button>\n        <Button id=\"lottery-buy-start\" width=\"100%\" onClick={onPresentBuy}>\n          {TranslateString(430, 'Buy ticket')}\n        </Button>\n      </>\n    )\n  }\n\n  return (\n    <CardActions>\n      {lotteryHasDrawn ? (\n        <Button disabled> {TranslateString(874, 'On sale soon')}</Button>\n      ) : (\n        renderLotteryTicketButtons()\n      )}\n    </CardActions>\n  )\n}\n\nexport default TicketCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody, TicketRound, Text, Heading } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport useTickets from 'hooks/useTickets'\nimport { useCurrentTime } from 'hooks/useTimer'\nimport TicketActions from './TicketActions'\nimport { getTicketSaleTime } from '../../helpers/CountdownHelpers'\n\ninterface CardProps {\n  isSecondCard?: boolean\n}\n\nconst StyledCard = styled(Card)<CardProps>`\n  ${(props) =>\n    props.isSecondCard\n      ? `  \n        margin-top: 16px;\n\n        ${props.theme.mediaQueries.sm} {\n          margin-top: 24px;\n        }\n\n        ${props.theme.mediaQueries.lg} {\n          margin-top: 32px;\n        }\n        `\n      : ``}\n`\n\nconst CardHeader = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst TicketCountWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst TicketCard: React.FC<CardProps> = ({ isSecondCard = false }) => {\n  const TranslateString = useI18n()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n\n  const tickets = useTickets()\n  const ticketsLength = tickets.length\n\n  const currentMillis = useCurrentTime()\n  const timeUntilTicketSale = lotteryHasDrawn && getTicketSaleTime(currentMillis)\n\n  return (\n    <StyledCard isSecondCard={isSecondCard}>\n      <CardBody>\n        <CardHeader>\n          <IconWrapper>\n            <TicketRound />\n          </IconWrapper>\n          {lotteryHasDrawn ? (\n            <TicketCountWrapper>\n              <Text fontSize=\"14px\" color=\"textSubtle\">\n                {TranslateString(870, 'Until ticket sale:')}\n              </Text>\n              <Heading size=\"lg\">{timeUntilTicketSale}</Heading>\n            </TicketCountWrapper>\n          ) : (\n            <TicketCountWrapper>\n              <Text fontSize=\"14px\" color=\"textSubtle\">\n                {TranslateString(724, 'Your tickets for this round')}\n              </Text>\n              <Heading size=\"lg\">{ticketsLength}</Heading>\n            </TicketCountWrapper>\n          )}\n        </CardHeader>\n        <TicketActions />\n      </CardBody>\n    </StyledCard>\n  )\n}\n\nexport default TicketCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\nimport { BigNumber } from 'bignumber.js'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport CardBusdValue from '../../Home/components/CardBusdValue'\n\nexport interface PrizeGridProps {\n  lotteryPrizeAmount?: number\n  pastDraw?: boolean\n  jackpotMatches?: number\n  twoTicketMatches?: number\n  threeTicketMatches?: number\n}\n\nconst Grid = styled.div<{ pastDraw?: boolean }>`\n  display: grid;\n  grid-template-columns: repeat(${(props) => (props.pastDraw ? 3 : 2)}, 1fr);\n  grid-template-rows: repeat(4, auto);\n`\n\nconst RightAlignedText = styled(Text)`\n  text-align: right;\n`\n\nconst RightAlignedHeading = styled(Heading)`\n  text-align: right;\n`\n\nconst GridItem = styled.div<{ marginBottom?: string }>`\n  margin-bottom: ${(props) => (props.marginBottom ? props.marginBottom : '10px')};\n`\n\nconst PastDrawGridItem = styled(GridItem)`\n  transform: translate(-40%, 0%);\n`\n\nconst PrizeGrid: React.FC<PrizeGridProps> = ({\n  lotteryPrizeAmount = 0,\n  pastDraw = false,\n  jackpotMatches,\n  twoTicketMatches,\n  threeTicketMatches,\n}) => {\n  const fourMatchesAmount = +((lotteryPrizeAmount / 100) * 50).toFixed(0)\n  const threeMatchesAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\n  const twoMatchesAmount = +((lotteryPrizeAmount / 100) * 10).toFixed(0)\n  const burnAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\n  const TranslateString = useI18n()\n  const cakeBusdPrice = usePriceCakeBusd()\n\n  const getCakeBusdValue = (amount: number) => {\n    return new BigNumber(amount).multipliedBy(cakeBusdPrice).toNumber()\n  }\n\n  return (\n    <Grid pastDraw={pastDraw}>\n      <GridItem>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {TranslateString(756, 'No. Matched')}\n        </Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\n            {TranslateString(754, 'Winners')}\n          </RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\n          {TranslateString(752, 'Prize Pot')}\n        </RightAlignedText>\n      </GridItem>\n      {/* 4 matches row */}\n      <GridItem>\n        <Heading size=\"md\">4</Heading>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedHeading size=\"md\">{jackpotMatches}</RightAlignedHeading>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedHeading size=\"md\">\n          {fourMatchesAmount.toLocaleString()}\n          {!pastDraw && !cakeBusdPrice.eq(0) && <CardBusdValue value={getCakeBusdValue(fourMatchesAmount)} />}\n        </RightAlignedHeading>\n      </GridItem>\n      {/* 3 matches row */}\n      <GridItem>\n        <Text bold>3</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText bold>{threeTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText>\n          {threeMatchesAmount.toLocaleString()}\n          {!pastDraw && !cakeBusdPrice.eq(0) && <CardBusdValue value={getCakeBusdValue(threeMatchesAmount)} />}\n        </RightAlignedText>\n      </GridItem>\n      {/* 2 matches row */}\n      <GridItem>\n        <Text>2</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText>{twoTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText>\n          {twoMatchesAmount.toLocaleString()}\n          {!pastDraw && !cakeBusdPrice.eq(0) && <CardBusdValue value={getCakeBusdValue(twoMatchesAmount)} />}\n        </RightAlignedText>\n      </GridItem>\n      {/* Burn row */}\n      <GridItem marginBottom=\"0\">\n        <Text>{TranslateString(999, `${pastDraw ? 'Burned' : 'To burn'}`)}:</Text>\n      </GridItem>\n      {pastDraw ? (\n        <>\n          <GridItem marginBottom=\"0\" />\n          <GridItem marginBottom=\"0\">\n            <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\n          </GridItem>\n        </>\n      ) : (\n        <GridItem marginBottom=\"0\">\n          <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\n        </GridItem>\n      )}\n    </Grid>\n  )\n}\n\nexport default PrizeGrid\n","import React, { useContext, useState } from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Card, CardBody, CardFooter, Text, PancakeRoundIcon, Flex, Skeleton } from '@pancakeswap-libs/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { useTotalRewards } from 'hooks/useTickets'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton/ExpandableSectionButton'\nimport { BigNumber } from 'bignumber.js'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport PrizeGrid from '../PrizeGrid'\nimport CardBusdValue from '../../../Home/components/CardBusdValue'\n\nconst CardHeading = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n`\n\nconst Right = styled.div`\n  display: flex;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: none;\n  }\n`\n\nconst Left = styled.div`\n  display: flex;\n`\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst PrizeCountWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst ExpandingWrapper = styled.div<{ showFooter: boolean }>`\n  height: ${(props) => (props.showFooter ? '100%' : '0px')};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 100%;\n  }\n`\n\nconst TotalPrizesCard = () => {\n  const TranslateString = useI18n()\n  const { account } = useWeb3React()\n  const [showFooter, setShowFooter] = useState(false)\n  const lotteryPrizeAmount = +getBalanceNumber(useTotalRewards()).toFixed(0)\n  const lotteryPrizeAmountBusd = new BigNumber(lotteryPrizeAmount).multipliedBy(usePriceCakeBusd()).toNumber()\n  const lotteryPrizeWithCommaSeparators = lotteryPrizeAmount.toLocaleString()\n  const { currentLotteryNumber } = useContext(PastLotteryDataContext)\n\n  return (\n    <Card>\n      <CardBody>\n        {account && (\n          <Flex mb=\"16px\" alignItems=\"center\" justifyContent=\"space-between\" style={{ height: '20px' }}>\n            {currentLotteryNumber === 0 && <Skeleton height={20} width={56} />}\n            {currentLotteryNumber > 0 && (\n              <Text fontSize=\"12px\" style={{ fontWeight: 600 }}>\n                {TranslateString(720, `Round #${currentLotteryNumber}`, { num: currentLotteryNumber })}\n              </Text>\n            )}\n          </Flex>\n        )}\n        <CardHeading>\n          <Left>\n            <IconWrapper>\n              <PancakeRoundIcon />\n            </IconWrapper>\n            <PrizeCountWrapper>\n              <Text fontSize=\"14px\" color=\"textSubtle\">\n                {TranslateString(722, 'Total Pot:')}\n              </Text>\n              <Heading size=\"lg\">{lotteryPrizeWithCommaSeparators} CAKE</Heading>\n              {lotteryPrizeAmountBusd !== 0 && <CardBusdValue value={lotteryPrizeAmountBusd} />}\n            </PrizeCountWrapper>\n          </Left>\n          <Right>\n            <ExpandableSectionButton onClick={() => setShowFooter(!showFooter)} expanded={showFooter} />\n          </Right>\n        </CardHeading>\n      </CardBody>\n      <ExpandingWrapper showFooter={showFooter}>\n        <CardFooter>\n          <PrizeGrid lotteryPrizeAmount={lotteryPrizeAmount} />\n        </CardFooter>\n      </ExpandingWrapper>\n    </Card>\n  )\n}\n\nexport default TotalPrizesCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Image, Card, CardBody } from '@pancakeswap-libs/uikit'\nimport { useWinningNumbers, useMatchingRewardLength } from 'hooks/useTickets'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\n\nconst WinningNumbers: React.FC = () => {\n  const { account } = useWeb3React()\n  const winNumbers = useWinningNumbers()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const MatchedNumber4 = useMatchingRewardLength(4)\n  const MatchedNumber3 = useMatchingRewardLength(3)\n  const MatchedNumber2 = useMatchingRewardLength(2)\n  const TranslateString = useI18n()\n\n  return (\n    <Card>\n      <CardBody>\n        <StyledCardContentInner>\n          <StyledCardHeader>\n            <Title>\n              {account && lotteryHasDrawn\n                ? `🥳${TranslateString(570, 'Winning Numbers This Round')}🥳`\n                : TranslateString(440, 'Latest Winning Numbers')}\n            </Title>\n            <br />\n          </StyledCardHeader>\n          <Row>\n            {winNumbers.map((number, index) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <TicketNumberBox key={index}>\n                <CenteredText>{number}</CenteredText>\n              </TicketNumberBox>\n            ))}\n          </Row>\n          <RabbitRow>\n            <RabbitBox>\n              <CardImageFirst>\n                <Image src=\"/images/sign bunny 1@2x.png\" alt=\"Number 1\" width={200} height={150} responsive />\n              </CardImageFirst>\n            </RabbitBox>\n            <RabbitBox>\n              <CardImage style={{ marginLeft: '-1.2em' }}>\n                <Image src=\"/images/sign bunny 2@2x.png\" alt=\"Number 2\" width={200} height={150} responsive />\n              </CardImage>\n            </RabbitBox>\n            <RabbitBox>\n              <CardImage style={{ marginLeft: '-1.2em' }}>\n                <Image src=\"/images/sign bunny 3@2x.png\" alt=\"Number 3\" width={200} height={150} responsive />\n              </CardImage>\n            </RabbitBox>\n            <RabbitBox>\n              <CardImage style={{ marginLeft: '-1.2em' }}>\n                <Image src=\"/images/sign bunny 4@2x.png\" alt=\"Number 4\" width={200} height={150} responsive />\n              </CardImage>\n            </RabbitBox>\n          </RabbitRow>\n          <RabbitRowSmall>\n            <RabbitBoxSmall>\n              <CardImageFirst>\n                <Image src=\"/images/sign bunny 1@2x.png\" alt=\"Number 1\" width={200} height={150} responsive />\n              </CardImageFirst>\n            </RabbitBoxSmall>\n            <RabbitBoxSmall>\n              <CardImage style={{ marginLeft: '-1.2em' }}>\n                <Image src=\"/images/sign bunny 2@2x.png\" alt=\"Number 2\" width={200} height={150} responsive />\n              </CardImage>\n            </RabbitBoxSmall>\n            <RabbitBoxSmall>\n              <CardImage style={{ marginLeft: '-1.2em' }}>\n                <Image src=\"/images/sign bunny 3@2x.png\" alt=\"Number 3\" width={200} height={150} responsive />\n              </CardImage>\n            </RabbitBoxSmall>\n            <RabbitBoxSmall>\n              <CardImage style={{ marginLeft: '-1.2em' }}>\n                <Image src=\"/images/sign bunny 4@2x.png\" alt=\"Number 4\" width={200} height={150} responsive />\n              </CardImage>\n            </RabbitBoxSmall>\n          </RabbitRowSmall>\n          <Column>\n            <RowNoPadding>\n              <CenteredTextWithPadding>{TranslateString(442, 'Tickets matching 4 numbers:')}</CenteredTextWithPadding>\n              <CenteredTextWithPadding>\n                <strong>{MatchedNumber4}</strong>\n              </CenteredTextWithPadding>\n            </RowNoPadding>\n            <RowNoPadding>\n              <CenteredTextWithPadding>{TranslateString(444, 'Tickets matching 3 numbers:')}</CenteredTextWithPadding>\n              <CenteredTextWithPadding>\n                <strong>{MatchedNumber3}</strong>\n              </CenteredTextWithPadding>\n            </RowNoPadding>\n            <RowNoPadding>\n              <CenteredTextWithPadding>{TranslateString(446, 'Tickets matching 2 numbers:')}</CenteredTextWithPadding>\n              <CenteredTextWithPadding>\n                <strong>{MatchedNumber2}</strong>\n              </CenteredTextWithPadding>\n            </RowNoPadding>\n          </Column>\n          <Link href=\"https://api.pancakeswap.com/api/lottery?page=0&pageSize=25\" target=\"_blank\">\n            {TranslateString(448, 'Export recent winning numbers')}\n          </Link>\n        </StyledCardContentInner>\n      </CardBody>\n    </Card>\n  )\n}\nconst Link = styled.a`\n  margin-top: 1em;\n  text-decoration: none;\n  color: #25beca;\n`\n\nconst Row = styled.div`\n  margin-top: 1em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n`\n\nconst RabbitRow = styled.div`\n  margin-top: -2.3em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n\n  @media (max-width: 768px) {\n    display: none;\n  }\n`\n\nconst RabbitRowSmall = styled.div`\n  margin-top: -2.3em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n\n  @media (min-width: 768px) {\n    display: none;\n  }\n`\n\nconst CardImage = styled.div`\n  text-align: center;\n`\n\nconst CardImageFirst = styled.div`\n  text-align: center;\n  margin-left: -1.2em;\n\n  @media (max-width: 600) {\n    margin-left: -0.2em;\n  }\n`\n\nconst RowNoPadding = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n`\n\nconst Column = styled.div`\n  margin-top: 1em;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`\n\nconst CenteredText = styled.div`\n  text-align: center;\n  align-items: center;\n`\n\nconst CenteredTextWithPadding = styled.div`\n  text-align: center;\n  align-items: center;\n  padding-left: 2px;\n  padding-right: 2px;\n`\n\nconst TicketNumberBox = styled.div`\n  padding: 10px;\n  border-radius: 12px;\n  background: linear-gradient(180deg, #54dade 0%, #24c7d6 76.22%);\n  color: white;\n  font-size: 20px;\n  font-weight: 900;\n  margin: 10px;\n  margin-bottom: 7px;\n  width: 40px;\n\n  @media (min-width: 768px) {\n    font-size: 40px;\n    margin: 20px;\n    width: 60px;\n  }\n`\n\nconst RabbitBox = styled.div`\n  /* padding: 10px; */\n  border-radius: 12px;\n  margin: 16px 20px;\n  width: 60px;\n`\n\nconst RabbitBoxSmall = styled.div`\n  padding-top: 10px;\n  padding-left: 10px;\n  border-radius: 12px;\n  margin: 20px;\n  width: 20px;\n`\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`\n\nconst Title = styled.div`\n  color: ${(props) => props.theme.colors.secondary};\n  font-size: 24px;\n  width: 50vw;\n  text-align: center;\n  font-weight: 1000;\n`\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nexport default WinningNumbers\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Heading, Link, Image } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst LayoutWrapper = styled.div`\n  max-width: 500px;\n  margin: 0 auto 40px;\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledHeading = styled(Heading)`\n  margin: 16px 0;\n`\n\nconst StyledImage = styled(Image)`\n  align-self: center;\n`\n\nconst StyledLink = styled(Link)`\n  align-self: center;\n  margin-top: 16px;\n`\n\nconst HowItWorks = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <LayoutWrapper>\n      <StyledImage src=\"/images/pancake-lottery-bunny.png\" alt=\"lottery bunny\" width={163} height={140} />\n      <StyledHeading size=\"lg\" as=\"h3\" color=\"secondary\">\n        {TranslateString(632, 'How it works')}\n      </StyledHeading>\n      <Text fontSize=\"16px\">\n        {TranslateString(\n          426,\n          'Spend CAKE to buy tickets, contributing to the lottery pot. Win prizes if 2, 3, or 4 of your ticket numbers match the winning numbers and their exact order!',\n        )}\n      </Text>\n      <StyledLink href=\"https://docs.pancakeswap.finance/lottery-1\">{TranslateString(610, 'Read more')}</StyledLink>\n    </LayoutWrapper>\n  )\n}\n\nexport default HowItWorks\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { BaseLayout } from '@pancakeswap-libs/uikit'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport YourPrizesCard from './components/YourPrizesCard'\nimport UnlockWalletCard from './components/UnlockWalletCard'\nimport TicketCard from './components/TicketCard'\nimport TotalPrizesCard from './components/TotalPrizesCard'\nimport WinningNumbers from './components/WinningNumbers'\nimport HowItWorks from './components/HowItWorks'\nimport { getBalanceNumber } from '../../utils/formatBalance'\n\nconst Cards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 32px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 12;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\n  display: flex;\n  flex-direction: ${(props) => (props.isAWin ? 'column' : 'column-reverse')};\n`\n\nconst NextDrawPage: React.FC = () => {\n  const { account } = useWeb3React()\n  const { claimAmount, setLastUpdated } = useTotalClaim()\n  const winnings = getBalanceNumber(claimAmount)\n  const isAWin = winnings > 0\n\n  const handleSuccess = useCallback(() => {\n    setLastUpdated()\n  }, [setLastUpdated])\n\n  return (\n    <>\n      <Cards>\n        <TotalPrizesCard />\n        <SecondCardColumnWrapper isAWin={isAWin}>\n          {!account ? (\n            <UnlockWalletCard />\n          ) : (\n            <>\n              <YourPrizesCard isAWin={isAWin} onSuccess={handleSuccess} />\n              <TicketCard isSecondCard={isAWin} />\n            </>\n          )}\n        </SecondCardColumnWrapper>\n      </Cards>\n      <HowItWorks />\n      {/* legacy page content */}\n      <WinningNumbers />\n    </>\n  )\n}\n\nexport default NextDrawPage\n","export type DataResponse = {\n  lotteryNumber: number\n  lotteryDate: string\n  lotteryNumbers: number[]\n  poolSize: number\n  burned: number\n  contractLink: string\n  jackpotTicket: number\n  match2Ticket: number\n  match3Ticket: number\n  match4Ticket: number\n  poolJackpot: number\n  poolMatch3: number\n  poolMatch2: number\n  poolMatch1: number | null\n\n  // TODO: Fill in the error type\n  error: any\n}\n\n/**\n * Get data for a specific lottery\n */\nconst getLotteryRoundData = async (lotteryNumber: number): Promise<DataResponse> => {\n  try {\n    const response = await fetch(`https://api.pancakeswap.com/api/singleLottery?lotteryNumber=${lotteryNumber}`)\n    const data = await response.json()\n\n    return data\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\nexport default getLotteryRoundData\n","import { useContext, useEffect, useState } from 'react'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport getLotteryRoundData, { DataResponse } from 'utils/getLotteryRoundData'\n\ntype GetRecentLotteryRoundDataReturn = {\n  isLoading: boolean\n  data: DataResponse\n  mostRecentLotteryNumber: number\n  error: any\n}\n\nconst useGetRecentLotteryRoundData = (): GetRecentLotteryRoundDataReturn => {\n  const [isLoading, setIsLoading] = useState(true)\n  const [data, setData] = useState(null)\n  const [error, setError] = useState(null)\n  const { mostRecentLotteryNumber } = useContext(PastLotteryDataContext)\n\n  useEffect(() => {\n    const fetchRecentLotteryData = async () => {\n      try {\n        setIsLoading(true)\n\n        const roundData = await getLotteryRoundData(mostRecentLotteryNumber)\n        setData(roundData)\n      } catch (err) {\n        setError(err)\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    if (mostRecentLotteryNumber > 0) {\n      fetchRecentLotteryData()\n    }\n  }, [mostRecentLotteryNumber, setData, setIsLoading, setError])\n\n  return { isLoading, data, mostRecentLotteryNumber, error }\n}\n\nexport default useGetRecentLotteryRoundData\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, Input, Button } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface PastLotterySearcherProps {\n  initialLotteryNumber: number\n  onSubmit: (num: number) => void\n}\n\nconst Wrapper = styled.div`\n  margin-bottom: 24px;\n`\n\nconst SearchWrapper = styled.div`\n  position: relative;\n`\nconst InputWrapper = styled.div`\n  input::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  /* Firefox */\n  input[type='number'] {\n    -moz-appearance: textfield;\n  }\n`\n\nconst ButtonWrapper = styled.div`\n  position: absolute;\n  right: 8px;\n  top: 50%;\n  transform: translate(0%, -50%);\n  width: auto;\n`\n\nconst PastLotterySearcher: React.FC<PastLotterySearcherProps> = ({ initialLotteryNumber, onSubmit }) => {\n  const [lotteryNumber, setLotteryNumber] = useState(initialLotteryNumber)\n  const [isError, setIsError] = useState(false)\n  const TranslateString = useI18n()\n\n  const handleSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault()\n    onSubmit(lotteryNumber)\n  }\n\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    if (evt.currentTarget.value) {\n      const value = parseInt(evt.currentTarget.value, 10)\n\n      // The max value will always be the initialLotteryNumber which equals\n      // the latest lottery round\n      setIsError(value > initialLotteryNumber)\n      setLotteryNumber(value)\n    } else {\n      setLotteryNumber(initialLotteryNumber)\n    }\n  }\n\n  return (\n    <Wrapper>\n      <Text>{TranslateString(742, 'Select lottery number:')}</Text>\n      <form onSubmit={handleSubmit}>\n        <SearchWrapper>\n          <InputWrapper>\n            <Input\n              value={lotteryNumber}\n              type=\"number\"\n              inputMode=\"numeric\"\n              min=\"0\"\n              isWarning={isError}\n              max={initialLotteryNumber}\n              onChange={handleChange}\n            />\n          </InputWrapper>\n          <ButtonWrapper>\n            <Button type=\"submit\" scale=\"sm\" disabled={isError}>\n              {TranslateString(744, 'Search')}\n            </Button>\n          </ButtonWrapper>\n        </SearchWrapper>\n      </form>\n    </Wrapper>\n  )\n}\n\nexport default PastLotterySearcher\n","import React from 'react'\nimport { Text } from '@pancakeswap-libs/uikit'\n\ninterface PastRoundCardErrorProps {\n  error: {\n    message: string\n  }\n}\n\nconst PastRoundCardError: React.FC<PastRoundCardErrorProps> = ({ error }) => {\n  return <Text p=\"24px\">{error.message}</Text>\n}\n\nexport default PastRoundCardError\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Heading, Text } from '@pancakeswap-libs/uikit'\n\ninterface HeadingProps {\n  valueToDisplay?: string\n  children?: string\n  Icon?: React.ComponentType\n}\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst LotteryCardHeading: React.FC<HeadingProps> = ({ valueToDisplay, children, Icon, ...props }) => {\n  return (\n    <Flex {...props}>\n      {Icon && (\n        <IconWrapper>\n          <Icon />\n        </IconWrapper>\n      )}\n      <Flex flexDirection=\"column\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {children}\n        </Text>\n        <Heading size=\"lg\">{valueToDisplay}</Heading>\n      </Flex>\n    </Flex>\n  )\n}\n\nLotteryCardHeading.defaultProps = {\n  valueToDisplay: '',\n  Icon: () => <div />,\n  children: '',\n}\n\nexport default LotteryCardHeading\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, LinkExternal, useModal } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useWeb3React } from '@web3-react/core'\nimport useTickets from 'hooks/useTickets'\nimport UnlockButton from 'components/UnlockButton'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst Wrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  padding-top: 24px;\n\n  & > div {\n    flex: 1;\n    width: 100%;\n  }\n`\n\nconst ExternalLinkWrap = styled(LinkExternal)`\n  align-items: center;\n  display: flex;\n  height: 48px;\n  justify-content: center;\n  text-decoration: none;\n  width: 100%;\n`\n\nconst TicketCard: React.FC<{ contractLink?: string; lotteryNumber?: number }> = ({ contractLink, lotteryNumber }) => {\n  const TranslateString = useI18n()\n  const tickets = useTickets(lotteryNumber)\n  const ticketsLength = tickets.length\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n  const { account } = useWeb3React()\n\n  if (!account) {\n    return (\n      <Wrapper>\n        <UnlockButton />\n      </Wrapper>\n    )\n  }\n\n  return (\n    <Wrapper>\n      <Button disabled={ticketsLength === 0} onClick={onPresentMyTickets} width=\"100%\">\n        {TranslateString(432, 'View your tickets')}\n      </Button>\n      <ExternalLinkWrap href={contractLink}>{TranslateString(356, 'View on BscScan')}</ExternalLinkWrap>\n    </Wrapper>\n  )\n}\n\nexport default TicketCard\n","const formatLotteryDate = (lotteryDate: string) => {\n  if (!lotteryDate) {\n    return {}\n  }\n\n  const date = new Date(lotteryDate)\n\n  const dateString = date.toDateString()\n  const hours = date.getUTCHours()\n  const monthAndDay = dateString.split(' ').splice(1, 2).join(' ')\n\n  return { hours, monthAndDay }\n}\n\nexport default formatLotteryDate\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\nimport formatLotteryDate from '../helpers/formatLotteryDate'\n\nconst Wrapper = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n`\n\nconst Timestamp = ({ timeValue }) => {\n  const { monthAndDay, hours } = formatLotteryDate(timeValue)\n\n  return (\n    <Wrapper>\n      <Text fontSize=\"14px\">\n        {monthAndDay}, {hours}:00 UTC\n      </Text>\n    </Wrapper>\n  )\n}\n\nexport default Timestamp\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, CardBody, CardFooter, PancakeRoundIcon, TicketRound } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { DataResponse } from 'utils/getLotteryRoundData'\nimport LotteryCardHeading from '../LotteryCardHeading'\nimport PastLotteryActions from './PastLotteryActions'\nimport PrizeGrid from '../PrizeGrid'\nimport Timestamp from '../Timestamp'\n\ninterface PastRoundCardDetailsProps {\n  data: DataResponse\n}\n\nconst CardHeading = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst TopLotteryCardHeading = styled(LotteryCardHeading)`\n  margin-bottom: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst PastRoundCardDetails: React.FC<PastRoundCardDetailsProps> = ({ data }) => {\n  const TranslateString = useI18n()\n\n  const {\n    contractLink,\n    jackpotTicket,\n    lotteryDate,\n    lotteryNumber,\n    lotteryNumbers,\n    match2Ticket,\n    match3Ticket,\n    poolSize,\n  } = data\n\n  return (\n    !data.error &&\n    data && (\n      <>\n        <CardBody>\n          <CardHeading>\n            <Timestamp timeValue={lotteryDate} />\n            <Heading size=\"md\" mb=\"24px\">\n              Round #{lotteryNumber}\n            </Heading>\n            <TopLotteryCardHeading\n              valueToDisplay={`${lotteryNumbers[0]}, ${lotteryNumbers[1]}, ${lotteryNumbers[2]}, ${lotteryNumbers[3]}`}\n              Icon={TicketRound}\n            >\n              {TranslateString(999, 'Winning numbers')}\n            </TopLotteryCardHeading>\n            <LotteryCardHeading\n              valueToDisplay={TranslateString(999, `${poolSize.toLocaleString()} CAKE`)}\n              Icon={PancakeRoundIcon}\n            >\n              {TranslateString(999, 'Total prizes')}\n            </LotteryCardHeading>\n          </CardHeading>\n        </CardBody>\n        <CardFooter>\n          <PrizeGrid\n            lotteryPrizeAmount={poolSize}\n            jackpotMatches={jackpotTicket}\n            twoTicketMatches={match2Ticket}\n            threeTicketMatches={match3Ticket}\n            pastDraw\n          />\n          <PastLotteryActions contractLink={contractLink} lotteryNumber={lotteryNumber} />\n        </CardFooter>\n      </>\n    )\n  )\n}\n\nexport default PastRoundCardDetails\n","import React from 'react'\nimport { Card } from '@pancakeswap-libs/uikit'\nimport { DataResponse } from 'utils/getLotteryRoundData'\nimport PastRoundCardError from './PastRoundCardError'\nimport PastRoundCardDetails from './PastRoundCardDetails'\n\ninterface PastRoundCardProps {\n  error: {\n    message: string\n  }\n  data: DataResponse\n}\n\nconst PastRoundCard: React.FC<PastRoundCardProps> = ({ error, data }) => {\n  return <Card>{error.message ? <PastRoundCardError error={error} /> : <PastRoundCardDetails data={data} />}</Card>\n}\n\nexport default PastRoundCard\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody } from '@pancakeswap-libs/uikit'\nimport getLotteryRoundData from 'utils/getLotteryRoundData'\nimport useI18n from 'hooks/useI18n'\nimport useGetRecentLotteryRoundData from 'hooks/useGetRecentLotteryRoundData'\nimport PastLotterySearcher from './PastLotterySearcher'\nimport PastRoundCard from './PastRoundCard'\nimport Loading from '../Loading'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 552px; // height of final card\n`\n\nconst PastLotteryRoundViewer = () => {\n  const [state, setState] = useState({\n    roundData: null,\n    error: { message: null, type: null },\n    isInitialized: false,\n    isLoading: true,\n  })\n  const { data: initialLotteryData, mostRecentLotteryNumber } = useGetRecentLotteryRoundData()\n  const TranslateString = useI18n()\n  const { roundData, error, isInitialized, isLoading } = state\n\n  useEffect(() => {\n    if (initialLotteryData) {\n      setState((prevState) => ({ ...prevState, isLoading: false, isInitialized: true, roundData: initialLotteryData }))\n    }\n  }, [initialLotteryData, setState])\n\n  const handleSubmit = async (lotteryNumber: number) => {\n    setState((prevState) => ({\n      ...prevState,\n      isLoading: true,\n    }))\n\n    getLotteryRoundData(lotteryNumber)\n      .then((data) => {\n        if (data.error) {\n          setState((prevState) => ({\n            ...prevState,\n            error: {\n              message: TranslateString(1076, 'The lottery number you provided does not exist'),\n              type: 'out of range',\n            },\n            isLoading: false,\n            isInitialized: true,\n          }))\n        } else {\n          setState((prevState) => ({\n            ...prevState,\n            error: { message: null, type: null },\n            roundData: data,\n            isLoading: false,\n            isInitialized: true,\n          }))\n        }\n      })\n      .catch(() => {\n        setState((prevState) => ({\n          ...prevState,\n          error: { message: TranslateString(1078, 'Error fetching data'), type: 'api' },\n          isLoading: false,\n          isInitialized: true,\n        }))\n      })\n  }\n\n  return (\n    <Wrapper>\n      <PastLotterySearcher initialLotteryNumber={mostRecentLotteryNumber} onSubmit={handleSubmit} />\n      {!isInitialized || isLoading ? (\n        <Card>\n          <StyledCardBody>\n            <Loading />\n          </StyledCardBody>\n        </Card>\n      ) : (\n        <PastRoundCard error={error} data={roundData} />\n      )}\n    </Wrapper>\n  )\n}\n\nexport default PastLotteryRoundViewer\n","import React, { lazy, Suspense, useContext, useMemo } from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport useI18n from 'hooks/useI18n'\nimport useTheme from 'hooks/useTheme'\nimport Loading from '../Loading'\n\nconst Line = lazy(() => import('./LineChartWrapper'))\nconst Bar = lazy(() => import('./BarChartWrapper'))\n\nconst InnerWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\ninterface HistoryChartProps {\n  showLast: 'max' | number\n}\n\nconst HistoryChart: React.FC<HistoryChartProps> = ({ showLast }) => {\n  const TranslateString = useI18n()\n  const { isDark } = useTheme()\n  const { historyData, historyError } = useContext(PastLotteryDataContext)\n  const getDataArray = (kind) => {\n    const rawData = historyData\n      .map((dataPoint) => {\n        return dataPoint[kind]\n      })\n      .reverse()\n\n    return showLast === 'max' ? rawData : rawData.slice(Number(showLast) * -1)\n  }\n\n  const lineStyles = ({ color }) => {\n    return {\n      borderColor: color,\n      fill: false,\n      borderWidth: 2,\n      pointRadius: 0,\n      pointHitRadius: 10,\n    }\n  }\n\n  const chartData = {\n    labels: getDataArray('lotteryNumber'),\n    datasets: [\n      {\n        label: 'Pool Size',\n        data: getDataArray('poolSize'),\n        yAxisID: 'y-axis-pool',\n        ...lineStyles({ color: '#8F80BA' }),\n      },\n      {\n        label: 'Burned',\n        data: getDataArray('burned'),\n        yAxisID: 'y-axis-burned',\n        ...lineStyles({ color: '#1FC7D4' }),\n      },\n    ],\n  }\n\n  const axesStyles = ({ color, lineHeight }) => {\n    return {\n      borderCapStyle: 'round',\n      gridLines: { display: false },\n      ticks: {\n        fontFamily: 'Kanit, sans-serif',\n        fontColor: color,\n        fontSize: 12,\n        lineHeight,\n        maxRotation: 0,\n        beginAtZero: true,\n        autoSkipPadding: 15,\n        userCallback: (value) => {\n          return value.toLocaleString()\n        },\n      },\n    }\n  }\n\n  const options = useMemo(() => {\n    return {\n      tooltips: {\n        mode: 'index',\n        intersect: false,\n      },\n      legend: { display: false },\n      scales: {\n        yAxes: [\n          {\n            type: 'linear',\n            position: 'left',\n            id: 'y-axis-pool',\n            ...axesStyles({ color: '#8f80ba', lineHeight: 1.6 }),\n          },\n          {\n            type: 'linear',\n            position: 'right',\n            id: 'y-axis-burned',\n            ...axesStyles({ color: '#1FC7D4', lineHeight: 1.5 }),\n          },\n        ],\n        xAxes: [\n          {\n            ...axesStyles({ color: isDark ? '#FFFFFF' : '#452A7A', lineHeight: 1 }),\n          },\n        ],\n      },\n    }\n  }, [isDark])\n\n  return (\n    <>\n      {historyError && (\n        <InnerWrapper>\n          <Text>{TranslateString(1078, 'Error fetching data')}</Text>\n        </InnerWrapper>\n      )}\n      {!historyError && historyData.length > 1 ? (\n        <Suspense fallback={<div>{TranslateString(656, 'Loading...')}</div>}>\n          {showLast === 50 || showLast === 100 ? (\n            <Bar data={chartData} options={options} />\n          ) : (\n            <Line data={chartData} options={options} type=\"line\" />\n          )}\n        </Suspense>\n      ) : (\n        <InnerWrapper>\n          <Loading />\n        </InnerWrapper>\n      )}\n    </>\n  )\n}\n\nexport default HistoryChart\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst Wrapper = styled.div`\n  display: flex;\n  margin: 24px 0 24px;\n`\n\nconst LegendItem = styled.div`\n  display: flex;\n  margin-right: 18px;\n  align-items: center;\n`\n\nconst Circle = styled.div<{ isPoolSize?: boolean }>`\n  width: 20px;\n  height: 20px;\n  border-radius: 10px;\n  background-color: ${({ isPoolSize, theme }) => theme.colors[isPoolSize ? 'textSubtle' : 'primary']};\n  margin-right: 6px;\n`\n\nconst Legend = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <LegendItem>\n        <Circle isPoolSize />\n        <Text>{TranslateString(748, 'Pool Size')}</Text>\n      </LegendItem>\n      <LegendItem>\n        <Circle />\n        <Text>{TranslateString(750, 'Burned')}</Text>\n      </LegendItem>\n    </Wrapper>\n  )\n}\n\nexport default Legend\n","import React, { useState } from 'react'\nimport { Heading, Card, CardBody, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport styled from 'styled-components'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport HistoryChart from './HistoryChart'\nimport Legend from './Legend'\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  flex-direction: column-reverse;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-wrap: nowrap;\n    flex-direction: row;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  margin-top: 24px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 0;\n  }\n\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst PastDrawsHistoryCard: React.FC = () => {\n  const TranslateString = useI18n()\n  const [showLast, setShowLast] = useState<'max' | number>(50)\n  const handleShowLastChange = (option: OptionProps): void => {\n    setShowLast(option.value)\n  }\n\n  return (\n    <Card>\n      <CardBody>\n        <Heading size=\"md\">{TranslateString(746, 'History')}</Heading>\n        <Wrapper>\n          <Legend />\n          <LabelWrapper>\n            <Text textTransform=\"uppercase\">{TranslateString(999, 'Show Last')}</Text>\n            <Select\n              options={[\n                {\n                  label: '50',\n                  value: 50,\n                },\n                {\n                  label: '100',\n                  value: 100,\n                },\n                {\n                  label: '200',\n                  value: 200,\n                },\n                {\n                  label: 'Max',\n                  value: 'max',\n                },\n              ]}\n              onChange={handleShowLastChange}\n            />\n          </LabelWrapper>\n        </Wrapper>\n        <HistoryChart showLast={showLast} />\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default PastDrawsHistoryCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BaseLayout } from '@pancakeswap-libs/uikit'\nimport PastLotteryRoundViewer from './components/PastLotteryRoundViewer'\nimport PastDrawsHistoryCard from './components/PastDrawsHistory/PastDrawsHistoryCard'\n\nconst Cards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 32px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 12;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\n  display: flex;\n  flex-direction: column;\n`\n\nconst BunnyImageWrapper = styled.div`\n  display: flex;\n  margin-top: 32px;\n  justify-content: center;\n`\n\nconst PastDrawsPage: React.FC = () => {\n  return (\n    <Cards>\n      <PastLotteryRoundViewer />\n      <SecondCardColumnWrapper>\n        <PastDrawsHistoryCard />\n        <BunnyImageWrapper>\n          <img src=\"/images/pancake-lottery-bunny.png\" alt=\"lottery bunny\" />\n        </BunnyImageWrapper>\n      </SecondCardColumnWrapper>\n    </Cards>\n  )\n}\n\nexport default PastDrawsPage\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport { getLotteryIssueIndex } from 'utils/lotteryUtils'\nimport useI18n from 'hooks/useI18n'\nimport { useLottery } from 'hooks/useContract'\nimport Page from 'components/layout/Page'\nimport Hero from './components/Hero'\nimport Divider from './components/Divider'\nimport NextDrawPage from './NextDrawPage'\nimport PastDrawsPage from './PastDrawsPage'\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 32px;\n`\n\nconst Lottery: React.FC = () => {\n  const lotteryContract = useLottery()\n  const TranslateString = useI18n()\n  const [activeIndex, setActiveIndex] = useState(0)\n  const [historyData, setHistoryData] = useState([])\n  const [historyError, setHistoryError] = useState(false)\n  const [currentLotteryNumber, setCurrentLotteryNumber] = useState(0)\n  const [mostRecentLotteryNumber, setMostRecentLotteryNumber] = useState(1)\n\n  useEffect(() => {\n    fetch(`https://api.pancakeswap.com/api/lotteryHistory`)\n      .then((response) => response.json())\n      .then((data) => setHistoryData(data))\n      .catch(() => {\n        setHistoryError(true)\n      })\n  }, [])\n\n  useEffect(() => {\n    const getInitialLotteryIndex = async () => {\n      const index = await getLotteryIssueIndex(lotteryContract)\n      const previousLotteryNumber = index - 1\n\n      setCurrentLotteryNumber(index)\n      setMostRecentLotteryNumber(previousLotteryNumber)\n    }\n\n    if (lotteryContract) {\n      getInitialLotteryIndex()\n    }\n  }, [lotteryContract])\n\n  const handleClick = (index) => {\n    setActiveIndex(index)\n  }\n\n  return (\n    <>\n      <Hero />\n      <Page>\n        <Wrapper>\n          <ButtonMenu activeIndex={activeIndex} onItemClick={handleClick} scale=\"sm\" variant=\"subtle\">\n            <ButtonMenuItem>{TranslateString(716, 'Next draw')}</ButtonMenuItem>\n            <ButtonMenuItem>{TranslateString(718, 'Past draws')}</ButtonMenuItem>\n          </ButtonMenu>\n        </Wrapper>\n        <Divider />\n        <PastLotteryDataContext.Provider\n          value={{ historyError, historyData, mostRecentLotteryNumber, currentLotteryNumber }}\n        >\n          {activeIndex === 0 ? <NextDrawPage /> : <PastDrawsPage />}\n        </PastLotteryDataContext.Provider>\n      </Page>\n    </>\n  )\n}\n\nexport default Lottery\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = Math.abs(seconds)\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void\n  expanded?: boolean\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\n      <Text color=\"primary\" bold>\n        {expanded ? TranslateString(1066, 'Hide') : TranslateString(658, 'Details')}\n      </Text>\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n    </Wrapper>\n  )\n}\n\nExpandableSectionButton.defaultProps = {\n  expanded: false,\n}\n\nexport default ExpandableSectionButton\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Text } from '@pancakeswap-libs/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\n  cursor: pointer;\n  width: ${({ width }) => width}px;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps {\n  options: OptionProps[]\n  onChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\n  const containerRef = useRef(null)\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOption, setSelectedOption] = useState(options[0])\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\n\n  const toggling = () => setIsOpen(!isOpen)\n\n  const onOptionClicked = (option: OptionProps) => () => {\n    setSelectedOption(option)\n    setIsOpen(false)\n\n    if (onChange) {\n      onChange(option)\n    }\n  }\n\n  useEffect(() => {\n    setContainerSize({\n      width: dropdownRef.current.offsetWidth, // Consider border\n      height: dropdownRef.current.offsetHeight,\n    })\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\n      {containerSize.width !== 0 && (\n        <DropDownHeader onClick={toggling}>\n          <Text>{selectedOption.label}</Text>\n        </DropDownHeader>\n      )}\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option) =>\n            option.label !== selectedOption.label ? (\n              <ListItem onClick={onOptionClicked(option)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n"],"sourceRoot":""}